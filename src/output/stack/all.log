node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$200;Lavrora.sim.mcu.Timer16Bit;::tickerStart;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::compare;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::read;Lavrora.sim.mcu.AtmelInternalDevice;::read16;Lavrora.sim.mcu.Timer16Bit$BufferedRegister;::read;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PCLKOutput;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::access$200;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::clockInBit;Lavrora.sim.radio.CC1000Radio$RadioRegister;::write;Interpreter;Lavrora.sim.clock.MainClock;::insertEvent;Lavrora.sim.clock.DeltaQueue;::insertEvent;Lavrora.sim.clock.DeltaQueue;::insertAfter;UncommonTrapBlob;Deoptimization::uncommon_trap(JavaThread*, int);Deoptimization::uncommon_trap_inner(JavaThread*, int);Deoptimization::revoke_biases_of_monitors(JavaThread*, frame, RegisterMap*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::Dominators();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$LPMD;::accept;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_exceptions();Parse::throw_to_exit(SafePointNode*);GraphKit::set_map_clone(SafePointNode*);GraphKit::clone_map();Type_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$300;Lavrora.sim.mcu.Timer16Bit;::tickerFinish;Lavrora.sim.clock.MainClock;::insertEvent;Lavrora.sim.clock.DeltaQueue;::insertEvent;Lavrora.sim.clock.DeltaQueue;::insertAfter;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ReenterI(Thread*, ObjectWaiter*);os::PlatformEvent::park() 1
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseCCP::analyze();VectorSet::VectorSet(Arena*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;[unknown];Lavrora.arch.legacy.LegacyInterpreter;::visit;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CPSE;::accept;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_field_access(bool, bool);Parse::do_put_xxx(Node*, ciField*, bool);PhaseGVN::transform_no_reclaim(Node*);TypeInstPtr::add_offset(long) const;Type::hashcons();Dict::Insert(void*, void*, bool);Dict::doubhash();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_code_body();LIR_Assembler::emit_code(BlockList*);LIR_OpBranch::emit_code(LIR_Assembler*);Assembler::jcc(Assembler::Condition, Label&, bool);Label::add_patch_at(CodeBuffer*, int);CodeBuffer::create_patch_overflow();Arena::Arena(MemoryType);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_exits();GraphKit::shared_unlock(Node*, Node*);Node::out_grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;Ljava.util.AbstractSequentialList;::iterator;Ljava.util.AbstractList;::listIterator;Ljava.util.LinkedList;::listIterator;UncommonTrapBlob;Deoptimization::uncommon_trap(JavaThread*, int);Deoptimization::uncommon_trap_inner(JavaThread*, int);Deoptimization::revoke_biases_of_monitors(JavaThread*, frame, RegisterMap*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$200;Lavrora.sim.mcu.Timer16Bit;::tickerStart;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::compare;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::read;Lavrora.sim.mcu.AtmelInternalDevice;::read16;Lavrora.sim.mcu.Timer16Bit$BufferedRegister;::read;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;Lsun.nio.cs.StreamEncoder;::write;Lsun.nio.cs.StreamEncoder;::implWrite;Ljava.nio.charset.CharsetEncoder;::encode;Ljava.nio.charset.CoderResult;::isOverflow;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_method_entry();GraphKit::make_dtrace_method_entry_exit(ciMethod*, bool);GraphKit::kill_dead_locals();ciMethod::liveness_at_bci(int);MethodLiveness::compute_liveness();MethodLiveness::init_basic_blocks();MethodLiveness::BasicBlock::BasicBlock(MethodLiveness*, int, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();GlobalValueNumbering::GlobalValueNumbering(IR*);ValueMap::find_insert(Instruction*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$LD;::accept;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);BlockBegin::operator new(unsigned long);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::connect_to_end(BlockBegin*);ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::set_results_for_java_call(CallJavaNode*, bool);GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CPC;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::getRegisterByte;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;[unknown];Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;[unknown];[unknown];Ljava.io.Writer;::write;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::build_dominator_tree();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PCLKOutput;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::access$200;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::clockInBit;Lavrora.sim.radio.CC1000Radio$RadioRegister;::write;Lavrora.sim.radio.CC1000Radio$MainRegister;::decode;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);PhaseChaitin::split_DEF(Node*, Block*, int, unsigned int, Node**, Node**, GrowableArray<unsigned int>, int);Node::add_req(Node*);Node::grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer8Bit$Mode_CTC;::fire;Lavrora.sim.mcu.Timer8Bit;::access$000;Lavrora.sim.mcu.Timer8Bit;::tickerStart;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::array_store(BasicType);GraphKit::array_element_address(Node*, Node*, BasicType, TypeInt const*, Node*);PhaseGVN::transform_no_reclaim(Node*);Type_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;Ljava.util.AbstractSequentialList;::iterator;Ljava.util.AbstractList;::listIterator;Ljava.util.LinkedList;::listIterator;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_If(If*);LIR_List::move(LIR_OprDesc*, LIR_Address*, CodeEmitInfo*);ResourceArray::expand(unsigned long, int, int&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBCI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::set_results_for_java_call(CallJavaNode*, bool);GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool);GraphKit::clone_map();MergeMemNode::make(Compile*, Node*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ADC$ControlRegister;::write;Lavrora.sim.AtmelInterpreter;::setEnabled;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_field_access(bool, bool);Parse::do_get_xxx(Node*, ciField*, bool);PhaseTransform::longcon(long);PhaseValues::uncached_makecon(Type const*);ConNode::make(Compile*, Type const*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_Base(Base*);LIRGenerator::increment_event_counter(CodeEmitInfo*, int, bool);LIRGenerator::increment_event_counter_impl(CodeEmitInfo*, ciMethod*, int, int, bool, bool);LIR_List::logical_and(LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::connect_to_end(BlockBegin*);ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;Ljava.io.PrintStream;::write;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;Lsun.nio.cs.StreamEncoder;::write;Lsun.nio.cs.StreamEncoder;::implWrite->Ljava.nio.CharBuffer;::wrap->Ljava.nio.HeapCharBuffer;::<init>->Ljava.nio.CharBuffer;::<init>;Ljava.nio.Buffer;::<init>;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::Output();Compile::BuildOopMaps();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);IdealLoopTree::counted_loop(PhaseIdealLoop*);IdealLoopTree::counted_loop(PhaseIdealLoop*);PhaseIdealLoop::is_counted_loop(Node*, IdealLoopTree*);PhaseIdealLoop::set_idom(Node*, Node*, unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_field_access(bool, bool);GraphKit::null_check_common(Node*, BasicType, bool, Node**) [clone .part.293];BuildCutout::BuildCutout(GraphKit*, Node*, float, float);PhaseGVN::transform_no_reclaim(Node*);Type_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::fill_buffer(CodeBuffer*, unsigned int*);DebugInformationRecorder::describe_scope(int, ciMethod*, int, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*);ValueRecorder<Metadata*>::maybe_find_index(Metadata*);ValueRecorder<Metadata*>::maybe_initialize();GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SLEEP;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.arch.legacy.LegacyInterpreter;::enterSleepMode;Lavrora.sim.mcu.AtmelMicrocontroller;::sleep;Lavrora.sim.mcu.ATMega128;::getSleepMode;Interpreter;UncommonTrapBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::build_loop_tree();GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);ciMethod::ensure_method_data();ciMethod::ensure_method_data(methodHandle);ciMethodData::load_data();DataLayout::data_in();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::setup_start_block(int, BlockBegin*, BlockBegin*, ValueStack*);GraphBuilder::header_block(BlockBegin*, BlockBegin::Flag, ValueStack*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);ValueStack::copy(ValueStack::Kind, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;[unknown];Ljava.io.OutputStreamWriter;::flushBuffer;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::array_load(BasicType);GraphKit::array_element_address(Node*, Node*, BasicType, TypeInt const*, Node*);Node::Node(Node*, Node*, Node*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::setup_start_block(int, BlockBegin*, BlockBegin*, ValueStack*);GraphBuilder::header_block(BlockBegin*, BlockBegin::Flag, ValueStack*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_code_body();LIR_Assembler::emit_code(BlockList*);LIR_OpTypeCheck::emit_code(LIR_Assembler*);LIR_Assembler::emit_opTypeCheck(LIR_OpTypeCheck*);LIR_Assembler::emit_typecheck_helper(LIR_OpTypeCheck*, Label*, Label*, Label*);LIR_Assembler::type_profile_helper(RegisterImpl*, ciMethodData*, ProfileData*, RegisterImpl*, Label*);Assembler::jmp(Label&, bool);Label::add_patch_at(CodeBuffer*, int);CodeBuffer::create_patch_overflow();Arena::Arena(MemoryType);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ADC$ControlRegister;::write;[unknown];[unknown];[unknown];Lavrora.sim.mcu.ADC$MUXRegister;::getSingleIndex;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-22;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_exceptions();Parse::catch_inline_exceptions(SafePointNode*);Parse::catch_call_exceptions(ciExceptionHandlerStream&);TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool);Type::hashcons();Dict::Insert(void*, void*, bool);Dict::doubhash();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_if(BoolTest::mask, Node*);PreserveJVMState::PreserveJVMState(GraphKit*, bool);GraphKit::clone_map();Node::clone() const;Node::out_grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ReenterI(Thread*, ObjectWaiter*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseCCP::analyze();Type::hashcons();Dict::Insert(void*, void*, bool);Dict::doubhash();Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Matcher::match_tree(Node const*);Matcher::Label_Root(Node const*, State*, Node*, Node const*);Matcher::Label_Root(Node const*, State*, Node*, Node const*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::PhaseChaitin(unsigned int, PhaseCFG&, Matcher&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);IdealLoopTree::counted_loop(PhaseIdealLoop*);IdealLoopTree::counted_loop(PhaseIdealLoop*);PhaseIdealLoop::is_counted_loop(Node*, IdealLoopTree*);Node::clone() const;Compile::copy_node_notes_to(Node*, Node*);Compile::grow_node_notes(GrowableArray<Node_Notes*>*, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$ANDI;::accept;Interpreter;UncommonTrapBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::Dominators();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PCLKOutput;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::access$200;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::clockInBit;Lavrora.sim.radio.CC1000Radio$RadioRegister;::write;Interpreter;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
Attach Listener;start_thread;java_start(Thread*);JavaThread::thread_main_inner();attach_listener_thread_entry(JavaThread*, Thread*);JvmtiExport::load_agent_library(AttachOperation*, outputStream*);os::find_builtin_agent(AgentLibrary*, char const**, unsigned long);os::dll_lookup(void*, char const*) 1
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$300;Lavrora.sim.mcu.Timer16Bit;::tickerFinish;Lavrora.sim.clock.MainClock;::insertEvent;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::invokeInterrupt;Lavrora.arch.legacy.LegacyInterpreter;::leaveSleepMode;Lavrora.sim.mcu.AtmelMicrocontroller;::wakeup;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::global_code_motion();PhaseCFG::schedule_local(Block*, GrowableArray<int>&, VectorSet&);PhaseCFG::sched_call(Block*, unsigned int, Node_List&, GrowableArray<int>&, MachCallNode*, VectorSet&);Node_Array::insert(unsigned int, Node*);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$200;Lavrora.sim.mcu.Timer16Bit;::tickerStart;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::compare;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::read;Lavrora.sim.mcu.AtmelInternalDevice;::read16;Lavrora.sim.mcu.Timer16Bit$BufferedRegister;::read;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();RangeCheckElimination::eliminate(IR*);RangeCheckEliminator::RangeCheckEliminator(IR*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::renderPacket;Lavrora.sim.output.SimPrinter;::getBuffer->Lavrora.sim.util.SimUtil;::getIDTimeString;Lavrora.sim.util.SimUtil;::toIDTimeString->Lcck.text.StringUtil;::justify;Ljava.lang.Long;::toString;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_If(If*);LIR_List::move(LIR_OprDesc*, LIR_Address*, CodeEmitInfo*);ResourceArray::expand(unsigned long, int, int&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_RuntimeCall(RuntimeCall*);LIRGenerator::call_runtime(BasicTypeArray*, LIR_OprList*, unsigned char*, ValueType*, CodeEmitInfo*);LIR_List::move(LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*) [clone .constprop.386];ResourceArray::expand(unsigned long, int, int&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Transmitter$Ticker;::fire;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PCLKOutput;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::access$200;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::clockInBit;Lavrora.sim.radio.CC1000Radio$RadioRegister;::write;Interpreter;Lavrora.sim.clock.MainClock;::insertEvent;Lavrora.sim.clock.DeltaQueue;::insertEvent;Lavrora.sim.clock.DeltaQueue;::insertAfter;UncommonTrapBlob;Deoptimization::fetch_unroll_info_helper(JavaThread*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$IN;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::getIORegisterByte;Lavrora.sim.AtmelInterpreter;::readSRAM;Lavrora.sim.AtmelInterpreter;::readVolatile;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$300;Lavrora.sim.mcu.Timer16Bit;::tickerFinish;Lavrora.sim.clock.MainClock;::insertEvent;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::method_return(Instruction*);Instruction::operator new(unsigned long) [clone .constprop.471];Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$LD;::accept;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int);BlockListBuilder::set_leaders();ciMethod::bci_block_start();MethodLiveness::compute_liveness();MethodLiveness::init_basic_blocks();MethodLiveness::BasicBlock::BasicBlock(MethodLiveness*, int, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ReenterI(Thread*, ObjectWaiter*);os::PlatformEvent::park() 1
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::setup_start_block(int, BlockBegin*, BlockBegin*, ValueStack*);BlockBegin::try_merge(ValueStack*);ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();GraphKit::add_predicate_impl(Deoptimization::DeoptReason, int);GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool);HaltNode::HaltNode(Node*, Node*);Node::Node(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::build_loop_early(VectorSet&, Node_List&, Node_Stack&);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::number_instructions();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$IN;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$IN;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::return_current(Node*);PhiNode::slice_memory(TypePtr const*) const;Node::clone() const;Node::out_grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::access_field(Bytecodes::Code);Instruction::operator new(unsigned long);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_RuntimeCall(RuntimeCall*);LIRGenerator::call_runtime(BasicTypeArray*, LIR_OprList*, unsigned char*, ValueType*, CodeEmitInfo*);LIR_List::move(LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*) [clone .constprop.386];Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::Dominators();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::global_code_motion();PhaseCFG::schedule_early(VectorSet&, Node_List&);PhaseCFG::replace_block_proj_ctrl(Node*);Node::out_grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();attach_listener_thread_entry(JavaThread*, Thread*);JvmtiExport::load_agent_library(AttachOperation*, outputStream*);Agent_OnAttach;jvmti_GenerateEvents;JvmtiCodeBlobEvents::generate_compiled_method_load_events(JvmtiEnv*);JvmtiExport::post_compiled_method_load(nmethod*);JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*);ScopeDesc::sender() const;Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer8Bit$Mode_CTC;::fire;Lavrora.sim.mcu.Timer8Bit;::access$000;UncommonTrapBlob;Deoptimization::fetch_unroll_info_helper(JavaThread*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer8Bit$Mode_CTC;::fire;Lavrora.sim.mcu.Timer8Bit;::access$000;UncommonTrapBlob;Deoptimization::uncommon_trap(JavaThread*, int);Deoptimization::uncommon_trap_inner(JavaThread*, int);Deoptimization::revoke_biases_of_monitors(JavaThread*, frame, RegisterMap*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$BRNE;::accept;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::post_allocate_copy_removal();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine->Ljava.io.OutputStreamWriter;::flushBuffer;Lsun.nio.cs.StreamEncoder;::flushBuffer;Lsun.nio.cs.StreamEncoder;::implFlushBuffer;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&);IndexSet::alloc_block_containing(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_LoadIndexed(LoadIndexed*);LIRGenerator::walk(Instruction*);LIRGenerator::do_ArithmeticOp_Int(ArithmeticOp*);LIRGenerator::arithmetic_op_int(Bytecodes::Code, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*);LIRGenerator::arithmetic_op(Bytecodes::Code, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*, bool, LIR_OprDesc*, CodeEmitInfo*);LIR_List::move(LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*) [clone .constprop.386];Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();GraphKit::record_profile_for_speculation(Node*, ciKlass*);GraphKit::replace_in_map(Node*, Node*);Node::replace_edge(Node*, Node*);Node::out_grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PCLKOutput;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::access$200;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::clockInBit;Lavrora.sim.radio.CC1000Radio$RadioRegister;::write;Lavrora.sim.radio.CC1000Radio$MainRegister;::decode;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$300;Lavrora.sim.mcu.Timer16Bit;::tickerFinish;Lavrora.sim.clock.MainClock;::insertEvent;Lavrora.sim.clock.DeltaQueue;::insertEvent;Lavrora.sim.clock.DeltaQueue;::insertAfter;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_RuntimeCall(RuntimeCall*);ResourceArray::expand(unsigned long, int, int&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_field_access(bool, bool);Parse::do_get_xxx(Node*, ciField*, bool);Compile::alias_type(ciField*);TypeInstPtr::add_offset(long) const;TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypeOopPtr const*, int);TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypeOopPtr const*, int);ciInstanceKlass::get_field_by_offset(int, bool);ciInstanceKlass::compute_nonstatic_fields();ciInstanceKlass::super();ciObjectFactory::get_metadata(Metadata*);ciObjectFactory::create_new_metadata(Metadata*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::PhaseChaitin(unsigned int, PhaseCFG&, Matcher&);GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_if(BoolTest::mask, Node*);GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool);HaltNode::HaltNode(Node*, Node*);Node::Node(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_field_access(bool, bool);GraphKit::null_check_common(Node*, BasicType, bool, Node**) [clone .part.293];GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool);GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*);PhaseGVN::transform_no_reclaim(Node*);Type_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.CC1000Radio$SPITicker;::fire;Lavrora.sim.clock.MainClock;::getCount;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_code_body();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_if(BoolTest::mask, Node*);PreserveJVMState::PreserveJVMState(GraphKit*, bool);GraphKit::clone_map();Type_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::Output();Compile::init_buffer(unsigned int*);Compile::shorten_branches(unsigned int*, int&, int&, int&);jmpConNode::short_branch_version(Compile*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&);IndexSet::alloc_block_containing(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$300;Lavrora.sim.mcu.Timer16Bit;::tickerFinish;Lavrora.sim.mcu.AtmelInternalDevice;::write16;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$ANDI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();GraphKit::add_predicate_impl(Deoptimization::DeoptReason, int);GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool);HaltNode::HaltNode(Node*, Node*);Node::Node(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::allocate_registers();IntervalWalker::walk_to(int);LinearScanWalker::activate_current();LinearScanWalker::insert_move(int, Interval*, Interval*);MoveResolver::resolve_mappings();MoveResolver::insert_move(Interval*, Interval*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);PhaseChaitin::split_USE(Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray<unsigned int>, int);PhaseChaitin::get_spillcopy_wide(Node*, Node*, unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);BlockListBuilder::mark_loops();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
Attach Listener;start_thread;java_start(Thread*);JavaThread::thread_main_inner();attach_listener_thread_entry(JavaThread*, Thread*);JvmtiExport::load_agent_library(AttachOperation*, outputStream*);os::find_agent_function(AgentLibrary*, bool, char const**, unsigned long);os::dll_lookup(void*, char const*) 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::resolve_data_flow();MoveResolver::resolve_and_append_moves();MoveResolver::resolve_mappings();MoveResolver::insert_move(Interval*, Interval*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$BRNE;::accept;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();PhaseGVN::transform_no_reclaim(Node*);Type::hashcons();Dict::Insert(void*, void*, bool);Dict::doubhash();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::null_check_common(Node*, BasicType, bool, Node**) [clone .part.293];BuildCutout::BuildCutout(GraphKit*, Node*, float, float);GraphKit::clone_map();Node::clone() const;Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;Lsun.nio.cs.StreamEncoder;::write;[unknown];Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$MOVW;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::getRegisterWord;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);BlockBegin::try_merge(ValueStack*);ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead->Lavrora.sim.clock.DeltaQueue$Link;::fire;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;InterpreterRuntime::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();GraphKit::record_profile_for_speculation(Node*, ciKlass*);Type::hashcons();Dict::Insert(void*, void*, bool);Dict::doubhash();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();attach_listener_thread_entry(JavaThread*, Thread*);JvmtiExport::load_agent_library(AttachOperation*, outputStream*);os::find_builtin_agent(AgentLibrary*, char const**, unsigned long);os::dll_lookup(void*, char const*) 1
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::access_field(Bytecodes::Code);GraphBuilder::copy_state_for_exception();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$ANDI;::accept;UncommonTrapBlob;Deoptimization::uncommon_trap(JavaThread*, int);Deoptimization::uncommon_trap_inner(JavaThread*, int);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::set_results_for_java_call(CallJavaNode*, bool);GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool);Node::Node(Node*);Compile::grow_node_notes(GrowableArray<Node_Notes*>*, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer;Ljava.lang.StringBuffer;::toString;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$200;Lavrora.sim.mcu.Timer16Bit;::tickerStart;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::compare;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::read;Lavrora.sim.mcu.AtmelInternalDevice;::read16;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseMacroExpand::expand_macro_nodes();PhaseMacroExpand::expand_lock_node(LockNode*);PhaseMacroExpand::opt_bits_test(Node*, Node*, int, Node*, int, int, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::invokeInterrupt;Lavrora.arch.legacy.LegacyInterpreter;::leaveSleepMode;Lavrora.sim.mcu.AtmelMicrocontroller;::wakeup;Lavrora.sim.FiniteStateMachine;::transition;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int);BlockListBuilder::set_leaders();BlockListBuilder::make_block_at(int, BlockBegin*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::global_code_motion();PhaseCFG::schedule_late(VectorSet&, Node_List&);PhaseCFG::insert_anti_dependences(Block*, Node*, bool);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&);IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&);PhaseIdealLoop::do_maximally_unroll(IdealLoopTree*, Node_List&);PhaseIdealLoop::do_peeling(IdealLoopTree*, Node_List&);PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&, int, Node*);PhaseIdealLoop::set_idom(Node*, Node*, unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;Ljava.util.AbstractSequentialList;::iterator;Ljava.util.AbstractList;::listIterator;Ljava.util.LinkedList;::listIterator;UncommonTrapBlob;Deoptimization::fetch_unroll_info_helper(JavaThread*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int);BlockListBuilder::set_leaders();ciMethod::bci_block_start();MethodLiveness::compute_liveness();MethodLiveness::init_basic_blocks();MethodLiveness::BasicBlock::BasicBlock(MethodLiveness*, int, int);GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();RangeCheckElimination::eliminate(IR*);RangeCheckEliminator::RangeCheckEliminator(IR*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];Lavrora.monitors.PacketMonitor$Mon;::renderPacket;[unknown];[unknown];Ljava.lang.Float;::isNaN;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];Lavrora.sim.output.SimPrinter;::printBuffer;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseCCP::analyze();Type::hashcons();Dict::Insert(void*, void*, bool);Dict::doubhash();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ADC$ControlRegister;::write;Lavrora.sim.mcu.ADC$ControlRegister;::startConversion;[unknown];Lavrora.sim.mcu.ADC$MUXRegister;::isSingleEnded;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$200;Lavrora.sim.mcu.Timer16Bit;::tickerStart;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::compare;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;Lsun.nio.cs.StreamEncoder;::write;[unknown];Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer8Bit$Mode_CTC;::fire;Lavrora.sim.mcu.Timer8Bit;::access$000;Lavrora.sim.mcu.Timer8Bit;::tickerStart;Lavrora.sim.mcu.Timer8Bit$BufferedRegister;::read;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Transmitter$Ticker;::fire;[unknown];Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$300;Lavrora.sim.mcu.Timer16Bit;::tickerFinish;Lavrora.sim.clock.MainClock;::insertEvent;Lavrora.sim.clock.DeltaQueue;::insertEvent;Lavrora.sim.clock.DeltaQueue;::insertAfter;Lavrora.sim.clock.DeltaQueue;::newLink;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PCLKOutput;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::access$200;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::clockInBit;Lavrora.sim.radio.CC1000Radio$RadioRegister;::write;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_Invoke(Invoke*);LIRGenerator::invoke_load_arguments(Invoke*, LIRItemList*, LIR_OprList const*);LIRItem::load_item_force(LIR_OprDesc*);LIR_List::move(LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*) [clone .constprop.386];ResourceArray::expand(unsigned long, int, int&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_ProfileInvoke(ProfileInvoke*);LIRGenerator::state_for(Instruction*, ValueStack*, bool);ciMethod::liveness_at_bci(int);MethodLiveness::get_liveness_at(int);MethodLiveness::BasicBlock::get_liveness_at(ciMethod*, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;Lsun.nio.cs.StreamEncoder;::write;Lsun.nio.cs.StreamEncoder;::implWrite;Ljava.nio.charset.CharsetEncoder;::encode;Ljava.nio.charset.CoderResult;::isOverflow;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_Return(Return*);LIRGenerator::call_runtime(BasicTypeArray*, LIR_OprList*, unsigned char*, ValueType*, CodeEmitInfo*);LIR_List::call_runtime_leaf(unsigned char*, LIR_OprDesc*, LIR_OprDesc*, LIR_OprList*);ResourceArray::expand(unsigned long, int, int&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$BasicArbitrator;::mergeTransmissions;Ljava.util.AbstractSequentialList;::iterator;Ljava.util.AbstractList;::listIterator;Ljava.util.LinkedList;::listIterator;_new_instance_Java;OptoRuntime::new_instance_C(Klass*, JavaThread*);InstanceKlass::allocate_instance(Thread*);GenCollectorPolicy::mem_allocate_work(unsigned long, bool, bool*);VMThread::execute(VM_Operation*);os::PlatformEvent::unpark() 1
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::post_allocate_copy_removal();GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::if_null(ValueType*, Instruction::Condition);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$MOVW;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::getRegisterWord;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;[unknown];Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;[unknown];[unknown];Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&);Node_List::push(Node*);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$300;Lavrora.sim.mcu.Timer16Bit;::tickerFinish;Lavrora.sim.clock.MainClock;::insertEvent;Lavrora.sim.clock.DeltaQueue;::insertEvent;Lavrora.sim.clock.DeltaQueue;::insertAfter;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;Ljava.io.PrintStream;::write;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;Lsun.nio.cs.StreamEncoder;::write;[unknown];Ljava.nio.charset.CoderResult;::isUnderflow;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
Attach Listener;[unknown];_dl_add_to_namespace_list 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::connect_to_end(BlockBegin*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);BlockListBuilder::mark_loops();Chunk::next_chop();ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseMacroExpand::expand_macro_nodes();PhaseIterGVN::optimize();PhaseIterGVN::transform_old(Node*);MulNode::Identity(PhaseTransform*);Type::hashcons();Dict::Insert(void*, void*, bool);Dict::doubhash();Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_Base(Base*);LIRGenerator::increment_event_counter(CodeEmitInfo*, int, bool);LIRGenerator::increment_event_counter_impl(CodeEmitInfo*, ciMethod*, int, int, bool, bool);LIR_List::logical_and(LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_ProfileInvoke(ProfileInvoke*);LIR_List::branch_destination(Label*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$200;Lavrora.sim.mcu.Timer16Bit;::tickerStart;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::compare;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::read;Lavrora.sim.mcu.AtmelInternalDevice;::read16;Lavrora.sim.mcu.Timer16Bit$BufferedRegister;::read;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);BlockBegin::try_merge(ValueStack*);ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$300;Lavrora.sim.mcu.Timer16Bit;::tickerFinish;Lavrora.sim.mcu.AtmelInternalDevice;::write16;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseAggressiveCoalesce::insert_copies(Matcher&);GrowableArray<unsigned int>::raw_at_put_grow(int, unsigned int const&, unsigned int const&);GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];Lcck.text.Terminal;::println;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PCLKOutput;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::access$200;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::clockInBit;Lavrora.sim.radio.CC1000Radio$RadioRegister;::write;Interpreter;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Matcher::match_tree(Node const*);Matcher::ReduceInst(State*, int, Node*&);Node::add_req(Node*);Node::grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CPC;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::getRegisterByte;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::post_allocate_copy_removal();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);ciBytecodeStream::get_method(bool&, ciSignature**);ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*);ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*);ciObjectFactory::get_metadata(Metadata*);ciObjectFactory::create_new_metadata(Metadata*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_method_entry();GraphKit::make_dtrace_method_entry_exit(ciMethod*, bool);GraphKit::kill_dead_locals();ciMethod::liveness_at_bci(int);MethodLiveness::compute_liveness();MethodLiveness::init_basic_blocks();MethodLiveness::BasicBlock::BasicBlock(MethodLiveness*, int, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ADC$ControlRegister;::write;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_field_access(bool, bool);GraphKit::null_check_common(Node*, BasicType, bool, Node**) [clone .part.293];BuildCutout::BuildCutout(GraphKit*, Node*, float, float);PhaseGVN::transform_no_reclaim(Node*);Type_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::renderPacket;Lavrora.monitors.PacketMonitor$Mon;::renderByte;Lavrora.monitors.PacketMonitor$Mon;::renderByte;Lcck.text.StringUtil;::toHex;_new_array_Java;OptoRuntime::new_array_C(Klass*, int, JavaThread*);TypeArrayKlass::allocate_common(int, bool, Thread*);GenCollectorPolicy::mem_allocate_work(unsigned long, bool, bool*);VMThread::execute(VM_Operation*);Monitor::wait(bool, long, bool);Monitor::IWait(Thread*, long);os::PlatformEvent::park() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::global_code_motion();PhaseCFG::schedule_early(VectorSet&, Node_List&);PhaseCFG::replace_block_proj_ctrl(Node*);Node::out_grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Matcher::match_sfpt(SafePointNode*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$ADC;::accept;UncommonTrapBlob;Deoptimization::uncommon_trap(JavaThread*, int);Deoptimization::uncommon_trap_inner(JavaThread*, int);Deoptimization::revoke_biases_of_monitors(JavaThread*, frame, RegisterMap*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();attach_listener_thread_entry(JavaThread*, Thread*);JvmtiExport::load_agent_library(AttachOperation*, outputStream*);os::find_builtin_agent(AgentLibrary*, char const**, unsigned long);os::dll_lookup(void*, char const*) 1
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;[unknown];Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;Ljava.io.PrintStream;::write;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;Lsun.nio.cs.StreamEncoder;::write;[unknown];[unknown];Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Transmitter$Ticker;::fire;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::eliminate_null_checks();Optimizer::eliminate_null_checks();NullCheckEliminator::iterate_one(BlockBegin*);NullCheckEliminator::merge_state_for(BlockBegin*, ValueSet*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_if(BoolTest::mask, Node*);Node::Node(unsigned int);Compile::grow_node_notes(GrowableArray<Node_Notes*>*, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();RangeCheckElimination::eliminate(IR*);RangeCheckEliminator::RangeCheckEliminator(IR*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;[unknown];Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireBefore;Lavrora.sim.util.MulticastFSMProbe;::fireBeforeTransition;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);IdealLoopTree::counted_loop(PhaseIdealLoop*);IdealLoopTree::counted_loop(PhaseIdealLoop*);PhaseIdealLoop::is_counted_loop(Node*, IdealLoopTree*);PhaseIdealLoop::set_idom(Node*, Node*, unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::estimate_block_frequency();PhaseCFG::create_loop_tree();GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$OR;::accept;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::append_with_bci(Instruction*, int);ValueStack::copy(ValueStack::Kind, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::global_code_motion();PhaseCFG::implicit_null_check(Block*, Node*, Node*, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);PhaseChaitin::split_USE(Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray<unsigned int>, int);Node::out_grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::method_return(Instruction*);ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_exceptions();Parse::catch_inline_exceptions(SafePointNode*);LoadKlassNode::make(PhaseGVN&, Node*, Node*, Node*, TypePtr const*, TypeKlassPtr const*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
Service Thread;start_thread;java_start(Thread*);JavaThread::thread_main_inner();ServiceThread::service_thread_entry(JavaThread*, Thread*);JvmtiDeferredEvent::post();JvmtiExport::post_compiled_method_load(nmethod*);create_inline_record(nmethod*);nmethod::scope_desc_at(unsigned char*);ScopeDesc::ScopeDesc(nmethod const*, int, int, bool, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;Lsun.nio.cs.StreamEncoder;::write;[unknown];Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::allocate_registers();IntervalWalker::walk_to(int);LinearScanWalker::activate_current();LinearScanWalker::alloc_free_reg(Interval*);LinearScanWalker::split_before_usage(Interval*, int, int);ResourceArray::expand(unsigned long, int, int&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ADC$ControlRegister;::write;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$BasicArbitrator;::mergeTransmissions;Ljava.util.AbstractSequentialList;::iterator;Ljava.util.AbstractList;::listIterator;Ljava.util.LinkedList;::listIterator;_new_instance_Java;OptoRuntime::new_instance_C(Klass*, JavaThread*);InstanceKlass::allocate_instance(Thread*);GenCollectorPolicy::mem_allocate_work(unsigned long, bool, bool*);VMThread::execute(VM_Operation*);Monitor::wait(bool, long, bool);Monitor::IWait(Thread*, long);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::Output();Compile::init_buffer(unsigned int*);Compile::shorten_branches(unsigned int*, int&, int&, int&);jmpDirNode::short_branch_version(Compile*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::invokeInterrupt;Lavrora.arch.legacy.LegacyInterpreter;::leaveSleepMode;Lavrora.sim.mcu.AtmelMicrocontroller;::wakeup;Interpreter;UncommonTrapBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::renderPacket;[unknown];Ljava.lang.StringBuffer;::<init>;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::compute_use_counts();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_LoadField(LoadField*);LIRGenerator::generate_address(LIR_OprDesc*, LIR_OprDesc*, int, int, BasicType);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();Compile::final_graph_reshaping();Compile::final_graph_reshaping_walk(Node_Stack&, Node*, Final_Reshape_Counts&);Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&);Node::clone() const;Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$BRNE;::accept;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();VirtualCallGenerator::generate(JVMState*);GraphKit::set_edges_for_java_call(CallJavaNode*, bool, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::Dominators();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::assign_reg_num();LinearScan::assign_reg_num(LIR_OpList*, IntervalWalker*);LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*);LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];Lavrora.sim.mcu.ADC$ControlRegister;::access$100;Lavrora.sim.mcu.ADC$ControlRegister;::convertVoltage;Lavrora.sim.radio.CC1000Radio$RSSIOutput;::getVoltage;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::fill_buffer(CodeBuffer*, unsigned int*);Compile::Process_OopMap_Node(MachNode*, int);GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&);Node_List::push(Node*);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*);ConnectionGraph::compute_escape();ConnectionGraph::process_call_arguments(CallNode*);ciMethod::get_bcea();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;Ljava.lang.StringBuffer;::toString;_new_instance_Java;OptoRuntime::new_instance_C(Klass*, JavaThread*);InstanceKlass::allocate_instance(Thread*);GenCollectorPolicy::mem_allocate_work(unsigned long, bool, bool*);VMThread::execute(VM_Operation*);Monitor::wait(bool, long, bool);Monitor::IWait(Thread*, long);os::PlatformEvent::park() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::assign_reg_num();LinearScan::init_compute_oop_maps();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);Instruction::operator new(unsigned long);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();RangeCheckElimination::eliminate(IR*);RangeCheckEliminator::RangeCheckEliminator(IR*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$ADC;::accept;UncommonTrapBlob;Deoptimization::fetch_unroll_info_helper(JavaThread*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&);PhaseBlockLayout::find_edges();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);PhaseChaitin::split_USE(Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray<unsigned int>, int);PhaseChaitin::get_spillcopy_wide(Node*, Node*, unsigned int);Node::add_req(Node*);Node::grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$ADC;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::access_field(Bytecodes::Code);GraphBuilder::copy_state_for_exception();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$ANDI;::accept;UncommonTrapBlob;Deoptimization::uncommon_trap(JavaThread*, int);Deoptimization::uncommon_trap_inner(JavaThread*, int);Deoptimization::revoke_biases_of_monitors(JavaThread*, frame, RegisterMap*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SUB;::accept;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.AtmelInternalDevice;::read16;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ReenterI(Thread*, ObjectWaiter*);os::PlatformEvent::park() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Transmitter$Ticker;::fire;Lavrora.sim.radio.Medium$Probe$List;::fireBeforeTransmit;Lavrora.monitors.PacketMonitor$Mon;::fireBeforeTransmit;UncommonTrapBlob;Deoptimization::uncommon_trap(JavaThread*, int);Deoptimization::uncommon_trap_inner(JavaThread*, int);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ADC$ControlRegister;::write;Lavrora.sim.mcu.ADC$ControlRegister;::startConversion;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Matcher::match_tree(Node const*);Matcher::ReduceInst(State*, int, Node*&);State::MachNodeGenerator(int, Compile*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$MOVW;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::getRegisterWord;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ADC$ControlRegister;::write;Lavrora.sim.mcu.ADC$ControlRegister;::unpostADCInterrupt;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::array_store(BasicType);GraphKit::array_element_address(Node*, Node*, BasicType, TypeInt const*, Node*);PhaseGVN::transform_no_reclaim(Node*);Type::hashcons();Dict::Insert(void*, void*, bool);Dict::doubhash();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);ciMethod::ensure_method_data();ciMethod::ensure_method_data(methodHandle);ciMethodData::load_data();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SEI;::accept;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::resolve_exception_handlers();MoveResolver::MoveResolver(LinearScan*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();RangeCheckElimination::eliminate(IR*);RangeCheckEliminator::RangeCheckEliminator(IR*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$200;Lavrora.sim.mcu.Timer16Bit;::tickerStart;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::compare;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::read;Lavrora.sim.mcu.AtmelInternalDevice;::read16;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_method_entry();GraphKit::make_dtrace_method_entry_exit(ciMethod*, bool);GraphKit::kill_dead_locals();ciMethod::liveness_at_bci(int);MethodLiveness::compute_liveness();MethodLiveness::init_basic_blocks();GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::renderPacket;Lavrora.sim.output.SimPrinter;::getBuffer->Lavrora.sim.util.SimUtil;::getIDTimeString;Lavrora.sim.util.SimUtil;::toIDTimeString->Lcck.text.StringUtil;::justify;Ljava.lang.Long;::toString;Ljava.lang.Long;::getChars;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$IN;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::getIORegisterByte;Lavrora.sim.AtmelInterpreter;::readSRAM;Lavrora.sim.AtmelInterpreter;::readVolatile;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SLEEP;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.arch.legacy.LegacyInterpreter;::enterSleepMode;Lavrora.sim.mcu.AtmelMicrocontroller;::sleep;Lavrora.sim.mcu.ATMega128;::getSleepMode;Lcck.util.Arithmetic;::getBitField;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_back_branch_event(methodHandle, methodHandle, int, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_if(BoolTest::mask, Node*);GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool);GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::global_code_motion();PhaseCFG::schedule_node_into_block(Node*, Block*);Node_Array::insert(unsigned int, Node*);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);BlockBegin::BlockBegin(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_code_body();LIR_Assembler::emit_code(BlockList*);LIR_OpBranch::emit_code(LIR_Assembler*);Assembler::jcc(Assembler::Condition, Label&, bool);Label::add_patch_at(CodeBuffer*, int);CodeBuffer::create_patch_overflow();Arena::Arena(MemoryType);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ADC$ControlRegister;::write;Lavrora.sim.mcu.ADC$ControlRegister;::startConversion;Lavrora.sim.mcu.ADC$ControlRegister;::insertConversion;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::getBuffer->Lavrora.sim.util.SimUtil;::getIDTimeString;Lavrora.sim.util.SimUtil;::toIDTimeString->Lcck.text.StringUtil;::justify;Lcck.text.StringUtil;::justify;Lcck.text.StringUtil;::space;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];Lcck.text.Terminal;::println;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ReenterI(Thread*, ObjectWaiter*);os::PlatformEvent::park() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$DirectionRegister;::write;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_If(If*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_if(BoolTest::mask, Node*);Parse::merge_common(Parse::Block*, int);Node::Node(unsigned int);Compile::grow_node_notes(GrowableArray<Node_Notes*>*, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;Lsun.nio.cs.StreamEncoder;::write;Lsun.nio.cs.StreamEncoder;::implWrite->Ljava.nio.CharBuffer;::wrap->Ljava.nio.HeapCharBuffer;::<init>->Ljava.nio.CharBuffer;::<init>;Ljava.nio.Buffer;::<init>;Ljava.nio.Buffer;::limit;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int);BlockListBuilder::set_leaders();BlockListBuilder::make_block_at(int, BlockBegin*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);BlockListBuilder::mark_loops();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&);IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&);PhaseIdealLoop::partial_peel(IdealLoopTree*, Node_List&);PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&, int, Node*);Node::out_grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);PhaseChaitin::split_USE(Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray<unsigned int>, int);PhaseChaitin::get_spillcopy_wide(Node*, Node*, unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_ProfileInvoke(ProfileInvoke*);LIRGenerator::increment_event_counter_impl(CodeEmitInfo*, ciMethod*, int, int, bool, bool);LIR_List::metadata2reg(Metadata*, LIR_OprDesc*);ResourceArray::expand(unsigned long, int, int&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$ANDI;::accept;UncommonTrapBlob;Deoptimization::fetch_unroll_info_helper(JavaThread*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_field_access(bool, bool);GraphKit::null_check_common(Node*, BasicType, bool, Node**) [clone .part.293];BuildCutout::BuildCutout(GraphKit*, Node*, float, float);Node::out_grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$200;Lavrora.sim.mcu.Timer16Bit;::tickerStart;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::compare;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::read;Lavrora.sim.mcu.AtmelInternalDevice;::read16;Lavrora.sim.mcu.Timer16Bit$BufferedRegister;::read;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ReenterI(Thread*, ObjectWaiter*);os::PlatformEvent::park() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);Deoptimization::deoptimize_frame(JavaThread*, long*);Deoptimization::deoptimize_frame_internal(JavaThread*, long*);Deoptimization::deoptimize(JavaThread*, frame, RegisterMap*);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::return_current(Node*);GraphKit::make_dtrace_method_entry_exit(ciMethod*, bool);GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*);GraphKit::set_predefined_output_for_runtime_call(Node*, Node*, TypePtr const*);GraphKit::set_all_memory(Node*);MergeMemNode::make(Compile*, Node*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ADC$ControlRegister;::write;Lavrora.sim.mcu.ADC$ControlRegister;::startConversion;[unknown];Lavrora.sim.mcu.ADC$MUXRegister;::isSingleEnded;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::build_ifg_physical(ResourceArea*);IndexSet::alloc_block_containing(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::invokeInterrupt;Lavrora.arch.legacy.LegacyInterpreter;::leaveSleepMode;Lavrora.sim.mcu.AtmelMicrocontroller;::wakeup;UncommonTrapBlob;Deoptimization::uncommon_trap(JavaThread*, int);Deoptimization::uncommon_trap_inner(JavaThread*, int);Deoptimization::revoke_biases_of_monitors(JavaThread*, frame, RegisterMap*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::Output();Compile::BuildOopMaps();OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*);OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ReenterI(Thread*, ObjectWaiter*);os::PlatformEvent::park() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::invokeInterrupt;Lavrora.arch.legacy.LegacyInterpreter;::leaveSleepMode;Lavrora.sim.AtmelInterpreter;::advanceClock;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);BlockListBuilder::mark_loops();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_field_access(bool, bool);Parse::do_put_xxx(Node*, ciField*, bool);GraphKit::store_oop(Node*, Node*, Node*, TypePtr const*, Node*, TypeOopPtr const*, BasicType, bool, MemNode::MemOrd, bool);GraphKit::write_barrier_post(Node*, Node*, Node*, unsigned int, Node*, bool);Node::Node(Node*, Node*, Node*, Node*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Matcher::match_tree(Node const*);Matcher::ReduceInst(State*, int, Node*&);State::MachNodeGenerator(int, Compile*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();PhaseGVN::transform_no_reclaim(Node*);MulNode::Value(PhaseTransform*) const;Type::hashcons();Dict::Insert(void*, void*, bool);Dict::doubhash();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseMacroExpand::expand_macro_nodes();PhaseMacroExpand::expand_unlock_node(UnlockNode*);LoadNode::make(PhaseGVN&, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PCLKOutput;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::access$200;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::clockInBit;Lavrora.sim.radio.CC1000Radio$RadioRegister;::write;Interpreter;Lavrora.sim.clock.MainClock;::insertEvent;Lavrora.sim.clock.DeltaQueue;::insertEvent;Lavrora.sim.clock.DeltaQueue;::insertAfter;Interpreter;UncommonTrapBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);Instruction::operator new(unsigned long) [clone .constprop.470];Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();GraphKit::add_predicate(int);GraphKit::add_predicate_impl(Deoptimization::DeoptReason, int);GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool);GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*);GraphKit::add_safepoint_edges(SafePointNode*, bool);Node::add_req_batch(Node*, unsigned int);Node::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::fill_buffer(CodeBuffer*, unsigned int*);Compile::Process_OopMap_Node(MachNode*, int);DebugInformationRecorder::create_scope_values(GrowableArray<ScopeValue*>*);ConstantOopWriteValue::write_on(DebugInfoWriteStream*);ValueRecorder<_jobject*>::maybe_find_index(_jobject*);ValueRecorder<_jobject*>::maybe_initialize();GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::if_node(Instruction*, Instruction::Condition, Instruction*, ValueStack*);GraphBuilder::append_with_bci(Instruction*, int);ValueStack::copy(ValueStack::Kind, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::Dominators();NTarjan::DFS(NTarjan*, VectorSet&, PhaseIdealLoop*, unsigned int*);GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();GraphKit::add_predicate(int);GraphKit::add_predicate_impl(Deoptimization::DeoptReason, int);GraphKit::clone_map();Node::clone() const;Node::out_grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_LoadField(LoadField*);LIRGenerator::rlock_result(Instruction*, BasicType);ResourceArray::expand(unsigned long, int, int&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);BitMap::BitMap(unsigned long, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;[unknown];Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PCLKOutput;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::access$200;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::clockInBit;Lavrora.sim.radio.CC1000Radio$RadioRegister;::write;Lavrora.sim.radio.CC1000Radio$MainRegister;::decode;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_If(If*);LIR_List::move(LIR_OprDesc*, LIR_Address*, CodeEmitInfo*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::renderPacket;Lavrora.sim.output.SimPrinter;::getBuffer;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ReenterI(Thread*, ObjectWaiter*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::array_load(BasicType);GraphKit::null_check_common(Node*, BasicType, bool, Node**) [clone .part.293];BuildCutout::BuildCutout(GraphKit*, Node*, float, float);GraphKit::clone_map();Type_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;Ljava.io.PrintStream;::write->Ljava.io.OutputStreamWriter;::flushBuffer;Lsun.nio.cs.StreamEncoder;::flushBuffer;[unknown];[unknown];Ljava.nio.ByteBuffer;::arrayOffset;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);ResourceArray::expand(unsigned long, int, int&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::connect_to_end(BlockBegin*);ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*);ConnectionGraph::compute_escape();ConnectionGraph::process_call_arguments(CallNode*);ciMethod::get_bcea();BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*);BCEscapeAnalyzer::compute_escape_info();BCEscapeAnalyzer::iterate_blocks(Arena*);BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&, GrowableArray<ciBlock*>&);BCEscapeAnalyzer::invoke(BCEscapeAnalyzer::StateInfo&, Bytecodes::Code, ciMethod*, ciKlass*);BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*);BCEscapeAnalyzer::compute_escape_info();BCEscapeAnalyzer::iterate_blocks(Arena*);BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&, GrowableArray<ciBlock*>&);BCEscapeAnalyzer::invoke(BCEscapeAnalyzer::StateInfo&, Bytecodes::Code, ciMethod*, ciKlass*);BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*);BCEscapeAnalyzer::compute_escape_info();BCEscapeAnalyzer::iterate_blocks(Arena*);BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&, GrowableArray<ciBlock*>&);BCEscapeAnalyzer::invoke(BCEscapeAnalyzer::StateInfo&, Bytecodes::Code, ciMethod*, ciKlass*);BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*);BCEscapeAnalyzer::compute_escape_info();BCEscapeAnalyzer::iterate_blocks(Arena*);BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&, GrowableArray<ciBlock*>&);BCEscapeAnalyzer::invoke(BCEscapeAnalyzer::StateInfo&, Bytecodes::Code, ciMethod*, ciKlass*);BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*);BCEscapeAnalyzer::compute_escape_info();ciMethod::get_method_blocks();ciMethodBlocks::ciMethodBlocks(Arena*, ciMethod*);ciMethodBlocks::do_analysis();ciMethod::load_code();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::global_code_motion();PhaseCFG::schedule_late(VectorSet&, Node_List&);PhaseCFG::schedule_node_into_block(Node*, Block*);Node_Array::insert(unsigned int, Node*);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::global_code_motion();PhaseCFG::schedule_late(VectorSet&, Node_List&);PhaseCFG::insert_anti_dependences(Block*, Node*, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::Output();Compile::init_buffer(unsigned int*);CodeBuffer::initialize(int, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PCLKOutput;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::access$200;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::clockInBit;Lavrora.sim.radio.CC1000Radio$RadioRegister;::write;Lavrora.sim.radio.CC1000Radio$MainRegister;::decode;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Matcher::match_tree(Node const*);Matcher::ReduceInst(State*, int, Node*&);Matcher::ReduceInst_Interior(State*, int, Node*&, MachNode*, unsigned int);Matcher::ReduceInst(State*, int, Node*&);State::MachNodeGenerator(int, Compile*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$OR;::accept;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.sim.clock.DeltaQueue$Link;::fire;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;InterpreterRuntime::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseIFG::init(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$IN;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::getIORegisterByte;Lavrora.sim.AtmelInterpreter;::readSRAM;Lavrora.sim.AtmelInterpreter;::readVolatile;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];DeoptimizationBlob;Deoptimization::fetch_unroll_info(JavaThread*);Deoptimization::fetch_unroll_info_helper(JavaThread*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$LD;::accept;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);PhaseChaitin::split_Rematerialize(Node*, Block*, unsigned int, unsigned int&, GrowableArray<unsigned int>, int, unsigned int*, Node**, bool);Node::clone() const;Node::out_grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::split_if_with_blocks(VectorSet&, Node_Stack&);PhaseIdealLoop::split_if_with_blocks_pre(Node*);PhaseIdealLoop::remix_address_expressions(Node*);PhaseIdealLoop::register_new_node(Node*, Node*);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::renderPacket;Lavrora.monitors.PacketMonitor$Mon;::appendTime;Lcck.text.StringUtil;::toFixedFloat->Ljava.lang.StringBuffer;::append;Ljava.lang.AbstractStringBuilder;::append;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SEI;::accept;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Matcher::match_tree(Node const*);Matcher::ReduceInst(State*, int, Node*&);addI_rRegNode::Expand(State*, Node_List&, Node*);Node::Node(Node*);Node::out_grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SLEEP;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.arch.legacy.LegacyInterpreter;::enterSleepMode;Lavrora.sim.mcu.AtmelMicrocontroller;::sleep;Lavrora.sim.mcu.ATMega128;::getSleepMode;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SLEEP;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.arch.legacy.LegacyInterpreter;::enterSleepMode;Lavrora.sim.mcu.AtmelMicrocontroller;::sleep;Lavrora.sim.mcu.ATMega128;::getSleepMode;UncommonTrapBlob;Deoptimization::fetch_unroll_info_helper(JavaThread*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();PhaseGVN::transform_no_reclaim(Node*);Type::hashcons();Dict::Insert(void*, void*, bool);Dict::doubhash();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_field_access(bool, bool);GraphKit::null_check_common(Node*, BasicType, bool, Node**) [clone .part.293];BuildCutout::BuildCutout(GraphKit*, Node*, float, float);GraphKit::clone_map();Node::clone() const;Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$ADC;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int);BlockListBuilder::set_leaders();ciMethod::bci_block_start();MethodLiveness::compute_liveness();MethodLiveness::init_basic_blocks();GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ciMethod::ensure_method_data();ciMethod::ensure_method_data(methodHandle);ciMethodData::load_data();Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.sim.clock.DeltaQueue$Link;::fire;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;InterpreterRuntime::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::method_return(Instruction*);Goto::Goto(BlockBegin*, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$MUL;::accept;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SEC;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::eliminate_null_checks();Optimizer::eliminate_null_checks();Chunk::next_chop();ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Node::clone() const;Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_exits();GraphKit::make_dtrace_method_entry_exit(ciMethod*, bool);GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*);GraphKit::set_predefined_output_for_runtime_call(Node*, Node*, TypePtr const*);GraphKit::set_all_memory(Node*);Node::out_grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;Ljava.io.PrintStream;::write;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_code_body();LIR_Assembler::emit_slow_case_stubs();ImplicitNullCheckStub::emit_code(LIR_Assembler*);Compilation::add_exception_handlers_for_pco(int, XHandlers*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);ciBytecodeStream::get_method(bool&, ciSignature**);ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*);ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*);ciObjectFactory::get_metadata(Metadata*);ciObjectFactory::create_new_metadata(Metadata*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();GraphKit::null_check_common(Node*, BasicType, bool, Node**) [clone .part.293];GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool);GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*);Node::Node(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_ifnull(BoolTest::mask, Node*);PreserveJVMState::PreserveJVMState(GraphKit*, bool);GraphKit::clone_map();Type_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::invokeInterrupt;Lavrora.arch.legacy.LegacyInterpreter;::leaveSleepMode;Lavrora.sim.AtmelInterpreter;::advanceClock;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Interpreter;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Node::out_grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBCI;::accept;UncommonTrapBlob;Deoptimization::fetch_unroll_info_helper(JavaThread*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Matcher::match_tree(Node const*);Matcher::ReduceInst(State*, int, Node*&);Matcher::ReduceInst_Interior(State*, int, Node*&, MachNode*, unsigned int);Matcher::ReduceInst(State*, int, Node*&);Matcher::ReduceInst_Interior(State*, int, Node*&, MachNode*, unsigned int);Matcher::ReduceInst(State*, int, Node*&);andL_rReg_mem_0Node::Expand(State*, Node_List&, Node*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;Ljava.util.AbstractSequentialList;::iterator;Ljava.util.AbstractList;::listIterator;Ljava.util.LinkedList;::listIterator;Interpreter;UncommonTrapBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PCLKOutput;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::access$200;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::clockInBit;Lavrora.sim.radio.CC1000Radio$RadioRegister;::write;Lavrora.sim.radio.CC1000Radio$MainRegister;::decode;Interpreter;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();RangeCheckElimination::eliminate(IR*);RangeCheckEliminator::RangeCheckEliminator(IR*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CP;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::getRegisterByte;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_field_access(bool, bool);Parse::do_get_xxx(Node*, ciField*, bool);TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool);Dependencies::assert_common_2(Dependencies::DepType, ciBaseObject*, ciBaseObject*);GrowableArray<int>::grow(int);GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$200;Lavrora.sim.mcu.Timer16Bit;::tickerStart;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::compare;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::read;Lavrora.sim.mcu.AtmelInternalDevice;::read16;Lavrora.sim.mcu.Timer16Bit$BufferedRegister;::read;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Arena::Arena(MemoryType);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&);IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&);PhaseIdealLoop::partial_peel(IdealLoopTree*, Node_List&);PhaseIdealLoop::insert_cmpi_loop_exit(IfNode*, IdealLoopTree*);PhaseIdealLoop::insert_region_before_proj(ProjNode*);PhaseIdealLoop::set_idom(Node*, Node*, unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseMacroExpand::expand_macro_nodes();PhaseMacroExpand::expand_lock_node(LockNode*);PhaseValues::uncached_makecon(Type const*);Compile::grow_node_notes(GrowableArray<Node_Notes*>*, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_StoreField(StoreField*);LIR_List::move(LIR_OprDesc*, LIR_Address*, CodeEmitInfo*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();VirtualCallGenerator::generate(JVMState*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::array_store(BasicType);GraphKit::array_element_address(Node*, Node*, BasicType, TypeInt const*, Node*);PhaseGVN::transform_no_reclaim(Node*);Type::hashcons();Dict::Insert(void*, void*, bool);Dict::doubhash();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;UncommonTrapBlob;Deoptimization::uncommon_trap(JavaThread*, int);Deoptimization::uncommon_trap_inner(JavaThread*, int);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::Output();Compile::BuildOopMaps();OopFlow::make(Arena*, int, Compile*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Matcher::match_tree(Node const*);Matcher::ReduceInst(State*, int, Node*&);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int);BlockListBuilder::set_leaders();BlockListBuilder::make_block_at(int, BlockBegin*);BlockBegin::BlockBegin(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::renderPacket;Lavrora.sim.output.SimPrinter;::getBuffer->Lavrora.sim.util.SimUtil;::getIDTimeString;Lavrora.sim.util.SimUtil;::toIDTimeString->Lcck.text.StringUtil;::justify;Lcck.text.StringUtil;::justify;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::set_all_memory(Node*);MergeMemNode::make(Compile*, Node*);MergeMemNode::set_base_memory(Node*);Node::out_grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::renderPacket;[unknown];Lavrora.sim.util.SimUtil;::getIDTimeString;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$200;Lavrora.sim.mcu.Timer16Bit;::tickerStart;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::compare;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::read;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::build_loop_early(VectorSet&, Node_List&, Node_Stack&);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::Output();Compile::BuildOopMaps();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];Lavrora.sim.output.SimPrinter;::printBuffer;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_field_access(bool, bool);Parse::do_put_xxx(Node*, ciField*, bool);GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool);PhaseGVN::transform_no_reclaim(Node*);StoreNode::Ideal(PhaseGVN*, bool);Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.326];Compile::flatten_alias_type(TypePtr const*) const;Type::hashcons();Dict::Insert(void*, void*, bool);Dict::doubhash();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CP;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::getRegisterByte;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ADC$ControlRegister;::write->Lavrora.sim.mcu.ADC$ControlRegister;::startConversion;Lavrora.sim.mcu.ADC$ControlRegister;::insertConversion->Lavrora.sim.mcu.ADC$ControlRegister;::getPrescaler;Lavrora.sim.state.RegisterUtil$BitRangeView;::getValue;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PCLKOutput;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::access$200;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::clockInBit;Lavrora.sim.radio.CC1000Radio$RadioRegister;::write;Lavrora.sim.radio.CC1000Radio$MainRegister;::decode;Interpreter;Lavrora.sim.clock.MainClock;::removeEvent;Lavrora.sim.clock.DeltaQueue;::removeEvent;Lavrora.sim.clock.DeltaQueue$Link;::remove;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();RangeCheckElimination::eliminate(IR*);RangeCheckEliminator::RangeCheckEliminator(IR*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;[unknown];[unknown];Lavrora.sim.AtmelInterpreter;::setEnabled;Lavrora.sim.InterruptTable;::disable;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow->Lavrora.sim.clock.DeltaQueue$Link;::fire;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;InterpreterRuntime::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);CallGenerator::for_inline(ciMethod*, float);InlineTree::check_can_parse(ciMethod*);ciMethod::get_flow_analysis();ciTypeFlow::do_flow();ciTypeFlow::flow_types();ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*);ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*);ciTypeFlow::Block::successors(ciBytecodeStream*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*);ciTypeFlow::get_block_for(int, ciTypeFlow::JsrSet*, ciTypeFlow::CreateOption);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::Output();Compile::init_buffer(unsigned int*);CodeBuffer::initialize(int, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_RuntimeCall(RuntimeCall*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;Lsun.nio.cs.StreamEncoder;::write;Lsun.nio.cs.StreamEncoder;::implWrite;Ljava.nio.charset.CharsetEncoder;::encode;Lsun.nio.cs.US_ASCII$Encoder;::encodeLoop;Ljava.nio.ByteBuffer;::hasArray;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;UncommonTrapBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int);BlockListBuilder::set_leaders();ciMethod::bci_block_start();MethodLiveness::compute_liveness();MethodLiveness::init_basic_blocks();ciMethod::get_method_blocks();ciMethodBlocks::ciMethodBlocks(Arena*, ciMethod*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int);BlockListBuilder::set_entries(int);BlockListBuilder::make_block_at(int, BlockBegin*) [clone .constprop.448];Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int);BlockListBuilder::set_entries(int);BlockListBuilder::make_block_at(int, BlockBegin*) [clone .constprop.448];Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$300;Lavrora.sim.mcu.Timer16Bit;::tickerFinish;Lavrora.sim.mcu.AtmelInternalDevice;::write16;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_if(BoolTest::mask, Node*);PreserveJVMState::PreserveJVMState(GraphKit*, bool);GraphKit::clone_map();Node::clone() const;Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;Ljava.io.PrintStream;::write;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;Lsun.nio.cs.StreamEncoder;::write;Lsun.nio.cs.StreamEncoder;::implWrite;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::renderPacket;[unknown];[unknown];Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);PhaseChaitin::split_DEF(Node*, Block*, int, unsigned int, Node**, Node**, GrowableArray<unsigned int>, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&);PhaseCFG::build_cfg();Node::out_grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$300;Lavrora.sim.mcu.Timer16Bit;::tickerFinish;Lavrora.sim.mcu.AtmelInternalDevice;::write16;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::renderPacket;Lavrora.monitors.PacketMonitor$Mon;::appendTime->Ljava.lang.StringBuffer;::append;Ljava.lang.AbstractStringBuilder;::append;Ljava.lang.AbstractStringBuilder;::ensureCapacityInternal;Ljava.util.Arrays;::copyOf;_new_array_Java;OptoRuntime::new_array_C(Klass*, int, JavaThread*);TypeArrayKlass::allocate_common(int, bool, Thread*);GenCollectorPolicy::mem_allocate_work(unsigned long, bool, bool*);VMThread::execute(VM_Operation*);Monitor::wait(bool, long, bool);Monitor::IWait(Thread*, long);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_field_access(bool, bool);Parse::do_get_xxx(Node*, ciField*, bool);Compile::alias_type(ciField*);TypeInstPtr::add_offset(long) const;TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypeOopPtr const*, int);TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypeOopPtr const*, int);ciInstanceKlass::get_field_by_offset(int, bool);ciInstanceKlass::compute_nonstatic_fields();ciInstanceKlass::compute_nonstatic_fields_impl(GrowableArray<ciField*>*);ciField::ciField(fieldDescriptor*);ciObjectFactory::get_symbol(Symbol*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::Dominators();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_Invoke(Invoke*);LIR_List::move(LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*) [clone .constprop.386];Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);PhaseChaitin::split_USE(Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray<unsigned int>, int);Node::out_grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();RangeCheckElimination::eliminate(IR*);RangeCheckEliminator::RangeCheckEliminator(IR*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Transmitter$Ticker;::fire;Lavrora.sim.radio.Medium$Probe$List;::fireBeforeTransmit;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;Lsun.nio.cs.StreamEncoder;::write;Lsun.nio.cs.StreamEncoder;::implWrite;Ljava.nio.charset.CharsetEncoder;::encode;Lsun.nio.cs.US_ASCII$Encoder;::encodeLoop;Lsun.nio.cs.US_ASCII$Encoder;::encodeArrayLoop;Ljava.nio.CharBuffer;::array;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_if(BoolTest::mask, Node*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_field_access(bool, bool);GraphKit::null_check_common(Node*, BasicType, bool, Node**) [clone .part.293];BuildCutout::BuildCutout(GraphKit*, Node*, float, float);Node::Node(Node*);Node::out_grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer8Bit$Mode_CTC;::fire;Lavrora.sim.mcu.Timer8Bit;::access$000;UncommonTrapBlob;Deoptimization::uncommon_trap(JavaThread*, int);Deoptimization::uncommon_trap_inner(JavaThread*, int);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
Service Thread;start_thread;java_start(Thread*);JavaThread::thread_main_inner();ServiceThread::service_thread_entry(JavaThread*, Thread*);JvmtiDeferredEvent::post();JvmtiExport::post_compiled_method_load(nmethod*);ResourceMark::reset_to_mark();Chunk::next_chop();ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::allocate_registers();MoveResolver::MoveResolver(LinearScan*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;Ljava.io.PrintStream;::write->Ljava.io.OutputStreamWriter;::flushBuffer;Lsun.nio.cs.StreamEncoder;::flushBuffer;[unknown];[unknown];Ljava.nio.ByteBuffer;::array;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SLEEP;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.arch.legacy.LegacyInterpreter;::enterSleepMode;Lavrora.sim.mcu.AtmelMicrocontroller;::sleep;Lavrora.sim.mcu.ATMega128;::getSleepMode;UncommonTrapBlob;Deoptimization::uncommon_trap(JavaThread*, int);Deoptimization::uncommon_trap_inner(JavaThread*, int);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseAggressiveCoalesce::insert_copies(Matcher&);Node_Array::insert(unsigned int, Node*);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::eliminate_useless_predicates();PhaseIdealLoop::collect_potentially_useful_predicates(IdealLoopTree*, Unique_Node_List&);VectorSet::operator<<=(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::fill_buffer(CodeBuffer*, unsigned int*);Compile::Process_OopMap_Node(MachNode*, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;Ljava.lang.StringBuffer;::toString;_new_instance_Java;OptoRuntime::new_instance_C(Klass*, JavaThread*);InstanceKlass::allocate_instance(Thread*);GenCollectorPolicy::mem_allocate_work(unsigned long, bool, bool*);VMThread::execute(VM_Operation*);os::PlatformEvent::unpark() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();Compile::final_graph_reshaping();Compile::final_graph_reshaping_walk(Node_Stack&, Node*, Final_Reshape_Counts&);Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();GraphKit::add_predicate_impl(Deoptimization::DeoptReason, int);GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool);GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;Ljava.io.PrintStream;::write->Ljava.io.OutputStreamWriter;::flushBuffer;Lsun.nio.cs.StreamEncoder;::flushBuffer;[unknown];[unknown];Ljava.nio.Buffer;::flip;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$ADIW;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseIFG::init(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_exceptions();Parse::throw_to_exit(SafePointNode*);GraphKit::set_map_clone(SafePointNode*);GraphKit::clone_map();Node::clone() const;Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_field_access(bool, bool);GraphKit::null_check_common(Node*, BasicType, bool, Node**) [clone .part.293];BuildCutout::BuildCutout(GraphKit*, Node*, float, float);GraphKit::clone_map();Node::clone() const;Node::out_grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CPSE;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);WatcherThread::run();PeriodicTask::real_time_tick(int);ChunkPoolCleaner::task();ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::estimate_block_frequency();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;Lsun.nio.cs.StreamEncoder;::write;Lsun.nio.cs.StreamEncoder;::implWrite;Ljava.nio.charset.CharsetEncoder;::encode;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$300;Lavrora.sim.mcu.Timer16Bit;::tickerFinish;Lavrora.sim.clock.MainClock;::insertEvent;Lavrora.sim.clock.DeltaQueue;::insertEvent;Lavrora.sim.clock.DeltaQueue;::insertAfter;Lavrora.sim.clock.DeltaQueue;::newLink;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_Goto(Goto*);LIRGenerator::move_to_phi(ValueStack*);LIRGenerator::move_to_phi(PhiResolver*, Instruction*, Instruction*);PhiResolver::create_node(LIR_OprDesc*, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_Base(Base*);ResourceArray::expand(unsigned long, int, int&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);VMThread::run();VMThread::loop();VMThread::evaluate_operation(VM_Operation*);VM_Operation::evaluate();VM_GenCollectForAllocation::doit();GenCollectorPolicy::satisfy_failed_allocation(unsigned long, bool);GenCollectedHeap::do_collection(bool, bool, unsigned long, bool, int);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$300;Lavrora.sim.mcu.Timer16Bit;::tickerFinish;Lavrora.sim.mcu.AtmelInternalDevice;::write16;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::post_allocate_copy_removal();Node::replace_by(Node*);Node::out_grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::set_all_memory_call(Node*, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::invokeInterrupt;Lavrora.arch.legacy.LegacyInterpreter;::leaveSleepMode;Lavrora.sim.mcu.AtmelMicrocontroller;::wakeup;UncommonTrapBlob;Deoptimization::uncommon_trap(JavaThread*, int);Deoptimization::uncommon_trap_inner(JavaThread*, int);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.CC1000Radio$SPITicker;::fire;Lavrora.sim.clock.MainClock;::getCount;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::array_load(BasicType);GraphKit::null_check_common(Node*, BasicType, bool, Node**) [clone .part.293];GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool);GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*);GraphKit::set_predefined_output_for_runtime_call(Node*, Node*, TypePtr const*);GraphKit::set_all_memory(Node*);MergeMemNode::make(Compile*, Node*);MergeMemNode::MergeMemNode(Node*);MergeMemNode::set_base_memory(Node*);Node::out_grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_LoadField(LoadField*);LIR_List::load(LIR_Address*, LIR_OprDesc*, CodeEmitInfo*, LIR_PatchCode);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CPC;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::getRegisterByte;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);Deoptimization::deoptimize_frame(JavaThread*, long*);Deoptimization::deoptimize_frame_internal(JavaThread*, long*);Deoptimization::deoptimize(JavaThread*, frame, RegisterMap*);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$LD;::accept;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_method_entry();GraphKit::make_dtrace_method_entry_exit(ciMethod*, bool);GraphKit::kill_dead_locals();ciMethod::liveness_at_bci(int);MethodLiveness::compute_liveness();MethodLiveness::init_basic_blocks();MethodLiveness::BasicBlock::BasicBlock(MethodLiveness*, int, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Transmitter$Ticker;::fire;Lavrora.sim.radio.Medium$Probe$List;::fireBeforeTransmit;Lavrora.monitors.PacketMonitor$Mon;::fireBeforeTransmit;UncommonTrapBlob;Deoptimization::fetch_unroll_info_helper(JavaThread*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_RuntimeCall(RuntimeCall*);LIRGenerator::call_runtime(BasicTypeArray*, LIR_OprList*, unsigned char*, ValueType*, CodeEmitInfo*);FrameMap::c_calling_convention(BasicTypeArray const*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_code_body();LIR_Assembler::emit_slow_case_stubs();ImplicitNullCheckStub::emit_code(LIR_Assembler*);LIR_Assembler::add_call_info(int, CodeEmitInfo*);CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int);DebugInformationRecorder::add_safepoint(int, OopMap*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SEI;::accept;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PCLKOutput;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::access$200;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::clockInBit;Lavrora.sim.radio.CC1000Radio$RadioRegister;::write;Interpreter;Lavrora.sim.clock.MainClock;::insertEvent;Lavrora.sim.clock.DeltaQueue;::insertEvent;Lavrora.sim.clock.DeltaQueue;::insertAfter;UncommonTrapBlob;Deoptimization::uncommon_trap(JavaThread*, int);Deoptimization::uncommon_trap_inner(JavaThread*, int);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;Ljava.io.PrintStream;::write;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;Lsun.nio.cs.StreamEncoder;::write;Lsun.nio.cs.StreamEncoder;::implWrite;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::invokeInterrupt;Lavrora.arch.legacy.LegacyInterpreter;::leaveSleepMode;Lavrora.sim.mcu.AtmelMicrocontroller;::wakeup;UncommonTrapBlob;Deoptimization::fetch_unroll_info_helper(JavaThread*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::renderPacket;Lavrora.monitors.PacketMonitor$Mon;::appendTime;Lcck.text.StringUtil;::toFixedFloat;Lcck.text.StringUtil;::appendFract;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);ciBytecodeStream::get_method(bool&, ciSignature**);ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*);ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*);ciObjectFactory::get_metadata(Metadata*);ciObjectFactory::create_new_metadata(Metadata*);ciMethod::ciMethod(methodHandle, ciInstanceKlass*);ciSignature::ciSignature(ciKlass*, constantPoolHandle, ciSymbol*);GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();RangeCheckElimination::eliminate(IR*);RangeCheckEliminator::RangeCheckEliminator(IR*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;Lsun.nio.cs.StreamEncoder;::write;Lsun.nio.cs.StreamEncoder;::implWrite->Ljava.nio.CharBuffer;::wrap->Ljava.nio.HeapCharBuffer;::<init>->Ljava.nio.CharBuffer;::<init>;Ljava.nio.Buffer;::<init>;Ljava.nio.Buffer;::limit;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);IndexSet::alloc_block_containing(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::eliminate_spill_moves();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_Invoke(Invoke*);LIRGenerator::invoke_load_arguments(Invoke*, LIRItemList*, LIR_OprList const*);LIRItem::load_item_force(LIR_OprDesc*);LIR_List::move(LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*) [clone .constprop.386];Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ciMethod::ensure_method_data();ciMethod::ensure_method_data(methodHandle);ciMethodData::load_data();DataLayout::data_in();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::fill_sync_handler(Instruction*, BlockBegin*, bool);Instruction::operator new(unsigned long) [clone .constprop.470];Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$ADC;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int);BlockListBuilder::set_leaders();ciMethod::bci_block_start();MethodLiveness::compute_liveness();MethodLiveness::init_basic_blocks();MethodLiveness::BasicBlock::BasicBlock(MethodLiveness*, int, int);GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];DeoptimizationBlob;Deoptimization::fetch_unroll_info(JavaThread*);Deoptimization::fetch_unroll_info_helper(JavaThread*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::number_instructions();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;[unknown];Ljava.io.BufferedWriter;::newLine;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseCCP::analyze();Type::hashcons();Dict::Insert(void*, void*, bool);Dict::doubhash();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&);PhaseBlockLayout::find_edges();GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::allocate_registers();IntervalWalker::walk_to(int);LinearScanWalker::activate_current();LinearScanWalker::alloc_free_reg(Interval*);LinearScanWalker::split_before_usage(Interval*, int, int);Interval::split(int);Interval::new_split_child();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::method_return(Instruction*);GraphBuilder::append_with_bci(Instruction*, int);ValueStack::copy(ValueStack::Kind, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::set_results_for_java_call(CallJavaNode*, bool);GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine->Ljava.io.OutputStreamWriter;::flushBuffer;Lsun.nio.cs.StreamEncoder;::flushBuffer;[unknown];[unknown];[unknown];Ljava.io.PrintStream;::ensureOpen;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CPSE;::accept;Interpreter;UncommonTrapBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::Dominators();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$300;Lavrora.sim.mcu.Timer16Bit;::tickerFinish;Lavrora.sim.mcu.AtmelInternalDevice;::write16;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$INC;::accept;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
VM Thread;start_thread;java_start(Thread*);VMThread::run();VMThread::loop();SafepointSynchronize::begin();Monitor::wait(bool, long, bool);Monitor::IWait(Thread*, long);os::PlatformEvent::park() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;Lsun.nio.cs.StreamEncoder;::write;[unknown];Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.ADC$ControlRegister$ConversionEvent;::fire;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::null_check_common(Node*, BasicType, bool, Node**) [clone .part.293];BuildCutout::BuildCutout(GraphKit*, Node*, float, float);Node::out_grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::build_ifg_virtual();PhaseChaitin::interfere_with_live(unsigned int, IndexSet*);IndexSet::alloc_block_containing(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;Ljava.util.AbstractSequentialList;::iterator;Ljava.util.AbstractList;::listIterator;Ljava.util.LinkedList;::listIterator;_new_instance_Java;OptoRuntime::new_instance_C(Klass*, JavaThread*);InstanceKlass::allocate_instance(Thread*);GenCollectorPolicy::mem_allocate_work(unsigned long, bool, bool*);VMThread::execute(VM_Operation*);Monitor::wait(bool, long, bool);Monitor::IWait(Thread*, long);os::PlatformEvent::park() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];Lavrora.monitors.PacketMonitor$Mon;::renderPacket;[unknown];[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);BlockBegin::try_merge(ValueStack*);ciMethod::liveness_at_bci(int);MethodLiveness::get_liveness_at(int);MethodLiveness::BasicBlock::get_liveness_at(ciMethod*, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);Deoptimization::deoptimize_frame(JavaThread*, long*);Deoptimization::deoptimize_frame_internal(JavaThread*, long*);Deoptimization::deoptimize(JavaThread*, frame, RegisterMap*);Deoptimization::revoke_biases_of_monitors(JavaThread*, frame, RegisterMap*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&);PhaseCFG::build_cfg();Node::clone() const;labelOper::clone(Compile*) const;Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::Output();Compile::BuildOopMaps();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;[unknown];Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;[unknown];[unknown];Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::build_intervals();LinearScan::add_use(LIR_OprDesc*, int, int, IntervalUseKind);LinearScan::create_interval(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int);BlockListBuilder::set_leaders();BlockListBuilder::make_block_at(int, BlockBegin*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Transmitter$Ticker;::fire;Lavrora.sim.radio.CC1000Radio$Transmitter;::nextByte;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);Instruction::operator new(unsigned long) [clone .constprop.470];Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$ADC;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$200;Lavrora.sim.mcu.Timer16Bit;::tickerStart;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::compare;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::read;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::PhaseIdealLoop(PhaseIterGVN&, bool, bool);PhaseTransform::PhaseTransform(Phase::PhaseNumber);Type_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_RuntimeCall(RuntimeCall*);LIRGenerator::call_runtime(BasicTypeArray*, LIR_OprList*, unsigned char*, ValueType*, CodeEmitInfo*);FrameMap::c_calling_convention(BasicTypeArray const*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();GlobalValueNumbering::GlobalValueNumbering(IR*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();RangeCheckElimination::eliminate(IR*);RangeCheckEliminator::RangeCheckEliminator(IR*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::access_field(Bytecodes::Code);MemoryBuffer::load(LoadField*);GrowableArray<Instruction*>::grow(int);GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::set_results_for_java_call(CallJavaNode*, bool);GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool);GraphKit::clone_map();Node::clone() const;Node::out_grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Transmitter$Ticker;::fire;Lavrora.sim.radio.Medium$Probe$List;::fireBeforeTransmit;Lavrora.monitors.PacketMonitor$Mon;::fireBeforeTransmit;Interpreter;UncommonTrapBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::renderPacket;[unknown];Lcck.text.StringUtil;::toFixedFloat;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::allocate_registers();IntervalWalker::walk_to(int);LinearScanWalker::activate_current();LinearScanWalker::alloc_locked_reg(Interval*);LinearScanWalker::split_and_spill_interval(Interval*);LinearScanWalker::split_before_usage(Interval*, int, int);Interval::split(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ADC$ControlRegister;::write;Lavrora.sim.mcu.ADC$ControlRegister;::startConversion;[unknown];Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$300;Lavrora.sim.mcu.Timer16Bit;::tickerFinish;Lavrora.sim.mcu.AtmelInternalDevice;::write16;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;Ljava.io.PrintStream;::write;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;Lsun.nio.cs.StreamEncoder;::write;Lsun.nio.cs.StreamEncoder;::implWrite;Ljava.nio.charset.CharsetEncoder;::encode;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);IdealLoopTree::counted_loop(PhaseIdealLoop*);IdealLoopTree::counted_loop(PhaseIdealLoop*);PhaseIdealLoop::is_counted_loop(Node*, IdealLoopTree*);PhaseIdealLoop::set_idom(Node*, Node*, unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();Compile::remove_speculative_types(PhaseIterGVN&);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);ciMethod::ensure_method_data();ciMethod::ensure_method_data(methodHandle);ciMethodData::load_data();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);PhaseChaitin::split_USE(Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray<unsigned int>, int);PhaseChaitin::get_spillcopy_wide(Node*, Node*, unsigned int);Node::add_req(Node*);Node::grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$ADC;::accept;UncommonTrapBlob;Deoptimization::uncommon_trap(JavaThread*, int);Deoptimization::uncommon_trap_inner(JavaThread*, int);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::null_check_common(Node*, BasicType, bool, Node**) [clone .part.293];BuildCutout::BuildCutout(GraphKit*, Node*, float, float);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*);ConnectionGraph::compute_escape();ConnectionGraph::process_call_arguments(CallNode*);ciMethod::get_bcea();BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*);BCEscapeAnalyzer::compute_escape_info();BCEscapeAnalyzer::iterate_blocks(Arena*);BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&, GrowableArray<ciBlock*>&);BCEscapeAnalyzer::invoke(BCEscapeAnalyzer::StateInfo&, Bytecodes::Code, ciMethod*, ciKlass*);BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*);BCEscapeAnalyzer::compute_escape_info();BCEscapeAnalyzer::iterate_blocks(Arena*);BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&, GrowableArray<ciBlock*>&);ciBytecodeStream::get_method(bool&, ciSignature**);ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*);ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*);ciObjectFactory::get_metadata(Metadata*);ciObjectFactory::create_new_metadata(Metadata*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBCI;::accept;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ADC$ControlRegister;::write;Lavrora.sim.mcu.ADC$ControlRegister;::stopConversion;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::invokeInterrupt;Lavrora.sim.AtmelInterpreter;::advanceClock;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Matcher::match_tree(Node const*);Matcher::ReduceInst(State*, int, Node*&);State::MachNodeGenerator(int, Compile*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::append_with_bci(Instruction*, int);ValueStack::copy(ValueStack::Kind, int);ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseAggressiveCoalesce::insert_copies(Matcher&);GrowableArray<unsigned int>::raw_at_put_grow(int, unsigned int const&, unsigned int const&);GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::access_field(Bytecodes::Code);GraphBuilder::append_with_bci(Instruction*, int);ValueMap::find_insert(Instruction*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::renderPacket;[unknown];[unknown];Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::return_current(Node*);GraphKit::make_dtrace_method_entry_exit(ciMethod*, bool);GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*);Node::Node(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&);PhaseCFG::build_cfg();Node::out_grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
node-22;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;[unknown];DeoptimizationBlob;Deoptimization::fetch_unroll_info(JavaThread*);Deoptimization::fetch_unroll_info_helper(JavaThread*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;UncommonTrapBlob;Deoptimization::uncommon_trap(JavaThread*, int);Deoptimization::uncommon_trap_inner(JavaThread*, int);Deoptimization::revoke_biases_of_monitors(JavaThread*, frame, RegisterMap*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow->Lavrora.sim.clock.DeltaQueue$Link;::fire;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;InterpreterRuntime::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CPC;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::getRegisterByte;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer8Bit$Mode_CTC;::fire;Lavrora.sim.mcu.Timer8Bit;::access$000;Lavrora.sim.mcu.Timer8Bit;::tickerStart;Lavrora.sim.mcu.Timer8Bit$BufferedRegister;::read;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::set_results_for_java_call(CallJavaNode*, bool);GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CPSE;::accept;UncommonTrapBlob;Deoptimization::uncommon_trap(JavaThread*, int);Deoptimization::uncommon_trap_inner(JavaThread*, int);Deoptimization::revoke_biases_of_monitors(JavaThread*, frame, RegisterMap*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$ANDI;::accept;UncommonTrapBlob;Deoptimization::fetch_unroll_info_helper(JavaThread*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::return_values(JVMState*);ReturnNode::ReturnNode(unsigned int, Node*, Node*, Node*, Node*, Node*);Node::out_grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;Ljava.util.AbstractSequentialList;::iterator;Ljava.util.AbstractList;::listIterator;Ljava.util.LinkedList;::listIterator;_new_instance_Java;OptoRuntime::new_instance_C(Klass*, JavaThread*);InstanceKlass::allocate_instance(Thread*);GenCollectorPolicy::mem_allocate_work(unsigned long, bool, bool*);VMThread::execute(VM_Operation*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::setup_start_block(int, BlockBegin*, BlockBegin*, ValueStack*);GraphBuilder::header_block(BlockBegin*, BlockBegin::Flag, ValueStack*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);IdealLoopTree::loop_predication(PhaseIdealLoop*);PhaseIdealLoop::loop_predication_impl(IdealLoopTree*);Invariance::clone(Node*, Node*);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_field_access(bool, bool);Parse::do_get_xxx(Node*, ciField*, bool);PhaseGVN::transform_no_reclaim(Node*);AddPNode::Identity(PhaseTransform*);Type::hashcons();Dict::Insert(void*, void*, bool);Dict::doubhash();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseMacroExpand::expand_macro_nodes();PhaseMacroExpand::expand_lock_node(LockNode*);PhaseMacroExpand::opt_bits_test(Node*, Node*, int, Node*, int, int, bool);PhaseIterGVN::register_new_node_with_optimizer(Node*, Node*);Type_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::allocate_registers();IntervalWalker::walk_to(int);LinearScanWalker::activate_current();LinearScanWalker::alloc_free_reg(Interval*);LinearScanWalker::split_before_usage(Interval*, int, int);Interval::split(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];Lavrora.sim.mcu.ADC$ControlRegister;::convertVoltage;[unknown];Lavrora.sim.radio.Medium$Receiver;::isChannelClear;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::jump_switch_ranges(Node*, SwitchRange*, SwitchRange*, int);Parse::jump_switch_ranges(Node*, SwitchRange*, SwitchRange*, int);Parse::jump_if_fork_int(Node*, Node*, BoolTest::mask);Type_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::set_results_for_java_call(CallJavaNode*, bool);GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool);GraphKit::clone_map();Type_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Transmitter$Ticker;::fire;Interpreter;Interpreter;Lavrora.monitors.PacketMonitor$Mon;::renderPacket;Lavrora.sim.output.SimPrinter;::getBuffer->Lavrora.sim.util.SimUtil;::getIDTimeString;Lavrora.sim.util.SimUtil;::toIDTimeString;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();RangeCheckElimination::eliminate(IR*);RangeCheckEliminator::RangeCheckEliminator(IR*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_If(If*);LIRGenerator::walk(Instruction*);LIRGenerator::do_LogicOp(LogicOp*);LIRGenerator::logic_op(Bytecodes::Code, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*);LIR_List::move(LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*) [clone .constprop.386];Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();RangeCheckElimination::eliminate(IR*);RangeCheckEliminator::RangeCheckEliminator(IR*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$200;Lavrora.sim.mcu.Timer16Bit;::tickerStart;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::compare;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::read;Lavrora.sim.mcu.AtmelInternalDevice;::read16;Lavrora.sim.mcu.Timer16Bit$BufferedRegister;::read;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::Dominators();Chunk::next_chop();ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_NewInstance(NewInstance*);LIRGenerator::new_instance(LIR_OprDesc*, ciInstanceKlass*, bool, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::invokeInterrupt;Lavrora.sim.AtmelInterpreter;::advanceClock;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseMacroExpand::expand_macro_nodes();PhaseIterGVN::optimize();PhaseIterGVN::transform_old(Node*);AddPNode::Identity(PhaseTransform*);Type::hashcons();Dict::Insert(void*, void*, bool);Dict::doubhash();Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int);BlockListBuilder::set_leaders();BlockListBuilder::make_block_at(int, BlockBegin*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseIFG::SquareUp();IndexSet::alloc_block_containing(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$300;Lavrora.sim.mcu.Timer16Bit;::tickerFinish;Lavrora.sim.clock.MainClock;::insertEvent;Lavrora.sim.clock.DeltaQueue;::insertEvent;Lavrora.sim.clock.DeltaQueue;::insertAfter;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::null_check_common(Node*, BasicType, bool, Node**) [clone .part.293];BuildCutout::BuildCutout(GraphKit*, Node*, float, float);Node::out_grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Matcher::match_tree(Node const*);Matcher::ReduceInst(State*, int, Node*&);Matcher::ReduceInst_Interior(State*, int, Node*&, MachNode*, unsigned int);Matcher::ReduceInst(State*, int, Node*&);Matcher::ReduceInst_Interior(State*, int, Node*&, MachNode*, unsigned int);Matcher::ReduceInst(State*, int, Node*&);Matcher::ReduceInst_Interior(State*, int, Node*&, MachNode*, unsigned int);Matcher::ReduceInst(State*, int, Node*&);State::MachNodeGenerator(int, Compile*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SLEEP;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.arch.legacy.LegacyInterpreter;::enterSleepMode;Lavrora.sim.mcu.AtmelMicrocontroller;::sleep;Lavrora.sim.mcu.ATMega128;::getSleepMode;Lcck.util.Arithmetic;::getBitField;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_back_branch_event(methodHandle, methodHandle, int, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-22;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);Deoptimization::deoptimize_frame(JavaThread*, long*);Deoptimization::deoptimize_frame_internal(JavaThread*, long*);Deoptimization::deoptimize(JavaThread*, frame, RegisterMap*);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$ICALL;::accept;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIterGVN::optimize();PhaseIterGVN::transform_old(Node*);RegionNode::Ideal(PhaseGVN*, bool);PhaseIterGVN::subsume_node(Node*, Node*);Node::Node(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.CC1000Radio$SPITicker;::fire;Lavrora.sim.clock.MainClock;::getCount;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;Ljava.util.AbstractSequentialList;::iterator;Ljava.util.AbstractList;::listIterator;Ljava.util.LinkedList;::listIterator;UncommonTrapBlob;Deoptimization::uncommon_trap(JavaThread*, int);Deoptimization::uncommon_trap_inner(JavaThread*, int);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_field_access(bool, bool);Parse::do_get_xxx(Node*, ciField*, bool);GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool);LoadNode::make(PhaseGVN&, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency);Node::Node(Node*, Node*, Node*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_exits();GraphKit::make_dtrace_method_entry_exit(ciMethod*, bool);GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*);GraphKit::set_predefined_output_for_runtime_call(Node*, Node*, TypePtr const*);Node::Node(Node*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Transmitter$Ticker;::fire;Interpreter;Interpreter;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::renderPacket;Lavrora.monitors.PacketMonitor$Mon;::appendTime->Ljava.lang.StringBuffer;::append;Ljava.lang.AbstractStringBuilder;::append;Ljava.lang.AbstractStringBuilder;::ensureCapacityInternal;Ljava.util.Arrays;::copyOf;_new_array_Java;OptoRuntime::new_array_C(Klass*, int, JavaThread*);TypeArrayKlass::allocate_common(int, bool, Thread*);GenCollectorPolicy::mem_allocate_work(unsigned long, bool, bool*);VMThread::execute(VM_Operation*);os::PlatformEvent::unpark() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$200;Lavrora.sim.mcu.Timer16Bit;::tickerStart;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::compare;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::read;Lavrora.sim.mcu.AtmelInternalDevice;::read16;Lavrora.sim.mcu.Timer16Bit$BufferedRegister;::read;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::assign_reg_num();LinearScan::assign_reg_num(LIR_OpList*, IntervalWalker*);LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool);OopMap::OopMap(int, int);CompressedWriteStream::CompressedWriteStream(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::set_edges_for_java_call(CallJavaNode*, bool, bool);GraphKit::add_safepoint_edges(SafePointNode*, bool);Node::add_req_batch(Node*, unsigned int);Node::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceive;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceive;Lavrora.monitors.PacketMonitor$Mon;::append;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$200;Lavrora.sim.mcu.Timer16Bit;::tickerStart;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::compare;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::read;Lavrora.sim.mcu.AtmelInternalDevice;::read16;Lavrora.sim.mcu.Timer16Bit$BufferedRegister;::read;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::split_if_with_blocks(VectorSet&, Node_Stack&);PhaseIdealLoop::do_split_if(Node*);PhaseIdealLoop::split_thru_region(Node*, Node*);PhaseIdealLoop::set_idom(Node*, Node*, unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$200;Lavrora.sim.mcu.Timer16Bit;::tickerStart;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::compare;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::read;Lavrora.sim.mcu.AtmelInternalDevice;::read16;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::null_check_common(Node*, BasicType, bool, Node**) [clone .part.293];GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool);GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];Lavrora.monitors.PacketMonitor$Mon;::renderPacket;[unknown];[unknown];Ljava.lang.Float;::isNaN;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$OUT;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::writeIORegisterByte;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;[unknown];Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;[unknown];Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;Ljava.io.PrintStream;::write;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SEC;::accept;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();Compile::final_graph_reshaping();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::build_intervals();LinearScan::add_temp(int, int, IntervalUseKind, BasicType);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer8Bit$Mode_CTC;::fire;Lavrora.sim.mcu.Timer8Bit;::access$000;Lavrora.sim.mcu.Timer8Bit;::tickerStart;Lavrora.sim.mcu.Timer8Bit$BufferedRegister;::read;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::Output();Compile::init_buffer(unsigned int*);CodeBuffer::initialize_section_size(CodeSection*, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::set_edges_for_java_call(CallJavaNode*, bool, bool);GraphKit::add_safepoint_edges(SafePointNode*, bool);Node::add_req_batch(Node*, unsigned int);Node::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceive;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceive;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&);IndexSet::alloc_block_containing(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::renderPacket;Lavrora.monitors.PacketMonitor$Mon;::appendTime;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::access_field(Bytecodes::Code);ciBytecodeStream::get_field(bool&);ciEnv::get_field_by_index(ciInstanceKlass*, int);ciEnv::get_field_by_index_impl(ciInstanceKlass*, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);PhaseChaitin::split_USE(Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray<unsigned int>, int);PhaseChaitin::get_spillcopy_wide(Node*, Node*, unsigned int);Node::add_req(Node*);Node::grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SUB;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Transmitter$Ticker;::fire;Interpreter;Interpreter;Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine->Ljava.io.BufferedWriter;::newLine->Ljava.io.Writer;::write;Ljava.io.BufferedWriter;::write;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::setup_start_block(int, BlockBegin*, BlockBegin*, ValueStack*);BlockBegin::try_merge(ValueStack*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::method_return(Instruction*);Instruction::operator new(unsigned long) [clone .constprop.471];Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$200;Lavrora.sim.mcu.Timer16Bit;::tickerStart;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::compare;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::read;Lavrora.sim.mcu.AtmelInternalDevice;::read16;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::build_intervals();LinearScan::add_temp(int, int, IntervalUseKind, BasicType);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);PhaseChaitin::split_Rematerialize(Node*, Block*, unsigned int, unsigned int&, GrowableArray<unsigned int>, int, unsigned int*, Node**, bool);Node::clone() const;Compile::copy_node_notes_to(Node*, Node*);Compile::grow_node_notes(GrowableArray<Node_Notes*>*, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIterGVN::optimize();PhaseIterGVN::transform_old(Node*);AddNode::Ideal(PhaseGVN*, bool);Node::clone() const;Compile::copy_node_notes_to(Node*, Node*);Compile::grow_node_notes(GrowableArray<Node_Notes*>*, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PCLKOutput;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::access$200;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::clockInBit;Lavrora.sim.radio.CC1000Radio$RadioRegister;::write;Interpreter;Lavrora.sim.clock.MainClock;::insertEvent;Lavrora.sim.clock.DeltaQueue;::insertEvent;Lavrora.sim.clock.DeltaQueue;::insertAfter;UncommonTrapBlob;Deoptimization::uncommon_trap(JavaThread*, int);Deoptimization::uncommon_trap_inner(JavaThread*, int);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::global_code_motion();PhaseCFG::schedule_local(Block*, GrowableArray<int>&, VectorSet&);PhaseCFG::sched_call(Block*, unsigned int, Node_List&, GrowableArray<int>&, MachCallNode*, VectorSet&);Node::Node(Node*);Node::out_grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PCLKOutput;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::access$200;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::clockInBit;Lavrora.sim.radio.CC1000Radio$RadioRegister;::write;Lavrora.sim.radio.CC1000Radio$MainRegister;::decode->Lavrora.sim.radio.Medium$Transmitter;::endTransmit;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_if(BoolTest::mask, Node*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, bool, bool, RTMState);Dependencies::encode_content_bytes();CompressedWriteStream::CompressedWriteStream(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int);BlockListBuilder::set_entries(int);BlockListBuilder::make_block_at(int, BlockBegin*) [clone .constprop.448];Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$IN;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::profile_call(ciMethod*, Instruction*, ciKlass*, Values*, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_exceptions();Parse::throw_to_exit(SafePointNode*);GraphKit::combine_exception_states(SafePointNode*, SafePointNode*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;UncommonTrapBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);CallGenerator::for_inline(ciMethod*, float);InlineTree::check_can_parse(ciMethod*);ciMethod::get_flow_analysis();ciTypeFlow::do_flow();ciTypeFlow::flow_types();ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*);ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*);ciTypeFlow::Block::compute_exceptions();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);VMThread::run();VMThread::loop();SafepointSynchronize::begin();Monitor::wait(bool, long, bool);Monitor::IWait(Thread*, long);os::PlatformEvent::unpark() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$200;Lavrora.sim.mcu.Timer16Bit;::tickerStart;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::compare;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::read;Lavrora.sim.mcu.AtmelInternalDevice;::read16;Lavrora.sim.mcu.Timer16Bit$BufferedRegister;::read;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_If(If*);LIRGenerator::profile_branch(If*, Instruction::Condition);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);Deoptimization::deoptimize_frame(JavaThread*, long*);Deoptimization::deoptimize_frame_internal(JavaThread*, long*);Deoptimization::deoptimize(JavaThread*, frame, RegisterMap*);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseAggressiveCoalesce::insert_copies(Matcher&);Node::clone() const;Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;Ljava.io.PrintStream;::write;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;Lsun.nio.cs.StreamEncoder;::write;[unknown];Ljava.nio.CharBuffer;::wrap;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::Output();Compile::BuildOopMaps();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();GraphKit::add_predicate_impl(Deoptimization::DeoptReason, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::array_load(BasicType);GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool);LoadNode::make(PhaseGVN&, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency);Node::Node(Node*, Node*, Node*);Node::out_grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();RangeCheckElimination::eliminate(IR*);RangeCheckEliminator::RangeCheckEliminator(IR*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::set_results_for_java_call(CallJavaNode*, bool);GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool);Node::add_req(Node*);Node::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseMacroExpand::expand_macro_nodes();PhaseMacroExpand::expand_unlock_node(UnlockNode*);LoadNode::make(PhaseGVN&, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::set_edges_for_java_call(CallJavaNode*, bool, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_exits();GraphKit::make_dtrace_method_entry_exit(ciMethod*, bool);GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*);GraphKit::set_predefined_output_for_runtime_call(Node*, Node*, TypePtr const*);Node::Node(Node*);Node::out_grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;Ljava.util.AbstractSequentialList;::iterator;Ljava.util.AbstractList;::listIterator;Ljava.util.LinkedList;::listIterator;_new_instance_Java;OptoRuntime::new_instance_C(Klass*, JavaThread*);InstanceKlass::allocate_instance(Thread*);GenCollectorPolicy::mem_allocate_work(unsigned long, bool, bool*);VMThread::execute(VM_Operation*);os::PlatformEvent::unpark() 1
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_Base(Base*);LIRGenerator::increment_event_counter(CodeEmitInfo*, int, bool);LIRGenerator::increment_event_counter_impl(CodeEmitInfo*, ciMethod*, int, int, bool, bool);LIR_List::metadata2reg(Metadata*, LIR_OprDesc*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;UncommonTrapBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();RangeCheckElimination::eliminate(IR*);RangeCheckEliminator::RangeCheckEliminator(IR*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;Ljava.util.AbstractSequentialList;::iterator;Ljava.util.AbstractList;::listIterator;Ljava.util.LinkedList;::listIterator;_new_instance_Java;OptoRuntime::new_instance_C(Klass*, JavaThread*);InstanceKlass::allocate_instance(Thread*);GenCollectorPolicy::mem_allocate_work(unsigned long, bool, bool*);VMThread::execute(VM_Operation*);os::PlatformEvent::unpark() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;UncommonTrapBlob;Deoptimization::uncommon_trap(JavaThread*, int);Deoptimization::uncommon_trap_inner(JavaThread*, int);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();ciBytecodeStream::get_method(bool&, ciSignature**);ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*);ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*);ciEnv::get_klass_by_index_impl(constantPoolHandle, int, bool&, ciInstanceKlass*);ciObjectFactory::get_symbol(Symbol*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$DirectionRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::setOutputDir;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.BufferedWriter;::ensureOpen;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Node::Node(Node*, Node*, Node*);Compile::grow_node_notes(GrowableArray<Node_Notes*>*, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::build_ifg_physical(ResourceArea*);IndexSet::alloc_block_containing(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer8Bit$Mode_CTC;::fire;Lavrora.sim.mcu.Timer8Bit;::access$000;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_exceptions();Parse::throw_to_exit(SafePointNode*);GraphKit::set_map_clone(SafePointNode*);GraphKit::clone_map();Type_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();PhaseGVN::transform_no_reclaim(Node*);MulNode::Identity(PhaseTransform*);Type::hashcons();Dict::Insert(void*, void*, bool);Dict::doubhash();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-22;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);Deoptimization::deoptimize_frame(JavaThread*, long*);Deoptimization::deoptimize_frame_internal(JavaThread*, long*);Deoptimization::deoptimize(JavaThread*, frame, RegisterMap*);Deoptimization::revoke_biases_of_monitors(JavaThread*, frame, RegisterMap*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_if(BoolTest::mask, Node*);PreserveJVMState::PreserveJVMState(GraphKit*, bool);GraphKit::clone_map();MergeMemNode::make(Compile*, Node*);MergeMemNode::MergeMemNode(Node*);Node::Node(unsigned int);Compile::grow_node_notes(GrowableArray<Node_Notes*>*, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PCLKOutput;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::access$200;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface;::clockInBit;Lavrora.sim.radio.CC1000Radio$RadioRegister;::write;Lavrora.sim.radio.CC1000Radio$MainRegister;::decode;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);BlockBegin::try_merge(ValueStack*);ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::build_ifg_virtual();IndexSet::alloc_block_containing(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::access_field(Bytecodes::Code);GraphBuilder::append_with_bci(Instruction*, int);ValueMap::find_insert(Instruction*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&);PhaseIdealLoop::build_loop_late_post(Node*);PhaseIdealLoop::get_late_ctrl(Node*, Node*);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine;Ljava.io.BufferedWriter;::flushBuffer;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$ANDI;::accept;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SEI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;[unknown];Lavrora.arch.legacy.LegacyInterpreter;::visit;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);Deoptimization::deoptimize_frame(JavaThread*, long*);Deoptimization::deoptimize_frame_internal(JavaThread*, long*);Deoptimization::deoptimize(JavaThread*, frame, RegisterMap*);Deoptimization::revoke_biases_of_monitors(JavaThread*, frame, RegisterMap*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);Instruction::operator new(unsigned long) [clone .constprop.470];Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];Lavrora.sim.mcu.ADC$ControlRegister;::access$100;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::allocate_registers();IntervalWalker::walk_to(int);LinearScanWalker::activate_current();LinearScanWalker::insert_move(int, Interval*, Interval*);LIR_List::append(LIR_InsertionBuffer*);ResourceArray::expand(unsigned long, int, int&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::Dominators();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine->Ljava.io.BufferedWriter;::newLine->Ljava.io.Writer;::write;Ljava.io.BufferedWriter;::write;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();GlobalValueNumbering::GlobalValueNumbering(IR*);ValueMap::find_insert(Instruction*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;Ljava.util.AbstractSequentialList;::iterator;Ljava.util.AbstractList;::listIterator;Ljava.util.LinkedList;::listIterator;_new_instance_Java;OptoRuntime::new_instance_C(Klass*, JavaThread*);InstanceKlass::allocate_instance(Thread*);GenCollectorPolicy::mem_allocate_work(unsigned long, bool, bool*);VMThread::execute(VM_Operation*);Monitor::wait(bool, long, bool);Monitor::IWait(Thread*, long);os::PlatformEvent::park() 1
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::global_code_motion();PhaseCFG::schedule_late(VectorSet&, Node_List&);PhaseCFG::insert_anti_dependences(Block*, Node*, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.ADC$ControlRegister$ConversionEvent;::fire->Lavrora.sim.mcu.ADC$ControlRegister;::access$300;Lavrora.sim.mcu.ADC$ControlRegister;::stopConversion;Lavrora.sim.clock.MainClock;::removeEvent;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
VM Thread;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_if(BoolTest::mask, Node*);PreserveJVMState::PreserveJVMState(GraphKit*, bool);GraphKit::clone_map();Node::clone() const;Node::out_grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::renderPacket;Lavrora.monitors.PacketMonitor$Mon;::renderByte;Lavrora.monitors.PacketMonitor$Mon;::renderByte;Lcck.text.StringUtil;::toHex;_new_array_Java;OptoRuntime::new_array_C(Klass*, int, JavaThread*);TypeArrayKlass::allocate_common(int, bool, Thread*);GenCollectorPolicy::mem_allocate_work(unsigned long, bool, bool*);VMThread::execute(VM_Operation*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Matcher::match_sfpt(SafePointNode*);Matcher::match_tree(Node const*);Node::add_req(Node*);Node::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Matcher::match_sfpt(SafePointNode*);Matcher::match_tree(Node const*);Matcher::ReduceInst(State*, int, Node*&);State::MachNodeGenerator(int, Compile*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CP;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::getRegisterByte;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$ANDI;::accept;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];DeoptimizationBlob;Deoptimization::fetch_unroll_info(JavaThread*);Deoptimization::fetch_unroll_info_helper(JavaThread*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ReenterI(Thread*, ObjectWaiter*);os::PlatformEvent::park() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$300;Lavrora.sim.mcu.Timer16Bit;::tickerFinish;Lavrora.sim.mcu.AtmelInternalDevice;::write16;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_code_body();LIR_Assembler::emit_code(BlockList*);LIR_Assembler::comp_op(LIR_Condition, LIR_OprDesc*, LIR_OprDesc*, LIR_Op2*);LIR_Assembler::add_debug_info_for_null_check(int, CodeEmitInfo*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine->Ljava.io.OutputStreamWriter;::flushBuffer;Lsun.nio.cs.StreamEncoder;::flushBuffer;Lsun.nio.cs.StreamEncoder;::implFlushBuffer;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::null_check_common(Node*, BasicType, bool, Node**) [clone .part.293];GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool);GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*);GraphKit::set_predefined_output_for_runtime_call(Node*, Node*, TypePtr const*);GraphKit::set_all_memory(Node*);MergeMemNode::make(Compile*, Node*);MergeMemNode::MergeMemNode(Node*);Node::Node(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;Lsun.nio.cs.StreamEncoder;::write;Lsun.nio.cs.StreamEncoder;::implWrite;Ljava.nio.charset.CharsetEncoder;::encode;Lsun.nio.cs.US_ASCII$Encoder;::encodeLoop;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;UncommonTrapBlob;Deoptimization::fetch_unroll_info_helper(JavaThread*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_if(BoolTest::mask, Node*);Node::Node(Node*, Node*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SEI;::accept;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;UncommonTrapBlob;Deoptimization::uncommon_trap(JavaThread*, int);Deoptimization::uncommon_trap_inner(JavaThread*, int);Deoptimization::revoke_biases_of_monitors(JavaThread*, frame, RegisterMap*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$OUT;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::writeIORegisterByte;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;[unknown];Lavrora.sim.mcu.SPI$SPCRReg;::decode;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::PhaseChaitin(unsigned int, PhaseCFG&, Matcher&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();GlobalValueNumbering::GlobalValueNumbering(IR*);ValueMap::find_insert(Instruction*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer8Bit$Mode_CTC;::fire;Lavrora.sim.mcu.Timer8Bit;::access$000;UncommonTrapBlob;Deoptimization::fetch_unroll_info_helper(JavaThread*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine->Ljava.io.OutputStreamWriter;::flushBuffer;Lsun.nio.cs.StreamEncoder;::flushBuffer;Lsun.nio.cs.StreamEncoder;::implFlushBuffer;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Interpreter;Interpreter;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_if(BoolTest::mask, Node*);Type_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::global_code_motion();PhaseCFG::schedule_late(VectorSet&, Node_List&);PhaseCFG::insert_anti_dependences(Block*, Node*, bool);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::allocate_registers();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Transmitter$Ticker;::fire;Lavrora.sim.radio.Medium$Probe$List;::fireBeforeTransmit;Lavrora.monitors.PacketMonitor$Mon;::fireBeforeTransmit;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_exceptions();Parse::catch_inline_exceptions(SafePointNode*);LoadKlassNode::make(PhaseGVN&, Node*, Node*, Node*, TypePtr const*, TypeKlassPtr const*);Node::Node(Node*, Node*, Node*);Node::out_grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_StoreField(StoreField*);LIRGenerator::walk(Instruction*);LIRGenerator::do_LogicOp(LogicOp*);LIRGenerator::logic_op(Bytecodes::Code, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*);LIR_List::move(LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*) [clone .constprop.386];Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::set_results_for_java_call(CallJavaNode*, bool);GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool);GraphKit::clone_map();Node::clone() const;Node::out_grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);PhaseChaitin::split_USE(Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray<unsigned int>, int);PhaseChaitin::get_spillcopy_wide(Node*, Node*, unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);ciMethod::ensure_method_data();ciMethod::ensure_method_data(methodHandle);ciMethodData::load_data();Chunk::next_chop();ThreadCritical::ThreadCritical() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::merge_common(Parse::Block*, int);Parse::ensure_phi(int, bool);PhiNode::make(Node*, Node*, Type const*, TypePtr const*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);PhaseChaitin::split_USE(Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray<unsigned int>, int);PhaseChaitin::get_spillcopy_wide(Node*, Node*, unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::build_ifg_physical(ResourceArea*);PhaseChaitin::interfere_with_live(unsigned int, IndexSet*);IndexSet::alloc_block_containing(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();RangeCheckElimination::eliminate(IR*);RangeCheckEliminator::RangeCheckEliminator(IR*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_ProfileCall(ProfileCall*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();attach_listener_thread_entry(JavaThread*, Thread*);JvmtiExport::load_agent_library(AttachOperation*, outputStream*);Agent_OnAttach;jvmti_GenerateEvents;JvmtiCodeBlobEvents::generate_compiled_method_load_events(JvmtiEnv*);JvmtiExport::post_compiled_method_load(nmethod*);create_inline_record(nmethod*);nmethod::scope_desc_at(unsigned char*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.AtmelInternalDevice;::read16;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 2
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;[unknown];Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;[unknown];[unknown];Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);PhaseChaitin::split_USE(Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray<unsigned int>, int);PhaseChaitin::insert_proj(Block*, unsigned int, Node*, unsigned int);Block_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_if(BoolTest::mask, Node*);GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool);PhaseTransform::intcon(int);Type::hashcons();Dict::Insert(void*, void*, bool);Dict::doubhash();Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);ciBytecodeStream::get_method(bool&, ciSignature**);ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*);ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*);ciObjectFactory::get_metadata(Metadata*);ciObjectFactory::create_new_metadata(Metadata*);ciMethod::ciMethod(methodHandle, ciInstanceKlass*);ciSignature::ciSignature(ciKlass*, constantPoolHandle, ciSymbol*);SignatureStream::SignatureStream(Symbol*, bool);GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 2
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::eliminate_null_checks();Optimizer::eliminate_null_checks();Chunk::next_chop();ThreadCritical::ThreadCritical() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::rethrow_exceptions(JVMState*);RethrowNode::RethrowNode(Node*, Node*, Node*, Node*, Node*, Node*);Node::out_grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::allocate_registers();IntervalWalker::walk_to(int);LinearScanWalker::activate_current();LinearScanWalker::alloc_free_reg(Interval*);LinearScanWalker::split_before_usage(Interval*, int, int);Interval::split(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();RangeCheckElimination::eliminate(IR*);RangeCheckEliminator::RangeCheckEliminator(IR*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();RangeCheckElimination::eliminate(IR*);RangeCheckEliminator::RangeCheckEliminator(IR*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::return_current(Node*);PhiNode::slice_memory(TypePtr const*) const;Node::clone() const;Node::out_grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::set_all_memory(Node*);MergeMemNode::make(Compile*, Node*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();RangeCheckElimination::eliminate(IR*);RangeCheckEliminator::RangeCheckEliminator(IR*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();attach_listener_thread_entry(JavaThread*, Thread*);JvmtiExport::load_agent_library(AttachOperation*, outputStream*);Agent_OnAttach;jvmti_GenerateEvents;JvmtiCodeBlobEvents::generate_compiled_method_load_events(JvmtiEnv*);JvmtiExport::post_compiled_method_load(nmethod*);ResourceMark::reset_to_mark();Chunk::next_chop();ThreadCritical::ThreadCritical() 2
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.AtmelInternalDevice;::read16;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.AtmelInternalDevice;::read16;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::set_results_for_java_call(CallJavaNode*, bool);GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool);Node::Node(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::build_loop_tree();PhaseIdealLoop::build_loop_tree_impl(Node*, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::global_code_motion();GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::Output();Compile::BuildOopMaps();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, bool, bool, RTMState);nmethod::post_compiled_method_load_event();os::PlatformEvent::unpark() 2
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&);IndexSet::alloc_block_containing(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();RangeCheckElimination::eliminate(IR*);RangeCheckEliminator::RangeCheckEliminator(IR*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::allocate_registers();IntervalWalker::walk_to(int);LinearScanWalker::activate_current();LinearScanWalker::insert_move(int, Interval*, Interval*);LIR_List::append(LIR_InsertionBuffer*);ResourceArray::expand(unsigned long, int, int&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::compute_code();ComputeLinearScanOrder::ComputeLinearScanOrder(Compilation*, BlockBegin*);ComputeLinearScanOrder::compute_order(BlockBegin*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_method_entry();GraphKit::make_dtrace_method_entry_exit(ciMethod*, bool);GraphKit::kill_dead_locals();ciMethod::liveness_at_bci(int);MethodLiveness::compute_liveness();MethodLiveness::init_basic_blocks();MethodLiveness::BasicBlock::BasicBlock(MethodLiveness*, int, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();RangeCheckElimination::eliminate(IR*);RangeCheckEliminator::RangeCheckEliminator(IR*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileQueue::get();Monitor::wait(bool, long, bool);SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 2
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int);BlockListBuilder::set_leaders();ciMethod::bci_block_start();MethodLiveness::compute_liveness();MethodLiveness::init_basic_blocks();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ReenterI(Thread*, ObjectWaiter*);os::PlatformEvent::park() 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::assign_reg_num();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::array_load(BasicType);BuildCutout::BuildCutout(GraphKit*, Node*, float, float);GraphKit::clone_map();Node::clone() const;Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::global_code_motion();PhaseCFG::schedule_late(VectorSet&, Node_List&);PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*);GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_Goto(Goto*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::monitorexit(Instruction*, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();GlobalValueNumbering::GlobalValueNumbering(IR*);ValueMap::ValueMap(ValueMap*);BitMap::BitMap(unsigned long, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::profile_call(ciMethod*, Instruction*, ciKlass*, Values*, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();RangeCheckElimination::eliminate(IR*);RangeCheckEliminator::RangeCheckEliminator(IR*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int);BlockListBuilder::set_leaders();ciMethod::bci_block_start();MethodLiveness::compute_liveness();MethodLiveness::init_basic_blocks();ciMethod::get_method_blocks();ciMethodBlocks::ciMethodBlocks(Arena*, ciMethod*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::build_ifg_physical(ResourceArea*);IndexSet::IndexSet(IndexSet*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::compute_local_live_sets();BitMap::BitMap(unsigned long, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_field_access(bool, bool);Parse::do_put_xxx(Node*, ciField*, bool);Compile::alias_type(ciField*);TypeInstPtr::add_offset(long) const;Type::hashcons();Dict::Insert(void*, void*, bool);Dict::doubhash();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 2
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::assign_reg_num();LinearScan::assign_reg_num(LIR_OpList*, IntervalWalker*);LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool);OopMap::OopMap(int, int);CompressedWriteStream::CompressedWriteStream(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
Attach Listener;dlsym 2
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);ciEnv::ciEnv(CompileTask*, int);Arena::Arena(MemoryType);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();RangeCheckElimination::eliminate(IR*);RangeCheckEliminator::RangeCheckEliminator(IR*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::number_instructions();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);IndexSet::alloc_block_containing(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::assign_reg_num();LinearScan::assign_reg_num(LIR_OpList*, IntervalWalker*);LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool);OopMap::OopMap(int, int);CompressedWriteStream::CompressedWriteStream(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&);PhaseCFG::build_cfg();Block_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
Attach Listener;[unknown];dlopen_doit;_dl_open 2
VM Thread;start_thread;java_start(Thread*);VMThread::run();VMThread::loop();SafepointSynchronize::end();os::PlatformEvent::unpark() 2
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();RangeCheckElimination::eliminate(IR*);RangeCheckEliminator::RangeCheckEliminator(IR*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);PhaseChaitin::split_USE(Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray<unsigned int>, int);Node::out_grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 2
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int);BlockListBuilder::set_leaders();ciMethod::bci_block_start();MethodLiveness::compute_liveness();MethodLiveness::init_basic_blocks();MethodLiveness::BasicBlock::BasicBlock(MethodLiveness*, int, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);CodeBuffer::~CodeBuffer();Arena::~Arena();Arena::destruct_contents();ThreadCritical::ThreadCritical() 2
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::PhaseChaitin(unsigned int, PhaseCFG&, Matcher&);GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);ciBytecodeStream::get_method(bool&, ciSignature**);ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*);ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*);ciObjectFactory::get_metadata(Metadata*);ciObjectFactory::create_new_metadata(Metadata*);ciMethod::ciMethod(methodHandle, ciInstanceKlass*);ciSignature::ciSignature(ciKlass*, constantPoolHandle, ciSymbol*);Chunk::next_chop();ThreadCritical::ThreadCritical() 2
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_field_access(bool, bool);Parse::do_get_xxx(Node*, ciField*, bool);PhaseGVN::transform_no_reclaim(Node*);AddPNode::Identity(PhaseTransform*);Type::hashcons();Dict::Insert(void*, void*, bool);Dict::doubhash();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_method_entry();GraphKit::make_dtrace_method_entry_exit(ciMethod*, bool);GraphKit::kill_dead_locals();ciMethod::liveness_at_bci(int);MethodLiveness::compute_liveness();MethodLiveness::init_basic_blocks();MethodLiveness::BasicBlock::BasicBlock(MethodLiveness*, int, int);GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);IdealLoopTree::loop_predication(PhaseIdealLoop*);PhaseIdealLoop::loop_predication_impl(IdealLoopTree*);Invariance::clone(Node*, Node*);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.BufferedWriter;::ensureOpen;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 2
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::split_if_with_blocks(VectorSet&, Node_Stack&);PhaseIdealLoop::do_split_if(Node*);PhaseIdealLoop::split_thru_region(Node*, Node*);PhaseIdealLoop::set_idom(Node*, Node*, unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ResourceMark::reset_to_mark();Chunk::next_chop();ThreadCritical::ThreadCritical() 2
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::set_results_for_java_call(CallJavaNode*, bool);GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);Instruction::operator new(unsigned long) [clone .constprop.471];Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::resolve_data_flow();LIR_List::append(LIR_InsertionBuffer*);ResourceArray::expand(unsigned long, int, int&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);IndexSet::alloc_block_containing(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();GraphKit::round_double_arguments(ciMethod*);TypeFunc::make(ciMethod*);TypeTuple::make_domain(ciInstanceKlass*, ciSignature*);TypeOopPtr::xmeet(Type const*) const;TypeInstPtr::xmeet_helper(Type const*) const;Type::hashcons();Dict::Insert(void*, void*, bool);Dict::doubhash();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIterGVN::optimize();PhaseIterGVN::transform_old(Node*);PhiNode::Ideal(PhaseGVN*, bool);PhiNode::PhiNode(Node*, Type const*, TypePtr const*, int, int, int, int);Node::Node(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::build_intervals();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::profile_call(ciMethod*, Instruction*, ciKlass*, Values*, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ADC$ControlRegister;::write;[unknown];[unknown];[unknown];Lavrora.sim.mcu.ADC$MUXRegister;::getSingleIndex;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Matcher::match_tree(Node const*);Matcher::ReduceInst(State*, int, Node*&);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ReenterI(Thread*, ObjectWaiter*);os::PlatformEvent::park() 2
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_ProfileInvoke(ProfileInvoke*);LIRGenerator::increment_event_counter_impl(CodeEmitInfo*, ciMethod*, int, int, bool, bool);LIR_List::load(LIR_Address*, LIR_OprDesc*, CodeEmitInfo*, LIR_PatchCode);ResourceArray::expand(unsigned long, int, int&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&);Node_List::push(Node*);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Matcher::match_sfpt(SafePointNode*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&);PhaseBlockLayout::reorder_traces(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
Service Thread;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::Output();Compile::BuildOopMaps();OopFlow::make(Arena*, int, Compile*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 2
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 2
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_field_access(bool, bool);GraphKit::null_check_common(Node*, BasicType, bool, Node**) [clone .part.293];GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool);GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$LD;::accept;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 2
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseIFG::SquareUp();IndexSet::alloc_block_containing(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$LD;::accept;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 2
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 2
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.AtmelInternalDevice;::read16;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 2
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$200;Lavrora.sim.mcu.Timer16Bit;::tickerStart;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::compare;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::read;Lavrora.sim.mcu.AtmelInternalDevice;::read16;Lavrora.sim.mcu.Timer16Bit$BufferedRegister;::read;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 3
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::setup_start_block(int, BlockBegin*, BlockBegin*, ValueStack*);GraphBuilder::header_block(BlockBegin*, BlockBegin::Flag, ValueStack*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::post_allocate_copy_removal();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 3
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&);PhaseBlockLayout::find_edges();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&);PhaseCFG::build_cfg();Node::clone() const;Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 3
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_If(If*);LIRGenerator::profile_branch(If*, Instruction::Condition);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 3
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int);BlockListBuilder::set_leaders();BlockListBuilder::make_block_at(int, BlockBegin*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::set_results_for_java_call(CallJavaNode*, bool);GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool);Node::Node(Node*);Node::out_grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&);Node_List::push(Node*);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&);PhaseCFG::build_cfg();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&);Node_List::push(Node*);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber);Compile::identify_useful_nodes(Unique_Node_List&);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 3
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();attach_listener_thread_entry(JavaThread*, Thread*);JvmtiExport::load_agent_library(AttachOperation*, outputStream*);Agent_OnAttach;jvmti_GenerateEvents;JvmtiCodeBlobEvents::generate_compiled_method_load_events(JvmtiEnv*);JvmtiExport::post_compiled_method_load(nmethod*);create_inline_record(nmethod*);nmethod::scope_desc_at(unsigned char*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_If(If*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::block_do_prolog(BlockBegin*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);PhaseChaitin::split_USE(Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray<unsigned int>, int);PhaseChaitin::get_spillcopy_wide(Node*, Node*, unsigned int);Node::add_req(Node*);Node::grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::Dominators();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseIFG::init(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::Dominators();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);IndexSet::alloc_block_containing(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 3
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$200;Lavrora.sim.mcu.Timer16Bit;::tickerStart;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::compare;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::read;Lavrora.sim.mcu.AtmelInternalDevice;::read16;Lavrora.sim.mcu.Timer16Bit$BufferedRegister;::read;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::global_code_motion();GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::Dominators();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::global_code_motion();PhaseCFG::schedule_local(Block*, GrowableArray<int>&, VectorSet&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::eliminate_null_checks();Optimizer::eliminate_null_checks();NullCheckEliminator::iterate_one(BlockBegin*);NullCheckEliminator::merge_state_for(BlockBegin*, ValueSet*);BitMap::BitMap(unsigned long, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_code_body();LIR_Assembler::emit_code(BlockList*);LIR_Assembler::process_debug_info(LIR_Op*);LIR_Assembler::record_non_safepoint_debug_info();DebugInformationRecorder::describe_scope(int, ciMethod*, int, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*);DebugInformationRecorder::find_sharable_decode_offset(int) [clone .part.152];Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$200;Lavrora.sim.mcu.Timer16Bit;::tickerStart;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::compare;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::read;Lavrora.sim.mcu.AtmelInternalDevice;::read16;Lavrora.sim.mcu.Timer16Bit$BufferedRegister;::read;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::Output();Compile::BuildOopMaps();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 3
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::build_ifg_physical(ResourceArea*);IndexSet::IndexSet(IndexSet*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 3
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 3
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&);PhaseCFG::build_cfg();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 3
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 3
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::allocate_registers();IntervalWalker::walk_to(int);LinearScanWalker::activate_current();LinearScanWalker::alloc_free_reg(Interval*);LinearScanWalker::split_before_usage(Interval*, int, int);Interval::split(int);Interval::new_split_child();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ciMethod::ensure_method_data();ciMethod::ensure_method_data(methodHandle);ciMethodData::load_data();DataLayout::data_in();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 3
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$200;Lavrora.sim.mcu.Timer16Bit;::tickerStart;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::compare;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::read;Lavrora.sim.mcu.AtmelInternalDevice;::read16;Lavrora.sim.mcu.Timer16Bit$BufferedRegister;::read;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 3
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&);Chunk::next_chop();ThreadCritical::ThreadCritical() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::Matcher();PhaseTransform::PhaseTransform(Phase::PhaseNumber);Type_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_method_entry();GraphKit::make_dtrace_method_entry_exit(ciMethod*, bool);GraphKit::kill_dead_locals();ciMethod::liveness_at_bci(int);MethodLiveness::compute_liveness();MethodLiveness::init_basic_blocks();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::split_critical_edges();BlockBegin::insert_block_between(BlockBegin*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::PhaseIdealLoop(PhaseIterGVN&, bool, bool);PhaseTransform::PhaseTransform(Phase::PhaseNumber);Type_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 3
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();GlobalValueNumbering::GlobalValueNumbering(IR*);ValueMap::ValueMap(ValueMap*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 4
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 4
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 4
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 4
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 4
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::Dominators();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 4
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::global_code_motion();PhaseCFG::schedule_late(VectorSet&, Node_List&);PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*);GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 4
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileQueue::get();NMethodSweeper::possibly_sweep();NMethodSweeper::sweep_code_cache();NMethodSweeper::process_nmethod(nmethod*);nmethod::cleanup_inline_caches();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 4
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 4
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 4
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 4
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::build_intervals();LinearScan::create_interval(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 4
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 4
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 4
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);IndexSet::alloc_block_containing(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 4
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 4
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileQueue::get();NMethodSweeper::possibly_sweep();NMethodSweeper::sweep_code_cache();NMethodSweeper::process_nmethod(nmethod*);nmethod::cleanup_inline_caches();Chunk::next_chop();ThreadCritical::ThreadCritical() 4
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 4
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 4
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&);PhaseCFG::build_cfg();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 4
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 4
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 4
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);PhaseChaitin::split_Rematerialize(Node*, Block*, unsigned int, unsigned int&, GrowableArray<unsigned int>, int, unsigned int*, Node**, bool);Node::clone() const;Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 4
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 4
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 4
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 4
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 4
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 4
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 4
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::global_code_motion();Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 4
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&);IndexSet::alloc_block_containing(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 4
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_Goto(Goto*);LIRGenerator::move_to_phi(ValueStack*);PhiResolverState::reset(int);ResourceArray::expand(unsigned long, int, int&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 4
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 4
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 4
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::build_intervals();LinearScan::add_use(LIR_OprDesc*, int, int, IntervalUseKind);LinearScan::create_interval(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 4
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();DirectCallGenerator::generate(JVMState*);GraphKit::set_results_for_java_call(CallJavaNode*, bool);GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool);GraphKit::clone_map();Node::clone() const;Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 4
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 4
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 4
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 4
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 4
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;[unknown];Ljava.io.OutputStreamWriter;::flushBuffer;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 4
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 4
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&);PhaseCFG::build_cfg();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 4
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 4
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 4
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 4
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 4
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 4
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 4
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileQueue::get();Monitor::wait(bool, long, bool);SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 4
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$OUT;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::writeIORegisterByte;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 4
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 4
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 4
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 4
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 4
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 4
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 5
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 5
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 5
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 5
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 5
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 5
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();Compile::optimize_inlining(ciMethod*, int, ciInstanceKlass*, ciMethod*, TypeOopPtr const*, bool);Dependencies::assert_common_2(Dependencies::DepType, ciBaseObject*, ciBaseObject*);GrowableArray<int>::grow(int);GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 5
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 5
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 5
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Node::out_grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 5
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 5
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 5
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 5
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_Base(Base*);ResourceArray::expand(unsigned long, int, int&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 5
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 5
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 5
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::fill_buffer(CodeBuffer*, unsigned int*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 5
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 5
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 5
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 5
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 5
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 5
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 5
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 5
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 5
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 5
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 5
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 5
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 5
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 5
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 5
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 5
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 5
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 5
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::compute_local_live_sets();BitMap::BitMap(unsigned long, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 5
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 5
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 5
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 5
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);VectorSet::VectorSet(Arena*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 5
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 5
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 5
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 5
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 5
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 5
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 5
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 6
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileQueue::get();NMethodSweeper::possibly_sweep();NMethodSweeper::sweep_code_cache();NMethodSweeper::process_nmethod(nmethod*);nmethod::cleanup_inline_caches();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 6
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 6
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileQueue::get();NMethodSweeper::possibly_sweep();NMethodSweeper::sweep_code_cache();NMethodSweeper::process_nmethod(nmethod*);nmethod::cleanup_inline_caches();Chunk::next_chop();ThreadCritical::ThreadCritical() 6
VM Thread;start_thread;java_start(Thread*);VMThread::run();VMThread::loop();os::PlatformEvent::unpark() 6
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 6
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6
VM Thread;start_thread;java_start(Thread*);VMThread::run();VMThread::loop();VMThread::evaluate_operation(VM_Operation*);VM_Operation::evaluate();VM_GenCollectForAllocation::doit();GenCollectorPolicy::satisfy_failed_allocation(unsigned long, bool);GenCollectedHeap::do_collection(bool, bool, unsigned long, bool, int);DefNewGeneration::collect(bool, bool, unsigned long, bool);GenCollectedHeap::gen_process_roots(int, bool, bool, GenCollectedHeap::ScanningOption, bool, OopsInGenClosure*, OopsInGenClosure*, CLDClosure*);GenCollectedHeap::process_roots(bool, GenCollectedHeap::ScanningOption, OopClosure*, OopClosure*, CLDClosure*, CLDClosure*, CodeBlobToOopClosure*);Threads::possibly_parallel_oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*);JavaThread::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*);frame::oops_do_internal(OopClosure*, CLDClosure*, CodeBlobClosure*, RegisterMap*, bool);OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 6
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 6
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 6
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 6
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 6
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 6
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 6
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 6
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$LD;::accept;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 6
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 6
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 6
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhasePeephole::PhasePeephole(PhaseRegAlloc*, PhaseCFG&);Type_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 6
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 6
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 6
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 6
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 6
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::eliminate_null_checks();Optimizer::eliminate_null_checks();Chunk::next_chop();ThreadCritical::ThreadCritical() 6
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 6
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ciMethod::ensure_method_data();ciMethod::ensure_method_data(methodHandle);ciMethodData::load_data();DataLayout::data_in();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 6
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6
VM Thread;start_thread;java_start(Thread*);VMThread::run();VMThread::loop();VMThread::evaluate_operation(VM_Operation*);VM_Operation::evaluate();VM_GenCollectForAllocation::doit();GenCollectorPolicy::satisfy_failed_allocation(unsigned long, bool);GenCollectedHeap::do_collection(bool, bool, unsigned long, bool, int);Chunk::next_chop();ThreadCritical::ThreadCritical() 6
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 6
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_Goto(Goto*);LIRGenerator::move_to_phi(ValueStack*);PhiResolverState::reset(int);ResourceArray::expand(unsigned long, int, int&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 6
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 6
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 7
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 7
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 7
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 7
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 7
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 7
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 7
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&);Chunk::next_chop();ThreadCritical::ThreadCritical() 7
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::build_dominator_tree();Chunk::next_chop();ThreadCritical::ThreadCritical() 7
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::global_code_motion();PhaseCFG::schedule_early(VectorSet&, Node_List&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 7
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 7
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::global_code_motion();PhaseCFG::schedule_local(Block*, GrowableArray<int>&, VectorSet&);PhaseCFG::sched_call(Block*, unsigned int, Node_List&, GrowableArray<int>&, MachCallNode*, VectorSet&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 7
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseTransform::PhaseTransform(Phase::PhaseNumber);Type_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 7
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 7
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 7
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::Output();Compile::BuildOopMaps();OopFlow::make(Arena*, int, Compile*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 7
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 7
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::build_dominator_tree();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 7
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 7
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 7
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 7
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();Compile::final_graph_reshaping();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 7
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 7
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 7
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 7
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Node::out_grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 7
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::fill_buffer(CodeBuffer*, unsigned int*);DebugInformationRecorder::describe_scope(int, ciMethod*, int, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*);DebugInformationRecorder::find_sharable_decode_offset(int) [clone .part.152];Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 7
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 7
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 7
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 7
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 8
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 8
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 8
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 8
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 9
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ADC$ControlRegister;::write;[unknown];[unknown];[unknown];Lavrora.sim.mcu.ADC$MUXRegister;::getSingleIndex;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 9
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 9
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 9
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 9
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 9
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 9
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 9
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ciMethod::ensure_method_data();ciMethod::ensure_method_data(methodHandle);ciMethodData::load_data();Chunk::next_chop();ThreadCritical::ThreadCritical() 9
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 9
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 9
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 9
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 9
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 9
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 9
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 9
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 9
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 9
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 10
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::Output();Compile::BuildOopMaps();OopFlow::make(Arena*, int, Compile*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 10
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 10
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::fill_buffer(CodeBuffer*, unsigned int*);cmpFastUnlockNode::emit(CodeBuffer&, PhaseRegAlloc*) const;MacroAssembler::fast_unlock(RegisterImpl*, RegisterImpl*, RegisterImpl*, bool);Assembler::jmpb(Label&);Label::add_patch_at(CodeBuffer*, int);CodeBuffer::create_patch_overflow();Arena::Arena(MemoryType);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 10
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseRegAlloc::alloc_node_regs(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 10
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::Dominators();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 10
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 10
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 10
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 10
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 10
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 10
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 10
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 10
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 10
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&);PhaseCFG::build_cfg();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 10
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 11
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::find_shared(Node*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 11
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::build_intervals();Interval::add_range(int, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 11
VM Thread;start_thread;java_start(Thread*);VMThread::run();VMThread::loop();SafepointSynchronize::begin();Monitor::wait(bool, long, bool);Monitor::IWait(Thread*, long);os::PlatformEvent::park() 11
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 11
VM Thread;start_thread;java_start(Thread*);VMThread::run();VMThread::loop();SafepointSynchronize::begin();Monitor::wait(bool, long, bool);Monitor::IWait(Thread*, long);os::PlatformEvent::unpark() 11
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 11
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 11
VM Thread;start_thread;java_start(Thread*);VMThread::run();VMThread::loop();SafepointSynchronize::end();os::PlatformEvent::unpark() 11
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::fill_buffer(CodeBuffer*, unsigned int*);DebugInformationRecorder::describe_scope(int, ciMethod*, int, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*);DebugInformationRecorder::find_sharable_decode_offset(int) [clone .part.152];Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 11
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::fill_buffer(CodeBuffer*, unsigned int*);jmpDir_shortNode::emit(CodeBuffer&, PhaseRegAlloc*) const;Assembler::jmpb(Label&);Label::add_patch_at(CodeBuffer*, int);CodeBuffer::create_patch_overflow();Arena::Arena(MemoryType);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 11
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 11
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);Chunk::next_chop();ThreadCritical::ThreadCritical() 11
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 11
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 11
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 12
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 12
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 12
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 12
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 12
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 12
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 12
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 12
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 12
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 12
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 12
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 12
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 13
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 13
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 13
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::build_intervals();LinearScan::add_use(LIR_OprDesc*, int, int, IntervalUseKind);LinearScan::create_interval(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 13
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 13
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 13
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 13
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::Dominators();Chunk::next_chop();ThreadCritical::ThreadCritical() 13
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 13
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 13
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 13
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 13
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ADC$ControlRegister;::write;[unknown];[unknown];[unknown];Lavrora.sim.mcu.ADC$MUXRegister;::getSingleIndex;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 13
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 13
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::Dominators();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 13
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Chunk::next_chop();ThreadCritical::ThreadCritical() 13
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ADC$ControlRegister;::write;[unknown];[unknown];[unknown];Lavrora.sim.mcu.ADC$MUXRegister;::getSingleIndex;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 13
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 13
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);Chunk::next_chop();ThreadCritical::ThreadCritical() 14
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 14
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 14
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 14
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 14
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 14
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 14
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 14
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 14
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 14
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 15
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 15
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 15
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Chunk::next_chop();ThreadCritical::ThreadCritical() 15
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 16
VM Periodic Tas;start_thread;java_start(Thread*);WatcherThread::run();PeriodicTask::real_time_tick(int);ChunkPoolCleaner::task();ThreadCritical::ThreadCritical() 16
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 16
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 16
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 16
VM Periodic Tas;start_thread;java_start(Thread*);WatcherThread::run();PeriodicTask::real_time_tick(int);ChunkPoolCleaner::task();ThreadCritical::ThreadCritical() 16
VM Periodic Tas;start_thread;java_start(Thread*);WatcherThread::run();PeriodicTask::real_time_tick(int);ChunkPoolCleaner::task();ThreadCritical::ThreadCritical() 16
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 16
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 16
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::Dominators();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 16
VM Periodic Tas;start_thread;java_start(Thread*);WatcherThread::run();PeriodicTask::real_time_tick(int);ChunkPoolCleaner::task();ThreadCritical::ThreadCritical() 16
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 16
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::Dominators();Chunk::next_chop();ThreadCritical::ThreadCritical() 16
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 17
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 17
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::find_shared(Node*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 17
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 17
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 17
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);Chunk::next_chop();ThreadCritical::ThreadCritical() 17
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 17
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 17
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Matcher::match_sfpt(SafePointNode*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 17
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::merge_multidefs();GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 17
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 17
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseIFG::init(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 17
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 17
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 17
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 17
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 17
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 18
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 18
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::merge_multidefs();Chunk::next_chop();ThreadCritical::ThreadCritical() 18
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 18
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 18
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 18
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 18
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileQueue::get();Monitor::wait(bool, long, bool);Monitor::IWait(Thread*, long);os::PlatformEvent::unpark() 18
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::Dominators();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 18
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 18
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseCCP::do_transform();PhaseCCP::transform(Node*);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 19
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 19
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 19
Attach Listener;start_thread;java_start(Thread*);JavaThread::thread_main_inner();attach_listener_thread_entry(JavaThread*, Thread*);JvmtiExport::load_agent_library(AttachOperation*, outputStream*);Agent_OnAttach;jvmti_GenerateEvents;JvmtiCodeBlobEvents::generate_compiled_method_load_events(JvmtiEnv*);JvmtiExport::post_compiled_method_load(nmethod*);create_inline_record(nmethod*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 19
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Chunk::next_chop();ThreadCritical::ThreadCritical() 19
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 19
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 19
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 19
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 19
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::Output();Compile::init_buffer(unsigned int*);Compile::shorten_branches(unsigned int*, int&, int&, int&);Compile::scratch_emit_size(Node const*);cmpFastUnlockNode::emit(CodeBuffer&, PhaseRegAlloc*) const;MacroAssembler::fast_unlock(RegisterImpl*, RegisterImpl*, RegisterImpl*, bool);Assembler::jmpb(Label&);Label::add_patch_at(CodeBuffer*, int);CodeBuffer::create_patch_overflow();Arena::Arena(MemoryType);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 20
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();ResourceMark::reset_to_mark();Chunk::next_chop();ThreadCritical::ThreadCritical() 20
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::Output();Compile::init_buffer(unsigned int*);Compile::shorten_branches(unsigned int*, int&, int&, int&);Compile::scratch_emit_size(Node const*);CodeBuffer::~CodeBuffer();Arena::~Arena();Arena::destruct_contents();ThreadCritical::ThreadCritical() 20
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 20
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 21
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 21
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);CodeBuffer::~CodeBuffer();Arena::~Arena();Arena::destruct_contents();ThreadCritical::ThreadCritical() 21
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 21
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseIFG::init(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 21
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 21
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Interpreter;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 21
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 22
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 22
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 22
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 22
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 22
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::Dominators();Chunk::next_chop();ThreadCritical::ThreadCritical() 22
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 22
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 23
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 23
Attach Listener;start_thread;java_start(Thread*);JavaThread::thread_main_inner();attach_listener_thread_entry(JavaThread*, Thread*);JvmtiExport::load_agent_library(AttachOperation*, outputStream*);Agent_OnAttach;jvmti_GenerateEvents;JvmtiCodeBlobEvents::generate_compiled_method_load_events(JvmtiEnv*);JvmtiExport::post_compiled_method_load(nmethod*);JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*);ScopeDesc::ScopeDesc(nmethod const*, int, bool, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 23
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 23
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::getBuffer->Lavrora.sim.util.SimUtil;::getIDTimeString;Lavrora.sim.util.SimUtil;::toIDTimeString->Lcck.text.StringUtil;::justify;Lcck.text.StringUtil;::justify;Lcck.text.StringUtil;::space;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 23
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 23
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileQueue::get();os::PlatformEvent::unpark() 24
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 24
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 24
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 25
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 25
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 25
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 25
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 25
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 25
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 25
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 25
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 26
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 26
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 26
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 26
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 26
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 26
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 27
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 27
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::do_global_code_motion();PhaseCFG::global_code_motion();Chunk::next_chop();ThreadCritical::ThreadCritical() 27
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 27
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 28
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_call();VirtualCallGenerator::generate(JVMState*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 28
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 28
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 28
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 28
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 28
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 28
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 29
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 29
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 29
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 29
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 29
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 30
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ADC$ControlRegister;::write;[unknown];[unknown];[unknown];Lavrora.sim.mcu.ADC$MUXRegister;::getSingleIndex;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 30
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 30
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 31
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 31
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 31
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Matcher::match_tree(Node const*);Matcher::Label_Root(Node const*, State*, Node*, Node const*);Matcher::Label_Root(Node const*, State*, Node*, Node const*);Matcher::Label_Root(Node const*, State*, Node*, Node const*);Matcher::Label_Root(Node const*, State*, Node*, Node const*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 31
Attach Listener;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;[unknown];Lavrora.arch.legacy.LegacyInterpreter;::visit;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 31
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 32
Attach Listener;start_thread;java_start(Thread*);JavaThread::thread_main_inner();attach_listener_thread_entry(JavaThread*, Thread*);JvmtiExport::load_agent_library(AttachOperation*, outputStream*);Agent_OnAttach;jvmti_GenerateEvents;JvmtiCodeBlobEvents::generate_compiled_method_load_events(JvmtiEnv*);JvmtiExport::post_compiled_method_load(nmethod*);create_inline_record(nmethod*);ScopeDesc::sender() const;Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 32
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 33
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 33
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 35
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 35
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 35
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 35
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 36
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 36
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 37
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 37
Attach Listener;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];Lcck.text.Terminal;::println;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 37
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 38
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 38
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 39
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 39
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 40
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::post_allocate_copy_removal();Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 40
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 41
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 41
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::allocate_registers();IntervalWalker::walk_to(int);LinearScanWalker::activate_current();LinearScanWalker::insert_move(int, Interval*, Interval*);LIR_List::append(LIR_InsertionBuffer*);ResourceArray::expand(unsigned long, int, int&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 41
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 41
Attach Listener;start_thread;java_start(Thread*);JavaThread::thread_main_inner();attach_listener_thread_entry(JavaThread*, Thread*);JvmtiExport::load_agent_library(AttachOperation*, outputStream*);Agent_OnAttach;jvmti_GenerateEvents;JvmtiCodeBlobEvents::generate_compiled_method_load_events(JvmtiEnv*);JvmtiExport::post_compiled_method_load(nmethod*);create_inline_record(nmethod*);ScopeDesc::sender() const;Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 43
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 44
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 44
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 44
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 44
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 45
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 45
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 45
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 46
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Node::clone() const;Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 46
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$LD;::accept;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 46
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 46
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 47
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 47
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::allocate_registers();IntervalWalker::walk_to(int);LinearScanWalker::activate_current();LinearScanWalker::insert_move(int, Interval*, Interval*);LIR_List::append(LIR_InsertionBuffer*);ResourceArray::expand(unsigned long, int, int&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 47
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 48
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 48
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 48
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 48
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 48
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ADC$ControlRegister;::write;[unknown];[unknown];[unknown];Lavrora.sim.mcu.ADC$MUXRegister;::getSingleIndex;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 48
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 48
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 49
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileQueue::get();os::PlatformEvent::unpark() 49
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 49
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 49
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);ciEnv::ciEnv(CompileTask*, int);Arena::Arena(MemoryType);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 50
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 50
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 50
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::initialize();DebugInformationRecorder::DebugInformationRecorder(OopRecorder*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 50
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 50
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);ciEnv::ciEnv(CompileTask*, int);ciObjectFactory::ciObjectFactory(Arena*, int);GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 50
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 51
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::Output();Compile::BuildOopMaps();OopFlow::make(Arena*, int, Compile*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 52
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ADC$ControlRegister;::write;[unknown];[unknown];[unknown];Lavrora.sim.mcu.ADC$MUXRegister;::getSingleIndex;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 52
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 53
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.mcu.Timer16Bit$Mode_Normal;::fire;Lavrora.sim.mcu.Timer16Bit;::access$200;Lavrora.sim.mcu.Timer16Bit;::tickerStart;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::compare;Lavrora.sim.mcu.Timer16Bit$OutputCompareUnit;::read;Lavrora.sim.mcu.AtmelInternalDevice;::read16;Lavrora.sim.mcu.Timer16Bit$BufferedRegister;::read;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 53
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 54
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 54
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseIFG::init(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 54
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 54
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];Lavrora.sim.mcu.ADC$ControlRegister;::convertVoltage;[unknown];Lavrora.sim.radio.Medium$Receiver;::isChannelClear;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 55
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 55
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 56
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 56
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 56
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);Chunk::next_chop();ThreadCritical::ThreadCritical() 56
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Chunk::next_chop();ThreadCritical::ThreadCritical() 56
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 56
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 57
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 57
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 58
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$LD;::accept;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 59
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 59
Attach Listener;start_thread;java_start(Thread*);JavaThread::thread_main_inner();attach_listener_thread_entry(JavaThread*, Thread*);JvmtiExport::load_agent_library(AttachOperation*, outputStream*);Agent_OnAttach;jvmti_GenerateEvents;JvmtiCodeBlobEvents::generate_compiled_method_load_events(JvmtiEnv*);JvmtiExport::post_compiled_method_load(nmethod*);JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*);ScopeDesc::sender() const;Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 59
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::Dominators();Chunk::next_chop();ThreadCritical::ThreadCritical() 60
Attach Listener;start_thread;java_start(Thread*);JavaThread::thread_main_inner();attach_listener_thread_entry(JavaThread*, Thread*);JvmtiExport::load_agent_library(AttachOperation*, outputStream*);Agent_OnAttach;jvmti_GenerateEvents;JvmtiCodeBlobEvents::generate_compiled_method_load_events(JvmtiEnv*);JvmtiExport::post_compiled_method_load(nmethod*);create_inline_record(nmethod*);ScopeDesc::sender() const;Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 61
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 61
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 61
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileQueue::get();Monitor::wait(bool, long, bool);Monitor::IWait(Thread*, long);os::PlatformEvent::unpark() 63
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 63
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 64
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 67
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 70
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 71
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 71
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 71
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 73
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 74
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 74
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 75
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 76
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);PhaseChaitin::split_USE(Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray<unsigned int>, int);PhaseChaitin::get_spillcopy_wide(Node*, Node*, unsigned int);Node::add_req(Node*);Node::out_grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 76
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 78
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 79
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::post_allocate_copy_removal();Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 80
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 80
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 80
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 80
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::Split(unsigned int, ResourceArea*);Chunk::next_chop();ThreadCritical::ThreadCritical() 80
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 81
VM Thread;start_thread;java_start(Thread*);VMThread::run();VMThread::loop();Monitor::wait(bool, long, bool);Monitor::IWait(Thread*, long);os::PlatformEvent::park(long) 81
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ADC$ControlRegister;::write;[unknown];[unknown];[unknown];Lavrora.sim.mcu.ADC$MUXRegister;::getSingleIndex;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 81
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 82
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 83
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 83
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 83
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();Chunk::next_chop();ThreadCritical::ThreadCritical() 84
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 84
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 84
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 86
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 86
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 87
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 87
Attach Listener;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Arena::Arena(MemoryType);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 87
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 89
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 89
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 90
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 90
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 91
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 92
node-22;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 93
node-22;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 93
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 94
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 99
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 100
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 101
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 101
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 102
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 106
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 106
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 106
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 106
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 107
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 110
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 110
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 110
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 113
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 113
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 114
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 114
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 114
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Arena::~Arena();Arena::destruct_contents();ThreadCritical::ThreadCritical() 115
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 115
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 117
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 117
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseIFG::init(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 117
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 118
Attach Listener;start_thread;java_start(Thread*);JavaThread::thread_main_inner();attach_listener_thread_entry(JavaThread*, Thread*);JvmtiExport::load_agent_library(AttachOperation*, outputStream*);Agent_OnAttach;jvmti_GenerateEvents;JvmtiCodeBlobEvents::generate_compiled_method_load_events(JvmtiEnv*);JvmtiExport::post_compiled_method_load(nmethod*);JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*);Chunk::next_chop();ThreadCritical::ThreadCritical() 119
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 120
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();Arena::Arena(MemoryType);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 121
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);ciEnv::ciEnv(CompileTask*, int);ciObjectFactory::ciObjectFactory(Arena*, int);GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 121
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Arena::Arena(MemoryType);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 121
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);ciEnv::ciEnv(CompileTask*, int);Arena::Arena(MemoryType);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 121
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 121
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseIFG::init(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 121
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseIFG::init(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 121
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();Arena::~Arena();Arena::destruct_contents();ThreadCritical::ThreadCritical() 122
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Arena::~Arena();Arena::destruct_contents();ThreadCritical::ThreadCritical() 122
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Init(int);DebugInformationRecorder::DebugInformationRecorder(OopRecorder*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 122
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Arena::Arena(MemoryType);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 122
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::Matcher();Arena::Arena(MemoryType, unsigned long);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 122
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);NodeHash::NodeHash(Arena*, unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 122
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Type::Initialize(Compile*);Dict::Dict(int (*)(void const*, void const*), int (*)(void const*), Arena*, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 122
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 122
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Arena::move_contents(Arena*);Arena::destruct_contents();ThreadCritical::ThreadCritical() 122
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();Arena::~Arena();Arena::destruct_contents();ThreadCritical::ThreadCritical() 122
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Arena::Arena(MemoryType);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 122
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Arena::Arena(MemoryType);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 122
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();Arena::Arena(MemoryType);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 122
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Init(int);GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 122
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 123
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 124
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 124
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Node::clone() const;Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 124
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseChaitin::post_allocate_copy_removal();Chunk::next_chop();ThreadCritical::ThreadCritical() 125
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 127
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 128
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 128
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 129
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 129
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 130
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 131
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 131
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 134
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 135
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 136
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 136
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 138
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 138
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 138
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 139
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 139
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 139
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 139
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 139
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 140
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 141
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();Chunk::next_chop();ThreadCritical::ThreadCritical() 141
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 141
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 142
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 142
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 143
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 143
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Matcher::match_tree(Node const*);Matcher::Label_Root(Node const*, State*, Node*, Node const*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 143
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();Chunk::next_chop();ThreadCritical::ThreadCritical() 143
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 144
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 144
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 145
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 146
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 148
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 148
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 149
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 150
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 150
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 150
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 151
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 151
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 151
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 151
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 151
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 152
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 152
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 152
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileQueue::get();Monitor::wait(bool, long, bool);Monitor::IWait(Thread*, long);os::PlatformEvent::park(long) 152
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 153
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 153
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 153
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 153
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 153
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 153
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 153
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 154
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 154
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 154
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileQueue::get();Monitor::wait(bool, long, bool);Monitor::IWait(Thread*, long);os::PlatformEvent::park(long) 154
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 154
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 154
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 155
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 155
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 155
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 155
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 155
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 156
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 156
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 156
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 156
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 156
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 156
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 157
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 157
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 158
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 159
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 159
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 160
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();Chunk::next_chop();ThreadCritical::ThreadCritical() 160
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 164
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 164
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 164
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 165
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 167
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 167
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 167
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 168
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 168
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 169
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 169
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 171
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 171
Attach Listener;start_thread;java_start(Thread*);JavaThread::thread_main_inner();attach_listener_thread_entry(JavaThread*, Thread*);JvmtiExport::load_agent_library(AttachOperation*, outputStream*);Agent_OnAttach;jvmti_GenerateEvents;JvmtiCodeBlobEvents::generate_compiled_method_load_events(JvmtiEnv*);JvmtiExport::post_compiled_method_load(nmethod*);create_inline_record(nmethod*);nmethod::scope_desc_at(unsigned char*);ScopeDesc::ScopeDesc(nmethod const*, int, int, bool, bool);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 171
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 172
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 172
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 172
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 173
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 173
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 173
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 174
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 174
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 174
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 175
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 176
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 176
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 176
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 176
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 176
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 177
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 177
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 179
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 182
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 186
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 189
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 190
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;[unknown];Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 190
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 192
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 193
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 193
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 196
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 197
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Matcher::match_tree(Node const*);Matcher::Label_Root(Node const*, State*, Node*, Node const*);Matcher::Label_Root(Node const*, State*, Node*, Node const*);Matcher::Label_Root(Node const*, State*, Node*, Node const*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 199
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 202
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 202
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 203
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 208
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 209
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 211
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow->Lavrora.sim.clock.DeltaQueue$Link;::fire;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 218
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow->Lavrora.sim.clock.DeltaQueue$Link;::fire;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 218
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 219
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 222
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ADC$ControlRegister;::write;[unknown];[unknown];[unknown];Lavrora.sim.mcu.ADC$MUXRegister;::getSingleIndex;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 224
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 224
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Node::clone() const;Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 228
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Arena::~Arena();Arena::destruct_contents();ThreadCritical::ThreadCritical() 228
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 238
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Arena::~Arena();Arena::destruct_contents();ThreadCritical::ThreadCritical() 244
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 246
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 254
Attach Listener;start_thread;java_start(Thread*);JavaThread::thread_main_inner();attach_listener_thread_entry(JavaThread*, Thread*);JvmtiExport::load_agent_library(AttachOperation*, outputStream*);Agent_OnAttach;jvmti_GenerateEvents;JvmtiCodeBlobEvents::generate_compiled_method_load_events(JvmtiEnv*);JvmtiExport::post_compiled_method_load(nmethod*);create_inline_record(nmethod*);nmethod::scope_desc_at(unsigned char*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 255
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 259
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 260
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Node::clone() const;Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 260
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 262
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 274
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked->Lavrora.sim.radio.Medium$Receiver;::access$000->Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 275
Attach Listener;start_thread;java_start(Thread*);JavaThread::thread_main_inner();attach_listener_thread_entry(JavaThread*, Thread*);JvmtiExport::load_agent_library(AttachOperation*, outputStream*);Agent_OnAttach;jvmti_GenerateEvents;JvmtiCodeBlobEvents::generate_compiled_method_load_events(JvmtiEnv*);JvmtiExport::post_compiled_method_load(nmethod*);create_inline_record(nmethod*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 276
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Arena::~Arena();Arena::destruct_contents();ThreadCritical::ThreadCritical() 276
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Arena::~Arena();Arena::destruct_contents();ThreadCritical::ThreadCritical() 277
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 280
Attach Listener;start_thread;java_start(Thread*);JavaThread::thread_main_inner();attach_listener_thread_entry(JavaThread*, Thread*);JvmtiExport::load_agent_library(AttachOperation*, outputStream*);Agent_OnAttach;jvmti_GenerateEvents;JvmtiCodeBlobEvents::generate_compiled_method_load_events(JvmtiEnv*);JvmtiExport::post_compiled_method_load(nmethod*);create_inline_record(nmethod*);nmethod::scope_desc_at(unsigned char*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 280
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 286
C1 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Chunk::next_chop();ThreadCritical::ThreadCritical() 295
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 302
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 306
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 307
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 308
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 309
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 309
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 309
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 310
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 311
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 312
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 313
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 317
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 326
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 336
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 344
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Chunk::next_chop();ThreadCritical::ThreadCritical() 353
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 367
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Arena::destruct_contents();ThreadCritical::ThreadCritical() 378
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 394
Attach Listener;start_thread;java_start(Thread*);JavaThread::thread_main_inner();attach_listener_thread_entry(JavaThread*, Thread*);JvmtiExport::load_agent_library(AttachOperation*, outputStream*);Agent_OnAttach;jvmti_GenerateEvents;JvmtiCodeBlobEvents::generate_compiled_method_load_events(JvmtiEnv*);JvmtiExport::post_compiled_method_load(nmethod*);create_inline_record(nmethod*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 414
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 419
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 430
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 431
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 440
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 443
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 447
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 468
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 486
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 497
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 503
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 509
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 513
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 518
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 526
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 532
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Matcher::match_tree(Node const*);Matcher::Label_Root(Node const*, State*, Node*, Node const*);Matcher::Label_Root(Node const*, State*, Node*, Node const*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 540
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 545
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 547
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 552
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);BlockListBuilder::mark_loops();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 553
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.sim.clock.DeltaQueue$Link;::fire;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 553
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 556
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 567
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 580
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 590
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 594
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 595
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 621
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 623
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 643
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 646
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 649
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 656
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 667
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 680
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 685
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 697
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 699
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 701
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 702
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 717
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 728
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 749
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 753
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 754
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::push_scope(ciMethod*, BlockBegin*);BlockListBuilder::mark_loops();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 814
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.sim.clock.DeltaQueue$Link;::fire;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 814
C2 CompilerThre;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Matcher::match();Matcher::xform(Node*, int);Matcher::match_tree(Node const*);Chunk::next_chop();ThreadCritical::ThreadCritical() 914
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1142
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1170
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1337
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1376
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1414
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1454
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1486
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow->Lavrora.sim.clock.DeltaQueue$Link;::fire;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1530
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow->Lavrora.sim.clock.DeltaQueue$Link;::fire;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1530
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1534
VM Periodic Tas;start_thread;java_start(Thread*);WatcherThread::run();WatcherThread::sleep() const;Monitor::wait(bool, long, bool);Monitor::IWait(Thread*, long);os::PlatformEvent::park(long) 1555
Attach Listener;start_thread;java_start(Thread*);JavaThread::thread_main_inner();attach_listener_thread_entry(JavaThread*, Thread*);JvmtiExport::load_agent_library(AttachOperation*, outputStream*);Agent_OnAttach;jvmti_GenerateEvents;JvmtiCodeBlobEvents::generate_compiled_method_load_events(JvmtiEnv*);JvmtiExport::post_compiled_method_load(nmethod*);ResourceMark::reset_to_mark();Chunk::next_chop();ThreadCritical::ThreadCritical() 1669
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1726
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1767
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1850
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1851
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1935
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1944
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1945
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2024
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2029
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2062
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2113
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2123
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead->Lavrora.sim.clock.DeltaQueue$Link;::fire;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2183
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead->Lavrora.sim.clock.DeltaQueue$Link;::fire;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2183
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2208
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2224
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2234
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2238
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2252
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2270
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2285
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2304
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2305
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2305
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2320
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2335
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2343
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2350
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2351
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2358
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2361
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2381
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2392
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2395
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2410
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2426
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2430
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2435
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2462
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2468
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2471
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2484
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2521
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2552
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 4706
node-24;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 4789
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 4805
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 4997
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 5227
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 5322
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 5417
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 5461
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 5520
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 5531
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 5575
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 5581
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 5585
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 5590
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 5636
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 5640
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 5703
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 5721
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 5749
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 5770
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 5780
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 5808
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6214
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6354
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 6385
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6442
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6465
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 6512
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6543
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 6561
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6619
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6628
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 6638
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6639
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6674
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6706
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6746
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 6762
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6767
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 6776
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 6782
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 6825
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 6864
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 6892
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 6899
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 6928
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 7461
node-3;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 7539
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 7621
node-4;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 7675
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 7984
node-0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8069
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8071
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8152
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8158
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8175
node-20;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8183
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8205
node-2;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8272
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8274
node-6;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8281
node-25;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8286
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8294
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8305
node-21;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8381
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8447
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8556
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8596
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8625
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8631
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8635
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8650
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8662
node-15;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8685
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8698
node-11;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8720
node-12;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8732
node-13;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8751
node-10;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8755
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8764
node-14;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8773
node-19;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8784
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8791
node-16;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8812
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8819
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 8821
node-9;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8875
node-7;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8915
node-8;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8928
node-23;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 8932
node-22;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink->Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 9460
node-22;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink->Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 9460
node-22;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 9469
node-22;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 9497
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 16210
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 16236
node-18;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 16268
node-17;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 16292
