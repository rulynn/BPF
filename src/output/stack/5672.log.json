{"name":"root","value":57,"children":[{"name":"VM Thread","value":57,"children":[{"name":"start_thread","value":57,"children":[{"name":"java_start(Thread*)","value":57,"children":[{"name":"VMThread::run()","value":53,"children":[{"name":"VMThread::loop()","value":53,"children":[{"name":"VMThread::evaluate_operation(VM_Operation*)","value":6,"children":[{"name":"VM_Operation::evaluate()","value":6,"children":[{"name":"VM_ParallelGCFailedAllocation::doit()","value":6,"children":[{"name":"ParallelScavengeHeap::failed_mem_allocate(unsigned long)","value":6,"children":[{"name":"PSScavenge::invoke()","value":6,"children":[{"name":"PSScavenge::invoke_no_policy()","value":6,"children":[{"name":"Chunk::next_chop()","value":2,"children":[{"name":"ThreadCritical::ThreadCritical()","value":2,"children":[]}]},{"name":"os::PlatformEvent::unpark()","value":2,"children":[]},{"name":"GCTaskManager::execute_and_wait(GCTaskQueue*)","value":2,"children":[{"name":"Monitor::wait(bool, long, bool)","value":2,"children":[{"name":"Monitor::IWait(Thread*, long)","value":2,"children":[{"name":"os::PlatformEvent::park()","value":2,"children":[]}]}]}]}]}]}]}]}]}]},{"name":"os::PlatformEvent::unpark()","value":2,"children":[]},{"name":"Monitor::wait(bool, long, bool)","value":27,"children":[{"name":"Monitor::IWait(Thread*, long)","value":27,"children":[{"name":"os::PlatformEvent::park(long)","value":27,"children":[]}]}]},{"name":"SafepointSynchronize::begin()","value":9,"children":[{"name":"Monitor::wait(bool, long, bool)","value":9,"children":[{"name":"Monitor::IWait(Thread*, long)","value":9,"children":[{"name":"os::PlatformEvent::park()","value":6,"children":[]},{"name":"os::PlatformEvent::unpark()","value":3,"children":[]}]}]}]},{"name":"SafepointSynchronize::end()","value":9,"children":[{"name":"os::PlatformEvent::unpark()","value":9,"children":[]}]}]}]},{"name":"JavaThread::thread_main_inner()","value":4,"children":[{"name":"thread_entry(JavaThread*, Thread*)","value":2,"children":[{"name":"JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*)","value":2,"children":[{"name":"JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*)","value":2,"children":[{"name":"JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*)","value":2,"children":[{"name":"call_stub","value":2,"children":[{"name":"Interpreter","value":2,"children":[{"name":"Interpreter","value":2,"children":[{"name":"Interpreter","value":2,"children":[{"name":"[unknown]","value":2,"children":[{"name":"Lavrora.arch.legacy.LegacyInterpreter","value":2,"children":[{"name":"::fastLoop","value":2,"children":[{"name":"Lavrora.sim.AtmelInterpreter","value":2,"children":[{"name":"::commit","value":2,"children":[{"name":"Lavrora.sim.clock.MainClock","value":2,"children":[{"name":"::advance","value":2,"children":[{"name":"Lavrora.sim.clock.DeltaQueue","value":2,"children":[{"name":"::advance","value":2,"children":[{"name":"[unknown]","value":2,"children":[{"name":"Lavrora.sim.clock.DeltaQueue$Link","value":2,"children":[{"name":"::fire","value":2,"children":[{"name":"[unknown]","value":2,"children":[{"name":"[unknown]","value":2,"children":[{"name":"[unknown]","value":2,"children":[{"name":"monitorenter_nofpu Runtime1 stub","value":2,"children":[{"name":"Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*)","value":2,"children":[{"name":"ObjectMonitor::enter(Thread*)","value":2,"children":[{"name":"ObjectMonitor::EnterI(Thread*)","value":2,"children":[{"name":"os::PlatformEvent::park(long)","value":2,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"name":"CompileBroker::compiler_thread_loop()","value":2,"children":[{"name":"CompileBroker::invoke_compiler_on_method(CompileTask*)","value":2,"children":[{"name":"C2Compiler::compile_method(ciEnv*, ciMethod*, int)","value":2,"children":[{"name":"Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)","value":2,"children":[{"name":"Compile::Code_Gen()","value":2,"children":[{"name":"PhaseBlockLayout::PhaseBlockLayout(PhaseCFG\u0026)","value":2,"children":[{"name":"Chunk::next_chop()","value":2,"children":[{"name":"ThreadCritical::ThreadCritical()","value":2,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}
