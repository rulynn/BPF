node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;[unknown];[unknown];[unknown];Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;[unknown];Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];[unknown];[unknown];[unknown];Lavrora.sim.clock.RippleSynchronizer;::waitFor;[unknown];[unknown];Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];[unknown];[unknown];[unknown];Lavrora.sim.clock.RippleSynchronizer;::waitFor;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];[unknown];[unknown];[unknown];_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];[unknown];[unknown];[unknown];[unknown];Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;[unknown];[unknown];[unknown];[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;[unknown];[unknown];[unknown];[unknown];[unknown];[unknown];Lavrora.sim.clock.RippleSynchronizer;::waitFor;[unknown];[unknown];Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;[unknown];[unknown];Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;[unknown];[unknown];resolve_virtual_call;SharedRuntime::resolve_virtual_call_C(JavaThread*);SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*);SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*);os::PlatformEvent::unpark() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;[unknown];Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];Interpreter;Interpreter;[unknown];Interpreter;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;[unknown];[unknown];[unknown];Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.radio.CC1000Radio$SerialConfigurationInterface$PCLKOutput;::write;[unknown];[unknown];[unknown];[unknown];Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];[unknown];[unknown];[unknown];Lavrora.sim.clock.RippleSynchronizer;::waitFor;[unknown];[unknown];Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ReenterI(Thread*, ObjectWaiter*);os::PlatformEvent::park() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;[unknown];[unknown];Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;[unknown];[unknown];resolve_opt_virtual_call;SharedRuntime::resolve_opt_virtual_call_C(JavaThread*);SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*);SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*);os::PlatformEvent::unpark() 1
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];[unknown];[unknown];[unknown];Lavrora.sim.clock.RippleSynchronizer;::waitFor;[unknown];[unknown];Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;[unknown];[unknown];[unknown];[unknown];[unknown];[unknown];Lavrora.sim.clock.RippleSynchronizer;::waitFor;[unknown];[unknown];Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 9
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&);IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&);PhaseIdealLoop::partial_peel(IdealLoopTree*, Node_List&);PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&, int, Node*);Node::out_grow(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 14
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;[unknown];Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 18
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];[unknown];[unknown];[unknown];Lavrora.sim.clock.RippleSynchronizer;::waitFor;[unknown];[unknown];Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ReenterI(Thread*, ObjectWaiter*);os::PlatformEvent::park() 38
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;[unknown];Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];[unknown];[unknown];[unknown];Lavrora.sim.clock.RippleSynchronizer;::waitFor;[unknown];[unknown];Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 46
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;[unknown];Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 49
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];[unknown];[unknown];[unknown];Lavrora.sim.clock.RippleSynchronizer;::waitFor;[unknown];[unknown];Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 66
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];[unknown];[unknown];[unknown];monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 71
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];[unknown];[unknown];[unknown];monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 86
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];[unknown];[unknown];[unknown];Lavrora.sim.clock.RippleSynchronizer;::waitFor;[unknown];[unknown];Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 101
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];[unknown];[unknown];[unknown];monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 144
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 278
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];[unknown];[unknown];[unknown];Lavrora.sim.clock.RippleSynchronizer;::waitFor;[unknown];[unknown];Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1263
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];[unknown];[unknown];[unknown];Lavrora.sim.clock.RippleSynchronizer;::waitFor;[unknown];[unknown];Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1818
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];[unknown];[unknown];[unknown];Lavrora.sim.clock.RippleSynchronizer;::waitFor;[unknown];[unknown];Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2210
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 4112
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];[unknown];[unknown];[unknown];Lavrora.sim.clock.RippleSynchronizer;::waitFor;[unknown];[unknown];Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 4183
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];[unknown];[unknown];[unknown];SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 34865
node-1;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;[unknown];[unknown];[unknown];[unknown];[unknown];Lavrora.sim.clock.RippleSynchronizer;::waitFor;[unknown];[unknown];Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 36059
