{"name":"root","value":80,"children":[{"name":"VM Thread","value":80,"children":[{"name":"start_thread","value":80,"children":[{"name":"java_start(Thread*)","value":80,"children":[{"name":"VMThread::run()","value":80,"children":[{"name":"VMThread::loop()","value":80,"children":[{"name":"os::PlatformEvent::unpark()","value":3,"children":[]},{"name":"SafepointSynchronize::begin()","value":12,"children":[{"name":"Monitor::wait(bool, long, bool)","value":12,"children":[{"name":"Monitor::IWait(Thread*, long)","value":12,"children":[{"name":"os::PlatformEvent::unpark()","value":4,"children":[]},{"name":"os::PlatformEvent::park()","value":8,"children":[]}]}]}]},{"name":"Monitor::wait(bool, long, bool)","value":34,"children":[{"name":"Monitor::IWait(Thread*, long)","value":34,"children":[{"name":"os::PlatformEvent::park(long)","value":34,"children":[]}]}]},{"name":"SafepointSynchronize::end()","value":15,"children":[{"name":"os::PlatformEvent::unpark()","value":15,"children":[]}]},{"name":"VMThread::evaluate_operation(VM_Operation*)","value":16,"children":[{"name":"VM_Operation::evaluate()","value":16,"children":[{"name":"VM_ParallelGCFailedAllocation::doit()","value":16,"children":[{"name":"ParallelScavengeHeap::failed_mem_allocate(unsigned long)","value":16,"children":[{"name":"PSScavenge::invoke()","value":16,"children":[{"name":"PSScavenge::invoke_no_policy()","value":16,"children":[{"name":"GCTaskManager::task_idle_workers()","value":3,"children":[{"name":"os::PlatformEvent::unpark()","value":3,"children":[]}]},{"name":"os::PlatformEvent::unpark()","value":3,"children":[]},{"name":"GCTaskManager::execute_and_wait(GCTaskQueue*)","value":4,"children":[{"name":"os::PlatformEvent::unpark()","value":1,"children":[]},{"name":"Monitor::wait(bool, long, bool)","value":3,"children":[{"name":"Monitor::IWait(Thread*, long)","value":3,"children":[{"name":"os::PlatformEvent::park()","value":3,"children":[]}]}]}]},{"name":"Threads::create_thread_roots_tasks(GCTaskQueue*)","value":3,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":3,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":3,"children":[{"name":"ThreadCritical::ThreadCritical()","value":3,"children":[]}]}]}]},{"name":"Chunk::next_chop()","value":3,"children":[{"name":"ThreadCritical::ThreadCritical()","value":3,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}
