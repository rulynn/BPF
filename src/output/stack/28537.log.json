{"name":"root","value":156,"children":[{"name":"Finalizer","value":156,"children":[{"name":"start_thread","value":156,"children":[{"name":"java_start(Thread*)","value":120,"children":[{"name":"VMThread::run()","value":1,"children":[{"name":"VMThread::loop()","value":1,"children":[{"name":"VMThread::evaluate_operation(VM_Operation*)","value":1,"children":[{"name":"VM_Operation::evaluate()","value":1,"children":[{"name":"VM_BulkRevokeBias::doit()","value":1,"children":[{"name":"bulk_revoke_or_rebias_at_safepoint(oopDesc*, bool, bool, JavaThread*)","value":1,"children":[{"name":"get_or_compute_monitor_info(JavaThread*) [clone .part.164]","value":1,"children":[{"name":"vframe::java_sender() const","value":1,"children":[{"name":"vframe::sender() const","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]}]}]}]}]},{"name":"JavaThread::thread_main_inner()","value":119,"children":[{"name":"CompileBroker::compiler_thread_loop()","value":107,"children":[{"name":"CompileBroker::invoke_compiler_on_method(CompileTask*)","value":107,"children":[{"name":"C2Compiler::compile_method(ciEnv*, ciMethod*, int)","value":66,"children":[{"name":"Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)","value":66,"children":[{"name":"ParseGenerator::generate(JVMState*)","value":53,"children":[{"name":"Parse::Parse(JVMState*, ciMethod*, float)","value":53,"children":[{"name":"Parse::do_all_blocks()","value":53,"children":[{"name":"GraphKit::add_predicate(int)","value":11,"children":[{"name":"GraphKit::add_predicate_impl(Deoptimization::DeoptReason, int)","value":11,"children":[{"name":"PhaseGVN::transform_no_reclaim(Node*)","value":11,"children":[{"name":"Type_Array::grow(unsigned int)","value":11,"children":[{"name":"Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum)","value":11,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":11,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":11,"children":[{"name":"ThreadCritical::ThreadCritical()","value":11,"children":[]}]}]}]}]}]}]}]},{"name":"Parse::do_one_block()","value":42,"children":[{"name":"Parse::do_one_bytecode()","value":11,"children":[{"name":"Parse::array_addressing(BasicType, int, Type const**)","value":1,"children":[{"name":"GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool)","value":1,"children":[{"name":"GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*)","value":1,"children":[{"name":"GraphKit::add_safepoint_edges(SafePointNode*, bool)","value":1,"children":[{"name":"Node::out_grow(unsigned int)","value":1,"children":[{"name":"Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]}]},{"name":"Parse::array_store_check()","value":1,"children":[{"name":"PhaseGVN::transform_no_reclaim(Node*)","value":1,"children":[{"name":"Type::hashcons()","value":1,"children":[{"name":"Dict::Insert(void*, void*, bool)","value":1,"children":[{"name":"Dict::doubhash()","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]},{"name":"Parse::jump_switch_ranges(Node*, SwitchRange*, SwitchRange*, int)","value":1,"children":[{"name":"Parse::jump_switch_ranges(Node*, SwitchRange*, SwitchRange*, int)","value":1,"children":[{"name":"Parse::jump_switch_ranges(Node*, SwitchRange*, SwitchRange*, int)","value":1,"children":[{"name":"PreserveJVMState::PreserveJVMState(GraphKit*, bool)","value":1,"children":[{"name":"GraphKit::clone_map()","value":1,"children":[{"name":"Node::clone() const","value":1,"children":[{"name":"Node::out_grow(unsigned int)","value":1,"children":[{"name":"Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]}]}]}]},{"name":"Parse::do_ifnull(BoolTest::mask, Node*)","value":1,"children":[{"name":"GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool)","value":1,"children":[{"name":"GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*)","value":1,"children":[{"name":"Node::out_grow(unsigned int)","value":1,"children":[{"name":"Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]},{"name":"Parse::array_load(BasicType)","value":5,"children":[{"name":"GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool)","value":5,"children":[{"name":"GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*)","value":5,"children":[{"name":"GraphKit::set_predefined_output_for_runtime_call(Node*, Node*, TypePtr const*)","value":5,"children":[{"name":"GraphKit::set_all_memory(Node*)","value":5,"children":[{"name":"MergeMemNode::make(Compile*, Node*)","value":5,"children":[{"name":"MergeMemNode::MergeMemNode(Node*)","value":5,"children":[{"name":"MergeMemNode::iteration_setup(MergeMemNode const*)","value":5,"children":[{"name":"Node::add_req(Node*)","value":5,"children":[{"name":"Node::grow(unsigned int)","value":5,"children":[{"name":"Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum)","value":5,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":5,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":5,"children":[{"name":"ThreadCritical::ThreadCritical()","value":5,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"name":"Parse::do_field_access(bool, bool)","value":2,"children":[{"name":"GraphKit::null_check_common(Node*, BasicType, bool, Node**) [clone .part.293]","value":1,"children":[{"name":"BuildCutout::BuildCutout(GraphKit*, Node*, float, float)","value":1,"children":[{"name":"Node::Node(Node*)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]},{"name":"Parse::do_put_xxx(Node*, ciField*, bool)","value":1,"children":[{"name":"PhaseGVN::transform_no_reclaim(Node*)","value":1,"children":[{"name":"AddPNode::Identity(PhaseTransform*)","value":1,"children":[{"name":"Type::hashcons()","value":1,"children":[{"name":"Dict::Insert(void*, void*, bool)","value":1,"children":[{"name":"Dict::doubhash()","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]}]}]}]},{"name":"Parse::do_exceptions()","value":31,"children":[{"name":"Parse::throw_to_exit(SafePointNode*)","value":31,"children":[{"name":"GraphKit::set_map_clone(SafePointNode*)","value":31,"children":[{"name":"GraphKit::clone_map()","value":31,"children":[{"name":"MergeMemNode::make(Compile*, Node*)","value":31,"children":[{"name":"MergeMemNode::MergeMemNode(Node*)","value":31,"children":[{"name":"Node::Node(unsigned int)","value":31,"children":[{"name":"Compile::grow_node_notes(GrowableArray\u003cNode_Notes*\u003e*, int)","value":31,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":31,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":31,"children":[{"name":"ThreadCritical::ThreadCritical()","value":31,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"name":"Compile::Code_Gen()","value":13,"children":[{"name":"PhaseChaitin::Register_Allocate()","value":7,"children":[{"name":"PhaseAggressiveCoalesce::insert_copies(Matcher\u0026)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]},{"name":"PhaseChaitin::Split(unsigned int, ResourceArea*)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]},{"name":"Chunk::next_chop()","value":5,"children":[{"name":"ThreadCritical::ThreadCritical()","value":5,"children":[]}]}]},{"name":"Compile::Output()","value":6,"children":[{"name":"Compile::BuildOopMaps()","value":6,"children":[{"name":"OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*)","value":2,"children":[{"name":"OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*)","value":2,"children":[{"name":"OopMap::OopMap(int, int)","value":2,"children":[{"name":"CompressedWriteStream::CompressedWriteStream(int)","value":2,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":2,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":2,"children":[{"name":"ThreadCritical::ThreadCritical()","value":2,"children":[]}]}]}]}]}]}]},{"name":"OopFlow::make(Arena*, int, Compile*)","value":4,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":4,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":4,"children":[{"name":"ThreadCritical::ThreadCritical()","value":4,"children":[]}]}]}]}]}]}]}]}]},{"name":"Compiler::compile_method(ciEnv*, ciMethod*, int)","value":41,"children":[{"name":"Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*)","value":41,"children":[{"name":"Compilation::compile_method()","value":41,"children":[{"name":"Compilation::compile_java_method()","value":41,"children":[{"name":"Compilation::build_hir()","value":40,"children":[{"name":"IR::IR(Compilation*, ciMethod*, int)","value":40,"children":[{"name":"IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool)","value":40,"children":[{"name":"GraphBuilder::GraphBuilder(Compilation*, IRScope*)","value":40,"children":[{"name":"GraphBuilder::iterate_all_blocks(bool)","value":26,"children":[{"name":"GraphBuilder::iterate_bytecodes_for_block(int)","value":26,"children":[{"name":"GraphBuilder::invoke(Bytecodes::Code)","value":26,"children":[{"name":"GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*)","value":26,"children":[{"name":"GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*)","value":26,"children":[{"name":"GraphBuilder::push_scope(ciMethod*, BlockBegin*)","value":1,"children":[{"name":"BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int)","value":1,"children":[{"name":"BlockListBuilder::set_leaders()","value":1,"children":[{"name":"ciMethod::bci_block_start()","value":1,"children":[{"name":"MethodLiveness::compute_liveness()","value":1,"children":[{"name":"MethodLiveness::init_basic_blocks()","value":1,"children":[{"name":"MethodLiveness::BasicBlock::BasicBlock(MethodLiveness*, int, int)","value":1,"children":[{"name":"GenericGrowableArray::raw_allocate(int)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]}]}]}]},{"name":"GraphBuilder::iterate_all_blocks(bool)","value":24,"children":[{"name":"GraphBuilder::iterate_bytecodes_for_block(int)","value":24,"children":[{"name":"GraphBuilder::access_field(Bytecodes::Code)","value":1,"children":[{"name":"ciBytecodeStream::get_field(bool\u0026)","value":1,"children":[{"name":"ciEnv::get_field_by_index(ciInstanceKlass*, int)","value":1,"children":[{"name":"ciEnv::get_field_by_index_impl(ciInstanceKlass*, int)","value":1,"children":[{"name":"ciField::ciField(ciInstanceKlass*, int)","value":1,"children":[{"name":"ciEnv::get_klass_by_index(constantPoolHandle, int, bool\u0026, ciInstanceKlass*)","value":1,"children":[{"name":"ciEnv::get_klass_by_index_impl(constantPoolHandle, int, bool\u0026, ciInstanceKlass*)","value":1,"children":[{"name":"ciObjectFactory::get_symbol(Symbol*)","value":1,"children":[{"name":"GenericGrowableArray::raw_allocate(int)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]}]}]}]}]},{"name":"GraphBuilder::append_with_bci(Instruction*, int)","value":1,"children":[{"name":"ValueStack::copy(ValueStack::Kind, int)","value":1,"children":[{"name":"ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]},{"name":"GraphBuilder::method_return(Instruction*)","value":1,"children":[{"name":"Goto::Goto(BlockBegin*, bool)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]},{"name":"GraphBuilder::invoke(Bytecodes::Code)","value":21,"children":[{"name":"GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*)","value":21,"children":[{"name":"GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*)","value":21,"children":[{"name":"GraphBuilder::iterate_all_blocks(bool)","value":21,"children":[{"name":"GraphBuilder::iterate_bytecodes_for_block(int)","value":21,"children":[{"name":"GraphBuilder::invoke(Bytecodes::Code)","value":21,"children":[{"name":"GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*)","value":21,"children":[{"name":"GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*)","value":21,"children":[{"name":"GraphBuilder::iterate_all_blocks(bool)","value":11,"children":[{"name":"GraphBuilder::iterate_bytecodes_for_block(int)","value":11,"children":[{"name":"GraphBuilder::invoke(Bytecodes::Code)","value":1,"children":[{"name":"GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*)","value":1,"children":[{"name":"GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*)","value":1,"children":[{"name":"GraphBuilder::push_scope(ciMethod*, BlockBegin*)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]},{"name":"GraphBuilder::method_return(Instruction*)","value":10,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":10,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":10,"children":[{"name":"ThreadCritical::ThreadCritical()","value":10,"children":[]}]}]}]}]}]},{"name":"GraphBuilder::push_scope(ciMethod*, BlockBegin*)","value":10,"children":[{"name":"BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int)","value":10,"children":[{"name":"BlockListBuilder::set_leaders()","value":10,"children":[{"name":"ciMethod::bci_block_start()","value":10,"children":[{"name":"MethodLiveness::compute_liveness()","value":10,"children":[{"name":"MethodLiveness::init_basic_blocks()","value":10,"children":[{"name":"MethodLiveness::BasicBlock::BasicBlock(MethodLiveness*, int, int)","value":10,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":10,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":10,"children":[{"name":"ThreadCritical::ThreadCritical()","value":10,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"name":"GraphBuilder::args_list_for_profiling(ciMethod*, int\u0026, bool)","value":1,"children":[{"name":"ciMethodData::bci_to_data(int, ciMethod*)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]}]}]},{"name":"GraphBuilder::setup_start_block(int, BlockBegin*, BlockBegin*, ValueStack*)","value":14,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":14,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":14,"children":[{"name":"ThreadCritical::ThreadCritical()","value":14,"children":[]}]}]}]}]}]}]}]},{"name":"Compilation::emit_lir()","value":1,"children":[{"name":"LinearScan::do_linear_scan()","value":1,"children":[{"name":"LinearScan::allocate_registers()","value":1,"children":[{"name":"IntervalWalker::walk_to(int)","value":1,"children":[{"name":"LinearScanWalker::activate_current()","value":1,"children":[{"name":"LinearScanWalker::alloc_free_reg(Interval*)","value":1,"children":[{"name":"LinearScanWalker::split_before_usage(Interval*, int, int)","value":1,"children":[{"name":"Interval::split(int)","value":1,"children":[{"name":"Interval::new_split_child()","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"name":"thread_entry(JavaThread*, Thread*)","value":12,"children":[{"name":"JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*)","value":12,"children":[{"name":"JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*)","value":12,"children":[{"name":"JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*)","value":12,"children":[{"name":"call_stub","value":12,"children":[{"name":"Interpreter","value":12,"children":[{"name":"Interpreter","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"UncommonTrapBlob","value":1,"children":[{"name":"Deoptimization::unpack_frames(JavaThread*, int)","value":1,"children":[{"name":"Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*)","value":1,"children":[{"name":"Chunk::next_chop()","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"name":"[unknown]","value":11,"children":[{"name":"[unknown]","value":11,"children":[{"name":"Ljava.io.FileOutputStream","value":11,"children":[{"name":"::finalize","value":11,"children":[{"name":"Lorg.eclipse.jdt.internal.compiler.parser.JavadocParser","value":11,"children":[{"name":"::pushSeeRef","value":11,"children":[{"name":"monitorenter_nofpu Runtime1 stub","value":11,"children":[{"name":"Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*)","value":11,"children":[{"name":"ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*)","value":11,"children":[{"name":"BiasedLocking::revoke_and_rebias(Handle, bool, Thread*)","value":11,"children":[{"name":"VMThread::execute(VM_Operation*)","value":11,"children":[{"name":"Monitor::wait(bool, long, bool)","value":11,"children":[{"name":"Monitor::IWait(Thread*, long)","value":11,"children":[{"name":"os::PlatformEvent::park()","value":11,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"name":"JavaMain","value":36,"children":[{"name":"jni_CallStaticVoidMethod","value":36,"children":[{"name":"jni_invoke_static(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .isra.197]","value":36,"children":[{"name":"JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*)","value":36,"children":[{"name":"call_stub","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"JVM_InvokeMethod","value":36,"children":[{"name":"Reflection::invoke_method(oopDesc*, Handle, objArrayHandle, Thread*)","value":36,"children":[{"name":"Reflection::invoke(instanceKlassHandle, methodHandle, Handle, bool, objArrayHandle, BasicType, objArrayHandle, bool, Thread*)","value":36,"children":[{"name":"JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*)","value":36,"children":[{"name":"call_stub","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"JVM_InvokeMethod","value":36,"children":[{"name":"Reflection::invoke_method(oopDesc*, Handle, objArrayHandle, Thread*)","value":36,"children":[{"name":"Reflection::invoke(instanceKlassHandle, methodHandle, Handle, bool, objArrayHandle, BasicType, objArrayHandle, bool, Thread*)","value":36,"children":[{"name":"JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*)","value":36,"children":[{"name":"call_stub","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":36,"children":[{"name":"Interpreter","value":34,"children":[{"name":"Interpreter","value":34,"children":[{"name":"[unknown]","value":2,"children":[{"name":"[unknown]","value":2,"children":[{"name":"Ljava.lang.Integer","value":1,"children":[{"name":"::parseInt","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"Ljava.lang.System","value":1,"children":[{"name":"::getProperty-\u003eLjava.lang.System","value":1,"children":[{"name":"::checkKey","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*)","value":1,"children":[{"name":"InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*)","value":1,"children":[{"name":"SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*)","value":1,"children":[{"name":"AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*)","value":1,"children":[{"name":"SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149]","value":1,"children":[{"name":"AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*)","value":1,"children":[{"name":"CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*)","value":1,"children":[{"name":"CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*)","value":1,"children":[{"name":"os::PlatformEvent::unpark()","value":1,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"Ljava.util.AbstractCollection","value":1,"children":[{"name":"::toArray-\u003eLjava.lang.reflect.Array","value":1,"children":[{"name":"::newInstance","value":1,"children":[{"name":"Lorg.eclipse.jdt.internal.compiler.parser.AbstractCommentParser","value":1,"children":[{"name":"::commentParse","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"Lsun.nio.cs.StreamDecoder","value":1,"children":[{"name":"::\u003cinit\u003e","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"Lorg.eclipse.jdt.internal.compiler.parser.Parser","value":1,"children":[{"name":"::consumeLocalVariableDeclaration","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"UncommonTrapBlob","value":1,"children":[{"name":"Deoptimization::uncommon_trap(JavaThread*, int)","value":1,"children":[{"name":"Deoptimization::uncommon_trap_inner(JavaThread*, int)","value":1,"children":[{"name":"Deoptimization::revoke_biases_of_monitors(JavaThread*, frame, RegisterMap*)","value":1,"children":[{"name":"vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"name":"Interpreter","value":32,"children":[{"name":"Interpreter","value":32,"children":[{"name":"Interpreter","value":32,"children":[{"name":"[unknown]","value":32,"children":[{"name":"[unknown]","value":32,"children":[{"name":"[unknown]","value":32,"children":[{"name":"[unknown]","value":32,"children":[{"name":"[unknown]","value":32,"children":[{"name":"[unknown]","value":32,"children":[{"name":"[unknown]","value":32,"children":[{"name":"[unknown]","value":32,"children":[{"name":"UncommonTrapBlob","value":32,"children":[{"name":"Deoptimization::uncommon_trap(JavaThread*, int)","value":32,"children":[{"name":"Deoptimization::uncommon_trap_inner(JavaThread*, int)","value":32,"children":[{"name":"Chunk::next_chop()","value":32,"children":[{"name":"ThreadCritical::ThreadCritical()","value":32,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"name":"Lorg.eclipse.core.runtime.SafeRunner","value":2,"children":[{"name":"::run","value":2,"children":[{"name":"Interpreter","value":2,"children":[{"name":"Interpreter","value":2,"children":[{"name":"Interpreter","value":2,"children":[{"name":"Lorg.eclipse.core.runtime.SafeRunner","value":2,"children":[{"name":"::run","value":2,"children":[{"name":"Interpreter","value":2,"children":[{"name":"Interpreter","value":2,"children":[{"name":"Interpreter","value":2,"children":[{"name":"InterpreterRuntime::_new(JavaThread*, ConstantPool*, int)","value":2,"children":[{"name":"InstanceKlass::initialize(Thread*)","value":2,"children":[{"name":"InstanceKlass::initialize_impl(instanceKlassHandle, Thread*)","value":2,"children":[{"name":"InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*)","value":2,"children":[{"name":"Verifier::verify(instanceKlassHandle, Verifier::Mode, bool, Thread*)","value":2,"children":[{"name":"Chunk::next_chop()","value":2,"children":[{"name":"ThreadCritical::ThreadCritical()","value":2,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}
