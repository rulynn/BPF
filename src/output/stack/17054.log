OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;[unknown];[unknown];Lorg.h2.command.Command;::executeUpdate;Lorg.h2.command.CommandContainer;::update;[unknown];Lorg.h2.engine.Session;::commit;Ljava.util.ArrayList;::add;Ljava.util.ArrayList;::ensureCapacityInternal;Ljava.util.ArrayList;::ensureExplicitCapacity;[unknown];[unknown];Ljava.util.Arrays;::copyOf;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);Method::load_signature_classes(methodHandle, Thread*);SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*);SystemDictionary::load_instance_class(Symbol*, Handle, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Handle, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Ljava.lang.ClassLoader;::loadClass;[unknown];Interpreter;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lorg.h2.value.ValueTimestamp;::convertScale->Ljava.lang.StringBuilder;::toString;[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.ValueShort;::get->Lorg.h2.value.ValueShort;::<init>;[unknown];Lorg.h2.value.ValueTimestamp;::equals->Ljava.sql.Timestamp;::equals->Ljava.util.Date;::equals->Ljava.sql.Timestamp;::getTime->Ljava.util.Date;::getTime;Lorg.h2.table.TableData;::addRowsToIndex;Lorg.h2.util.ObjectArray;::sort;Lorg.h2.index.IndexCursor;::next;[unknown];Ljava.lang.StringCoding;::deref;Lorg.h2.index.MultiVersionCursor;::step;Lorg.h2.index.TreeCursor;::next;Ljava.lang.Integer;::getChars;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];[unknown];Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];Lorg.h2.expression.Function;::optimize;[unknown];[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong;[unknown];Lorg.h2.value.Value;::convertTo;[unknown];Lorg.h2.table.TableData;::addIndex->Ljava.lang.StringBuilder;::append;[unknown];Lorg.h2.value.Value;::convertTo->Ljava.lang.StringBuilder;::toString;Ljava.math.BigDecimal;::<init>;Lorg.h2.value.Value;::convertTo;Ljava.lang.StringBuilder;::<init>;Ljava.lang.AbstractStringBuilder;::<init>;_new_array_Java;OptoRuntime::new_array_C(Klass*, int, JavaThread*);SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];[unknown];[unknown];Lorg.h2.jdbc.JdbcConnection;::prepareCommand;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::access_field(Bytecodes::Code);ciBytecodeStream::get_field(bool&);ciEnv::get_field_by_index(ciInstanceKlass*, int);ciEnv::get_field_by_index_impl(ciInstanceKlass*, int);ciField::ciField(ciInstanceKlass*, int);ciObjectFactory::get_symbol(Symbol*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];Lorg.h2.value.Value;::convertTo->Ljava.lang.StringBuilder;::toString;Lorg.h2.expression.Function;::getSimpleValue->Lorg.h2.engine.Session;::getRandom->Ljava.util.Random;::<init>;Lorg.h2.value.ValueTimestamp;::convertScale->Ljava.lang.StringBuilder;::toString;[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.ValueShort;::get->Lorg.h2.value.ValueShort;::<init>;[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lorg.h2.value.ValueTimestamp;::convertScale->Ljava.lang.StringBuilder;::toString;[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.ValueShort;::get->Lorg.h2.value.ValueShort;::<init>;[unknown];Lorg.h2.value.ValueTimestamp;::equals->Ljava.sql.Timestamp;::equals->Ljava.util.Date;::equals->Ljava.sql.Timestamp;::getTime->Ljava.util.Date;::getTime;Lorg.h2.table.TableData;::addRowsToIndex;Lorg.h2.expression.Expression;::getBooleanValue;[unknown];Lorg.h2.expression.Comparison;::getValue;Lorg.h2.expression.Comparison;::compareNotNull;[unknown];Lorg.h2.value.Value;::compareTo;Lorg.h2.value.ValueString;::compareSecure;Lorg.h2.value.CompareMode;::compareString;[unknown];SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);Invoke::declared_type() const;ciMethod::get_method_at_bci(int, bool&, ciSignature**);ciBytecodeStream::get_method(bool&, ciSignature**);ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*);ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*);ciEnv::get_klass_by_index_impl(constantPoolHandle, int, bool&, ciInstanceKlass*);ciObjectFactory::get_symbol(Symbol*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lorg.h2.value.Value;::convertTo;[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::build_loop_early(VectorSet&, Node_List&, Node_Stack&);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;Lorg.h2.value.Value;::convertTo;Lorg.h2.value.ValueTimestamp;::convertScale->Ljava.lang.StringBuilder;::toString;[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.ValueShort;::get->Lorg.h2.value.ValueShort;::<init>;[unknown];Lorg.h2.value.ValueTimestamp;::equals->Ljava.sql.Timestamp;::equals->Ljava.util.Date;::equals->Ljava.sql.Timestamp;::getTime->Ljava.util.Date;::getTime;Lorg.h2.table.TableData;::addRowsToIndex;[unknown];Lorg.h2.expression.Function;::getValue;[unknown];[unknown];Ljava.util.HashMap;::get;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;[unknown];[unknown];Lorg.h2.value.Value;::convertTo;[unknown];Lorg.h2.table.TableData;::addIndex->Ljava.lang.StringBuilder;::append;[unknown];[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;[unknown];Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.message.Message;::throwInternalError->Lorg.h2.message.TraceSystem;::traceThrowable->Ljava.lang.Throwable;::printStackTrace;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();JavaThread::~JavaThread();Thread::~Thread();Arena::~Arena();Arena::destruct_contents();ThreadCritical::ThreadCritical() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lorg.h2.value.Value;::convertTo;[unknown];Lorg.apache.derbyTesting.system.oe.util.OERandom;::randomDecimalString->Ljava.lang.StringBuffer;::append;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lorg.h2.value.ValueTimestamp;::convertScale->Ljava.lang.StringBuilder;::toString;[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.ValueShort;::get->Lorg.h2.value.ValueShort;::<init>;[unknown];Lorg.h2.value.ValueTimestamp;::equals->Ljava.sql.Timestamp;::equals->Ljava.util.Date;::equals->Ljava.sql.Timestamp;::getTime->Ljava.util.Date;::getTime;Lorg.h2.value.Value;::convertTo;Lorg.h2.value.Value;::convertTo;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;JavaMain;jni_CallStaticVoidMethod;jni_invoke_static(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .isra.197];JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;JVM_InvokeMethod;Reflection::invoke_method(oopDesc*, Handle, objArrayHandle, Thread*);Reflection::invoke(instanceKlassHandle, methodHandle, Handle, bool, objArrayHandle, BasicType, objArrayHandle, bool, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;JVM_InvokeMethod;Reflection::invoke_method(oopDesc*, Handle, objArrayHandle, Thread*);Reflection::invoke(instanceKlassHandle, methodHandle, Handle, bool, objArrayHandle, BasicType, objArrayHandle, bool, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];[unknown];_new_array_Java;OptoRuntime::new_array_C(Klass*, int, JavaThread*);TypeArrayKlass::allocate_common(int, bool, Thread*);GenCollectorPolicy::mem_allocate_work(unsigned long, bool, bool*);VMThread::execute(VM_Operation*);Monitor::wait(bool, long, bool);Monitor::IWait(Thread*, long);os::PlatformEvent::park() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Ljava.lang.ref.Reference;::tryHandlePending;Ljava.lang.ref.ReferenceQueue;::enqueue;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.table.TableData;::addIndex->Lorg.h2.message.Message;::throwInternalError;Lorg.h2.value.ValueTimestamp;::convertScale->Ljava.lang.StringBuilder;::toString;[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.ValueShort;::get->Lorg.h2.value.ValueShort;::<init>;[unknown];Lorg.h2.value.ValueTimestamp;::equals->Ljava.sql.Timestamp;::equals->Ljava.util.Date;::equals->Ljava.sql.Timestamp;::getTime->Ljava.util.Date;::getTime;Lorg.h2.table.TableData;::addRowsToIndex;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];[unknown];Lorg.h2.jdbc.JdbcPreparedStatement;::executeUpdate;Lorg.h2.jdbc.JdbcPreparedStatement;::executeUpdateInternal;Lorg.h2.command.Command;::executeUpdate;Lorg.h2.command.CommandContainer;::update;Lorg.h2.engine.Session;::getLogId->Lorg.h2.log.UndoLog;::size->Lorg.h2.message.Message;::throwInternalError->Lorg.h2.message.Message;::throwInternalError->Lorg.h2.message.TraceSystem;::traceThrowable->Ljava.lang.Throwable;::printStackTrace;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;Lorg.h2.engine.Database;::isReconnectNeeded;[unknown];[unknown];Lorg.h2.value.Value;::convertTo;Lorg.h2.table.TableData;::addIndex->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;Lorg.h2.value.ValueTimestamp;::convertScale->Ljava.sql.Timestamp;::setNanos;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;[unknown];[unknown];Lorg.h2.value.Value;::convertTo;[unknown];Ljava.lang.String;::equalsIgnoreCase;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];Lorg.h2.expression.Function;::optimize;[unknown];[unknown];[unknown];[unknown];Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];Lorg.h2.value.Value;::convertTo;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_back_branch_event(methodHandle, methodHandle, int, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];Lorg.h2.value.Value;::convertTo->Ljava.lang.StringBuilder;::toString;Lorg.h2.expression.Function;::getSimpleValue;Lorg.h2.jdbc.JdbcPreparedStatement;::executeUpdate;Lorg.h2.jdbc.JdbcPreparedStatement;::executeUpdateInternal;Lorg.h2.command.Command;::executeUpdate;Lorg.h2.command.CommandContainer;::update;Lorg.h2.command.dml.Insert;::update;Lorg.h2.command.dml.Insert;::insertRows;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;Lorg.h2.expression.Function;::getValue;[unknown];Lorg.h2.expression.Function;::getSimpleValue;Lorg.apache.derbyTesting.system.oe.util.OERandom;::randomDecimalString->Ljava.lang.StringBuffer;::append;Ljava.math.BigInteger;::toString;Ljava.math.BigInteger;::smallToString;Ljava.math.MutableBigInteger;::toBigInteger;_new_instance_Java;OptoRuntime::new_instance_C(Klass*, JavaThread*);InstanceKlass::allocate_instance(Thread*);GenCollectorPolicy::mem_allocate_work(unsigned long, bool, bool*);VMThread::execute(VM_Operation*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];[unknown];Lorg.h2.command.Command;::executeUpdate;Lorg.h2.command.CommandContainer;::update;[unknown];[unknown];[unknown];Lorg.h2.expression.Function;::getSimpleValue;[unknown];Lorg.h2.index.ViewCursor;::next;Ljava.lang.Character;::isLetterOrDigit;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];Lorg.h2.value.Value;::convertTo->Ljava.lang.StringBuilder;::toString;Lorg.h2.expression.Function;::getSimpleValue;Lorg.h2.value.ValueTimestamp;::convertScale->Ljava.lang.StringBuilder;::toString;[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.ValueShort;::get->Lorg.h2.value.ValueShort;::<init>;[unknown];Lorg.h2.value.ValueTimestamp;::equals->Ljava.sql.Timestamp;::equals->Ljava.util.Date;::equals->Ljava.sql.Timestamp;::getTime->Ljava.util.Date;::getTime;Ljava.math.BigInteger;::smallToString;[unknown];Lorg.h2.table.TableData;::addIndex;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];Lorg.h2.expression.Function;::optimize;[unknown];[unknown];[unknown];[unknown];Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lorg.h2.expression.Comparison;::getValue->Lorg.h2.message.Message;::throwInternalError->Lorg.h2.message.TraceSystem;::traceThrowable->Ljava.lang.Throwable;::printStackTrace;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);ciMethod::ensure_method_data();ciMethod::ensure_method_data(methodHandle);ciMethodData::load_data();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;[unknown];[unknown];Lorg.h2.value.Value;::convertTo;[unknown];Lorg.h2.table.TableData;::addIndex->Ljava.lang.StringBuilder;::append;[unknown];[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong;Lorg.h2.value.Value;::convertTo->Ljava.lang.StringBuilder;::toString;[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];[unknown];Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.table.TableData;::addIndex->Lorg.h2.message.Message;::throwInternalError;Lorg.h2.value.ValueTimestamp;::convertScale->Ljava.lang.StringBuilder;::toString;[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.ValueShort;::get->Lorg.h2.value.ValueShort;::<init>;[unknown];Lorg.h2.value.ValueTimestamp;::equals->Ljava.sql.Timestamp;::equals->Ljava.util.Date;::equals->Ljava.sql.Timestamp;::getTime->Ljava.util.Date;::getTime;Lorg.h2.table.TableData;::addRowsToIndex;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];[unknown];Lorg.h2.table.TableData;::addIndex;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::Dominators();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];Lorg.h2.value.Value;::convertTo->Ljava.lang.StringBuilder;::toString;Lorg.h2.expression.Function;::getSimpleValue;Lorg.h2.value.ValueTimestamp;::convertScale->Ljava.lang.StringBuilder;::toString;[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.ValueShort;::get->Lorg.h2.value.ValueShort;::<init>;[unknown];Lorg.h2.value.ValueTimestamp;::equals->Ljava.sql.Timestamp;::equals->Ljava.util.Date;::equals->Ljava.sql.Timestamp;::getTime->Ljava.util.Date;::getTime;Ljava.math.BigInteger;::smallToString->Ljava.math.BigInteger;::abs;[unknown];Lorg.h2.table.TableData;::doLock;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];[unknown];Ljava.math.BigDecimal;::<init>->Ljava.math.BigDecimal;::checkScaleNonZero;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];[unknown];Lorg.h2.jdbc.JdbcPreparedStatement;::executeUpdate;Lorg.h2.jdbc.JdbcPreparedStatement;::executeUpdateInternal;Lorg.h2.command.Command;::executeUpdate;Lorg.h2.command.CommandContainer;::update;Lorg.h2.engine.Session;::getLogId;Lorg.h2.table.Table;::validateConvertUpdateSequence;Lorg.h2.table.Column;::validateConvertUpdateSequence;Lorg.h2.value.ValueDecimal;::convertScale;Lorg.h2.util.MathUtils;::setScale;[unknown];[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_new();GraphKit::new_instance(Node*, Node*, Node**, bool);GraphKit::set_output_for_allocation(AllocateNode*, TypeOopPtr const*, bool);Compile::alias_type(ciField*);TypeInstPtr::add_offset(long) const;Type::hashcons();Dict::Insert(void*, void*, bool);Dict::doubhash();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseAggressiveCoalesce::insert_copies(Matcher&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lorg.h2.value.ValueTimestamp;::convertScale->Ljava.lang.StringBuilder;::toString;[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.ValueShort;::get->Lorg.h2.value.ValueShort;::<init>;[unknown];Lorg.h2.value.ValueTimestamp;::equals->Ljava.sql.Timestamp;::equals->Ljava.util.Date;::equals->Ljava.sql.Timestamp;::getTime->Ljava.util.Date;::getTime;Lorg.h2.table.TableData;::addRowsToIndex;Lorg.h2.expression.Expression;::getBooleanValue;[unknown];Lorg.h2.expression.Comparison;::getValue;Lorg.h2.expression.Comparison;::compareNotNull;[unknown];Lorg.h2.value.Value;::compareTo;Lorg.h2.value.ValueString;::compareSecure;Lorg.h2.value.CompareMode;::compareString;[unknown];SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
OE_Thread:0;start_thread;JavaMain;jni_CallStaticVoidMethod;jni_invoke_static(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .isra.197];JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;JVM_InvokeMethod;Reflection::invoke_method(oopDesc*, Handle, objArrayHandle, Thread*);Reflection::invoke(instanceKlassHandle, methodHandle, Handle, bool, objArrayHandle, BasicType, objArrayHandle, bool, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;JVM_InvokeMethod;Reflection::invoke_method(oopDesc*, Handle, objArrayHandle, Thread*);Reflection::invoke(instanceKlassHandle, methodHandle, Handle, bool, objArrayHandle, BasicType, objArrayHandle, bool, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Ljava.util.HashMap$Node;::<init>;Interpreter;Interpreter;Interpreter;Lorg.h2.command.Parser;::parse;Lorg.h2.command.Parser;::parse;Lorg.h2.command.Parser;::parsePrepared;Interpreter;InterpreterRuntime::_new(JavaThread*, ConstantPool*, int);InstanceKlass::initialize(Thread*);InstanceKlass::initialize_impl(instanceKlassHandle, Thread*);InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*);InstanceKlass::rewrite_class(Thread*);Rewriter::rewrite(instanceKlassHandle, Thread*);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;[unknown];Lorg.h2.value.ValueTimestamp;::convertScale->Ljava.lang.StringBuilder;::toString;[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.ValueShort;::get->Lorg.h2.value.ValueShort;::<init>;[unknown];Lorg.h2.value.ValueTimestamp;::equals->Ljava.sql.Timestamp;::equals->Ljava.util.Date;::equals->Ljava.sql.Timestamp;::getTime->Ljava.util.Date;::getTime;Lorg.h2.table.TableData;::addRowsToIndex;[unknown];Lorg.h2.expression.Function;::getValue;[unknown];Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;[unknown];[unknown];[unknown];[unknown];Ljava.lang.String;::trim;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];Lorg.h2.expression.Function;::optimize;[unknown];[unknown];Lorg.h2.value.ValueTimestamp;::convertScale->Ljava.lang.StringBuilder;::toString;[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.ValueShort;::get->Lorg.h2.value.ValueShort;::<init>;[unknown];Lorg.h2.value.ValueTimestamp;::equals->Ljava.sql.Timestamp;::equals->Ljava.util.Date;::equals->Ljava.sql.Timestamp;::getTime->Ljava.util.Date;::getTime;Ljava.math.BigInteger;::smallToString->Ljava.math.BigInteger;::abs;[unknown];[unknown];Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong;[unknown];Lorg.h2.value.Value;::convertTo;[unknown];Lorg.h2.table.TableData;::addIndex->Ljava.lang.StringBuilder;::append;[unknown];Lorg.h2.value.Value;::convertTo;Lorg.h2.value.Value;::compareTypeSave;Ljava.util.Hashtable;::get;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];Lorg.h2.value.Value;::convertTo->Ljava.lang.StringBuilder;::toString;Lorg.h2.expression.Function;::getSimpleValue;Ljava.util.HashMap;::removeNode;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;[unknown];Lorg.h2.jdbc.JdbcPreparedStatement;::executeUpdate;Lorg.h2.jdbc.JdbcPreparedStatement;::executeUpdateInternal;Lorg.h2.command.Command;::executeUpdate;Lorg.h2.command.CommandContainer;::update;Lorg.h2.engine.Session;::getLogId;Lorg.h2.table.Table;::validateConvertUpdateSequence;Lorg.h2.table.Column;::validateConvertUpdateSequence;Lorg.h2.value.ValueDecimal;::checkPrecision;Lorg.h2.value.ValueDecimal;::getPrecision;Ljava.math.BigInteger;::abs;Lorg.h2.index.ScanIndex;::getNextRow;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];Lorg.h2.expression.Function;::optimize;[unknown];Lorg.h2.value.ValueTimestamp;::convertScale->Ljava.lang.StringBuilder;::toString;[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.ValueShort;::get->Lorg.h2.value.ValueShort;::<init>;[unknown];Lorg.h2.value.ValueTimestamp;::equals->Ljava.sql.Timestamp;::equals->Ljava.util.Date;::equals->Ljava.sql.Timestamp;::getTime->Ljava.util.Date;::getTime;Lorg.h2.value.Value;::convertTo;[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;Lorg.h2.value.Value;::convertTo;[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);Method::load_signature_classes(methodHandle, Thread*);SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*);SystemDictionary::load_instance_class(Symbol*, Handle, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Handle, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Ljava.lang.ClassLoader;::loadClass;[unknown];Interpreter;Ljava.security.AccessController;::doPrivileged;JVM_DoPrivileged;JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Ljava.net.URLClassLoader;::access$100;Ljava.net.URLClassLoader;::defineClass->Ljava.security.SecureClassLoader;::defineClass;Interpreter;Interpreter;Java_java_lang_ClassLoader_defineClass1;JVM_DefineClassWithSource;jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, unsigned char, Thread*);SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, bool, Thread*);ClassFileParser::parseClassFile(Symbol*, ClassLoaderData*, Handle, KlassHandle, GrowableArray<Handle>*, TempNewSymbol&, bool, Thread*);ClassFileParser::parse_methods(bool, AccessFlags*, bool*, bool*, Thread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::PhaseIdealLoop(PhaseIterGVN&, bool, bool);PhaseTransform::PhaseTransform(Phase::PhaseNumber);Type_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];[unknown];[unknown];[unknown];[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lorg.h2.value.ValueTimestamp;::convertScale->Ljava.lang.StringBuilder;::toString;[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.ValueShort;::get->Lorg.h2.value.ValueShort;::<init>;[unknown];Lorg.h2.value.ValueTimestamp;::equals->Ljava.sql.Timestamp;::equals->Ljava.util.Date;::equals->Ljava.sql.Timestamp;::getTime->Ljava.util.Date;::getTime;Lorg.h2.table.TableData;::addRowsToIndex;Lorg.h2.expression.Expression;::getBooleanValue;[unknown];Lorg.h2.expression.Comparison;::getValue;Lorg.h2.expression.Comparison;::compareNotNull;[unknown];Lorg.h2.value.Value;::compareTo;Lorg.h2.value.ValueString;::compareSecure;Lorg.h2.value.CompareMode;::compareString;[unknown];SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.command.dml.Insert;::insertRows;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;JavaMain;jni_CallStaticVoidMethod;jni_invoke_static(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .isra.197];JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;JVM_InvokeMethod;Reflection::invoke_method(oopDesc*, Handle, objArrayHandle, Thread*);Reflection::invoke(instanceKlassHandle, methodHandle, Handle, bool, objArrayHandle, BasicType, objArrayHandle, bool, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;JVM_InvokeMethod;Reflection::invoke_method(oopDesc*, Handle, objArrayHandle, Thread*);Reflection::invoke(instanceKlassHandle, methodHandle, Handle, bool, objArrayHandle, BasicType, objArrayHandle, bool, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;InterpreterRuntime::_new(JavaThread*, ConstantPool*, int);InstanceKlass::initialize(Thread*);InstanceKlass::initialize_impl(instanceKlassHandle, Thread*);InstanceKlass::call_class_initializer_impl(instanceKlassHandle, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;InterpreterRuntime::_new(JavaThread*, ConstantPool*, int);InstanceKlass::initialize(Thread*);InstanceKlass::initialize_impl(instanceKlassHandle, Thread*);InstanceKlass::link_class_impl(instanceKlassHandle, bool, Thread*);Verifier::verify(instanceKlassHandle, Verifier::Mode, bool, Thread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseLive::compute(unsigned int);IndexSet::alloc_block_containing(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];[unknown];Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();JavaThread::~JavaThread();Thread::~Thread();Arena::~Arena();Arena::destruct_contents();ThreadCritical::ThreadCritical() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong;[unknown];Lorg.h2.value.Value;::convertTo;[unknown];Lorg.h2.table.TableData;::addIndex->Ljava.lang.StringBuilder;::append;[unknown];Lorg.h2.value.Value;::convertTo->Ljava.lang.StringBuilder;::toString;Ljava.math.BigDecimal;::<init>;Lorg.h2.value.Value;::convertTo;Ljava.lang.StringBuilder;::<init>;Ljava.lang.AbstractStringBuilder;::<init>;_new_array_Java;OptoRuntime::new_array_C(Klass*, int, JavaThread*);SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];[unknown];[unknown];Lorg.h2.command.Command;::executeUpdate;Lorg.h2.command.CommandContainer;::update;[unknown];Lorg.h2.engine.Session;::commit;Ljava.util.ArrayList;::add;Ljava.util.ArrayList;::ensureCapacityInternal;Ljava.util.ArrayList;::ensureExplicitCapacity;[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;[unknown];[unknown];Lorg.h2.value.Value;::convertTo;[unknown];Lorg.h2.table.TableData;::addIndex->Ljava.lang.StringBuilder;::append;[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.ValueShort;::get;[unknown];Lorg.h2.value.Value;::convertTo;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseIFG::init(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];Lorg.h2.expression.Function;::optimize;[unknown];Lorg.h2.index.ScanCursor;::next;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;JavaMain;jni_CallStaticVoidMethod;jni_invoke_static(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .isra.197];JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;JVM_InvokeMethod;Reflection::invoke_method(oopDesc*, Handle, objArrayHandle, Thread*);Reflection::invoke(instanceKlassHandle, methodHandle, Handle, bool, objArrayHandle, BasicType, objArrayHandle, bool, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;JVM_InvokeMethod;Reflection::invoke_method(oopDesc*, Handle, objArrayHandle, Thread*);Reflection::invoke(instanceKlassHandle, methodHandle, Handle, bool, objArrayHandle, BasicType, objArrayHandle, bool, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code);LinkResolver::resolve_field_access(fieldDescriptor&, constantPoolHandle, int, Bytecodes::Code, Thread*);ConstantPool::klass_ref_at(int, Thread*);ConstantPool::klass_at_impl(constantPoolHandle, int, Thread*);SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*);SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*);SystemDictionary::load_instance_class(Symbol*, Handle, Thread*);ClassLoader::load_classfile(Symbol*, Thread*);LazyClassPathEntry::open_stream(char const*, Thread*);ClassPathZipEntry::open_stream(char const*, Thread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];Lorg.h2.value.Value;::convertTo->Ljava.lang.StringBuilder;::toString;Lorg.h2.expression.Function;::getSimpleValue;Lorg.h2.jdbc.JdbcPreparedStatement;::executeUpdate;Lorg.h2.jdbc.JdbcPreparedStatement;::executeUpdateInternal;Lorg.h2.command.Command;::executeUpdate;Lorg.h2.command.CommandContainer;::update;Lorg.h2.command.dml.Insert;::update;Lorg.h2.command.dml.Insert;::insertRows;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;[unknown];[unknown];[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;[unknown];[unknown];Lorg.h2.value.Value;::convertTo;[unknown];Lorg.h2.table.TableData;::addIndex->Ljava.lang.StringBuilder;::append;[unknown];[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong;[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lorg.h2.util.ObjectArray;::sort;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;[unknown];[unknown];Lorg.h2.value.Value;::convertTo;[unknown];Lorg.h2.table.TableData;::addIndex->Ljava.lang.StringBuilder;::append;[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.ValueShort;::get;Lorg.h2.value.Value;::convertTo->Ljava.lang.StringBuilder;::toString;Ljava.math.BigDecimal;::<init>;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];[unknown];[unknown];Lorg.h2.table.TableData;::addIndex;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;[unknown];[unknown];Lorg.h2.value.Value;::convertTo;[unknown];Lorg.h2.table.TableData;::addIndex->Ljava.lang.StringBuilder;::append;[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.ValueShort;::get;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];Lorg.h2.value.Value;::convertTo->Ljava.lang.StringBuilder;::toString;Lorg.h2.expression.Function;::getSimpleValue;Lorg.h2.jdbc.JdbcPreparedStatement;::executeUpdate;Lorg.h2.jdbc.JdbcPreparedStatement;::executeUpdateInternal;Lorg.h2.command.Command;::executeUpdate;Lorg.h2.command.CommandContainer;::update;Lorg.h2.command.dml.Insert;::update;Lorg.h2.command.dml.Insert;::insertRows;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;Lorg.h2.expression.Function;::getValue;[unknown];Lorg.h2.expression.Function;::getSimpleValue;Lorg.apache.derbyTesting.system.oe.util.OERandom;::randomDecimalString->Ljava.lang.StringBuffer;::append;Ljava.math.BigInteger;::toString;Ljava.math.BigInteger;::smallToString;Ljava.math.MutableBigInteger;::toBigInteger;_new_instance_Java;OptoRuntime::new_instance_C(Klass*, JavaThread*);InstanceKlass::allocate_instance(Thread*);GenCollectorPolicy::mem_allocate_work(unsigned long, bool, bool*);VMThread::execute(VM_Operation*);InstanceRefKlass::release_and_notify_pending_list_lock(BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];[unknown];Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lorg.h2.value.ValueTimestamp;::convertScale->Ljava.lang.StringBuilder;::toString;[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.ValueShort;::get->Lorg.h2.value.ValueShort;::<init>;[unknown];Lorg.h2.value.ValueTimestamp;::equals->Ljava.sql.Timestamp;::equals->Ljava.util.Date;::equals->Ljava.sql.Timestamp;::getTime->Ljava.util.Date;::getTime;Lorg.h2.table.TableData;::addRowsToIndex;Lorg.h2.util.ObjectArray;::sort;Lorg.h2.index.IndexCursor;::next;[unknown];Ljava.lang.StringCoding;::deref;Lorg.h2.index.MultiVersionCursor;::step;Lorg.h2.index.TreeCursor;::next;Ljava.lang.Integer;::getChars;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;JavaMain;jni_CallStaticVoidMethod;jni_invoke_static(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .isra.197];JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;JVM_InvokeMethod;Reflection::invoke_method(oopDesc*, Handle, objArrayHandle, Thread*);Reflection::invoke(instanceKlassHandle, methodHandle, Handle, bool, objArrayHandle, BasicType, objArrayHandle, bool, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;JVM_InvokeMethod;Reflection::invoke_method(oopDesc*, Handle, objArrayHandle, Thread*);Reflection::invoke(instanceKlassHandle, methodHandle, Handle, bool, objArrayHandle, BasicType, objArrayHandle, bool, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];Lorg.h2.value.Value;::convertTo->Ljava.lang.StringBuilder;::toString;Lorg.h2.expression.Function;::getSimpleValue->Lorg.h2.util.MemoryUtils;::getMemoryUsed;[unknown];[unknown];Lorg.h2.table.TableData;::addIndex->Ljava.lang.StringBuilder;::append;[unknown];[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong;[unknown];Ljava.lang.ThreadLocal$ThreadLocalMap;::access$000;Lorg.h2.util.ObjectArray;::sort;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);Method::load_signature_classes(methodHandle, Thread*);SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*);SystemDictionary::load_instance_class(Symbol*, Handle, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Handle, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Ljava.lang.ClassLoader;::loadClass;[unknown];Interpreter;Ljava.security.AccessController;::doPrivileged;JVM_DoPrivileged;JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Ljava.net.URLClassLoader;::access$100;Ljava.net.URLClassLoader;::defineClass->Ljava.security.SecureClassLoader;::defineClass;Interpreter;Interpreter;Java_java_lang_ClassLoader_defineClass1;JVM_DefineClassWithSource;jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, unsigned char, Thread*);SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, bool, Thread*);ClassFileParser::parseClassFile(Symbol*, ClassLoaderData*, Handle, KlassHandle, GrowableArray<Handle>*, TempNewSymbol&, bool, Thread*);ClassFileParser::parse_methods(bool, AccessFlags*, bool*, bool*, Thread*);ResourceMark::reset_to_mark();Chunk::next_chop();ThreadCritical::ThreadCritical() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];[unknown];[unknown];Ljava.math.BigDecimal;::<init>->Ljava.lang.Character;::isDigit->Ljava.lang.Character;::isDigit->Ljava.lang.Character;::getType;[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];Lorg.h2.value.Value;::convertTo->Ljava.lang.StringBuilder;::toString;Lorg.h2.expression.Function;::getSimpleValue->Lorg.h2.util.MemoryUtils;::getMemoryUsed;[unknown];[unknown];Lorg.h2.table.TableData;::addIndex->Ljava.lang.StringBuilder;::append;[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.ValueShort;::get;Lorg.h2.value.Value;::convertTo->Ljava.lang.StringBuilder;::toString;[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];Lorg.h2.value.Value;::convertTo->Ljava.lang.StringBuilder;::toString;Lorg.h2.expression.Function;::getSimpleValue;[unknown];Lorg.h2.command.Command;::executeUpdate;Lorg.h2.command.CommandContainer;::update;[unknown];Lorg.h2.engine.Session;::commit;Ljava.util.ArrayList;::add;Ljava.util.ArrayList;::ensureCapacityInternal;Ljava.util.ArrayList;::ensureExplicitCapacity;[unknown];Ljava.util.Arrays;::copyOf;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;Lorg.h2.value.Value;::convertTo;[unknown];Lorg.h2.value.Value;::convertTo;[unknown];Lorg.h2.table.TableData;::addIndex->Ljava.lang.StringBuilder;::append;[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];[unknown];[unknown];Lorg.h2.command.Command;::executeUpdate;Lorg.h2.command.CommandContainer;::update;[unknown];Lorg.h2.engine.Session;::commit;Lorg.h2.engine.Session;::containsUncommitted;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];Lorg.h2.value.Value;::convertTo->Ljava.lang.StringBuilder;::toString;Lorg.h2.expression.Function;::getSimpleValue;Lorg.h2.jdbc.JdbcPreparedStatement;::executeUpdate;Lorg.h2.jdbc.JdbcPreparedStatement;::executeUpdateInternal;Lorg.h2.command.Command;::executeUpdate;Lorg.h2.command.CommandContainer;::update;Lorg.h2.command.dml.Insert;::update;Lorg.h2.command.dml.Insert;::insertRows;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;Ljava.util.HashSet;::contains->Ljava.util.HashMap;::containsKey;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);WatcherThread::run();PeriodicTask::real_time_tick(int);ChunkPoolCleaner::task();ThreadCritical::ThreadCritical() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();LinearScan::do_linear_scan();LinearScan::number_instructions();Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.table.TableData;::addIndex->Lorg.h2.message.Message;::throwInternalError;Lorg.h2.value.ValueTimestamp;::convertScale->Ljava.lang.StringBuilder;::toString;[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.ValueShort;::get->Lorg.h2.value.ValueShort;::<init>;[unknown];Lorg.h2.value.ValueTimestamp;::equals->Ljava.sql.Timestamp;::equals->Ljava.util.Date;::equals->Ljava.sql.Timestamp;::getTime->Ljava.util.Date;::getTime;Lorg.h2.table.TableData;::addRowsToIndex;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();JavaThread::exit(bool, JavaThread::ExitType);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];Lorg.h2.value.Value;::convertTo->Ljava.lang.StringBuilder;::toString;Lorg.h2.expression.Function;::getSimpleValue;Lorg.h2.jdbc.JdbcPreparedStatement;::executeUpdate;Lorg.h2.jdbc.JdbcPreparedStatement;::executeUpdateInternal;Lorg.h2.command.Command;::executeUpdate;Lorg.h2.command.CommandContainer;::update;Lorg.h2.command.dml.Insert;::update;Lorg.h2.command.dml.Insert;::insertRows;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;Lorg.h2.expression.Function;::getValue;[unknown];Lorg.h2.expression.Function;::getSimpleValue;Lorg.apache.derbyTesting.system.oe.util.OERandom;::randomDecimalString->Ljava.lang.StringBuffer;::append;Ljava.math.BigInteger;::toString;Ljava.math.BigInteger;::smallToString;Ljava.math.MutableBigInteger;::toBigInteger;_new_instance_Java;OptoRuntime::new_instance_C(Klass*, JavaThread*);InstanceKlass::allocate_instance(Thread*);GenCollectorPolicy::mem_allocate_work(unsigned long, bool, bool*);VMThread::execute(VM_Operation*);Monitor::wait(bool, long, bool);Monitor::IWait(Thread*, long);os::PlatformEvent::park() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];Lorg.h2.value.Value;::convertTo->Ljava.lang.StringBuilder;::toString;Lorg.h2.expression.Function;::getSimpleValue;Lorg.h2.jdbc.JdbcPreparedStatement;::executeUpdate;Lorg.h2.jdbc.JdbcPreparedStatement;::executeUpdateInternal;Lorg.h2.command.Command;::executeUpdate;Lorg.h2.command.CommandContainer;::update;Lorg.h2.command.dml.Insert;::update;Lorg.h2.command.dml.Insert;::insertRows;Lorg.h2.engine.User;::checkRight;Lorg.h2.table.TableData;::addIndex->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;[unknown];Lorg.h2.command.Command;::executeUpdate;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];Lorg.h2.value.Value;::convertTo;[unknown];Lorg.h2.value.Value;::convertTo;[unknown];Lorg.h2.table.TableData;::addIndex->Ljava.lang.StringBuilder;::append;[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.ValueShort;::get;Lorg.h2.value.Value;::convertTo;Lorg.h2.index.TreeIndex;::child;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];[unknown];Interpreter;Lorg.h2.command.Command;::executeUpdate;Lorg.h2.command.CommandContainer;::update;[unknown];[unknown];Lorg.h2.engine.Session;::getTrace;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];[unknown];Lorg.h2.command.Command;::executeUpdate;Lorg.h2.command.CommandContainer;::update;[unknown];[unknown];[unknown];Lorg.h2.expression.Function;::getSimpleValue;[unknown];Lorg.h2.index.ViewCursor;::next;Ljava.lang.Character;::isLowerCase;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;[unknown];[unknown];Lorg.h2.value.Value;::convertTo;[unknown];Lorg.h2.table.TableData;::addIndex->Ljava.lang.StringBuilder;::append;[unknown];[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong;Lorg.h2.value.Value;::convertTo->Ljava.lang.StringBuilder;::toString;[unknown];[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);ConstantPool::resolve_string_constants_impl(constantPoolHandle, Thread*);ConstantPool::string_at_impl(constantPoolHandle, int, int, Thread*);StringTable::intern(Symbol*, Thread*);Chunk::next_chop();ThreadCritical::ThreadCritical() 2
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];Lorg.h2.value.Value;::convertTo->Ljava.lang.StringBuilder;::toString;Lorg.h2.expression.Function;::getSimpleValue;[unknown];[unknown];Lorg.h2.value.Value;::convertTo;UncommonTrapBlob;Deoptimization::uncommon_trap(JavaThread*, int);Deoptimization::uncommon_trap_inner(JavaThread*, int);Chunk::next_chop();ThreadCritical::ThreadCritical() 2
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_method_entry();GraphKit::make_dtrace_method_entry_exit(ciMethod*, bool);GraphKit::kill_dead_locals();ciMethod::liveness_at_bci(int);MethodLiveness::compute_liveness();MethodLiveness::init_basic_blocks();MethodLiveness::BasicBlock::BasicBlock(MethodLiveness*, int, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];Lorg.h2.value.Value;::convertTo->Ljava.lang.StringBuilder;::toString;Lorg.h2.expression.Function;::getSimpleValue;[unknown];[unknown];Lorg.h2.value.Value;::convertTo;Interpreter;UncommonTrapBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 2
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Optimize();PhaseIdealLoop::build_and_optimize(bool, bool);PhaseIdealLoop::split_if_with_blocks(VectorSet&, Node_Stack&);PhaseIdealLoop::split_if_with_blocks_pre(Node*);PhaseIdealLoop::split_thru_phi(Node*, Node*, int);PhiNode::make_blank(Node*, Node*);Node::Node(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];Lorg.h2.value.Value;::convertTo->Ljava.lang.StringBuilder;::toString;Lorg.h2.expression.Function;::getSimpleValue;[unknown];[unknown];Lorg.h2.value.Value;::convertTo;UncommonTrapBlob;Deoptimization::fetch_unroll_info_helper(JavaThread*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];[unknown];[unknown];Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 2
OE_Thread:0;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;[unknown];[unknown];Lorg.h2.index.ScanIndex;::incrementRowCount;Lorg.h2.value.Value;::convertTo;Lorg.h2.value.ValueTimestamp;::convertScale->Ljava.lang.StringBuilder;::toString;[unknown];Lorg.h2.value.Value;::convertTo->Lorg.h2.value.Value;::convertToLong->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException->Lorg.h2.message.Message;::getSQLException;Lorg.h2.value.Value;::convertTo->Lorg.h2.value.ValueShort;::get->Lorg.h2.value.ValueShort;::<init>;[unknown];Lorg.h2.value.ValueTimestamp;::equals->Ljava.sql.Timestamp;::equals->Ljava.util.Date;::equals->Ljava.sql.Timestamp;::getTime->Ljava.util.Date;::getTime;Lorg.h2.table.TableData;::addRowsToIndex;[unknown];Lorg.h2.expression.Function;::getValue;[unknown];[unknown];Ljava.util.HashMap;::get;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 3
