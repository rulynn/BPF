{"name":"root","value":2,"children":[{"name":"Reference Handl","value":2,"children":[{"name":"start_thread","value":2,"children":[{"name":"java_start(Thread*)","value":2,"children":[{"name":"JavaThread::thread_main_inner()","value":2,"children":[{"name":"CompileBroker::compiler_thread_loop()","value":1,"children":[{"name":"CompileBroker::invoke_compiler_on_method(CompileTask*)","value":1,"children":[{"name":"C2Compiler::compile_method(ciEnv*, ciMethod*, int)","value":1,"children":[{"name":"Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)","value":1,"children":[{"name":"ParseGenerator::generate(JVMState*)","value":1,"children":[{"name":"Parse::Parse(JVMState*, ciMethod*, float)","value":1,"children":[{"name":"Parse::do_all_blocks()","value":1,"children":[{"name":"Parse::do_one_block()","value":1,"children":[{"name":"Parse::do_one_bytecode()","value":1,"children":[{"name":"Parse::do_field_access(bool, bool)","value":1,"children":[{"name":"Parse::do_get_xxx(Node*, ciField*, bool)","value":1,"children":[{"name":"Compile::alias_type(ciField*)","value":1,"children":[{"name":"TypeInstPtr::add_offset(long) const","value":1,"children":[{"name":"TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypeOopPtr const*, int)","value":1,"children":[{"name":"TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypeOopPtr const*, int)","value":1,"children":[{"name":"ciInstanceKlass::get_field_by_offset(int, bool)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"name":"thread_entry(JavaThread*, Thread*)","value":1,"children":[{"name":"JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*)","value":1,"children":[{"name":"JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*)","value":1,"children":[{"name":"JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*)","value":1,"children":[{"name":"call_stub","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"JVM_MonitorWait","value":1,"children":[{"name":"ObjectSynchronizer::wait(Handle, long, Thread*)","value":1,"children":[{"name":"ObjectMonitor::wait(long, bool, Thread*)","value":1,"children":[{"name":"os::PlatformEvent::park()","value":1,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}
