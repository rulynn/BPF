node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;Ljava.util.LinkedList;::<init>;Ljava.util.AbstractSequentialList;::<init>;Ljava.util.AbstractList;::<init>;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow->Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();PhaseChaitin::Register_Allocate();PhaseAggressiveCoalesce::insert_copies(Matcher&);Node_Array::insert(unsigned int, Node*);Node_Array::grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;[unknown];DeoptimizationBlob;Deoptimization::fetch_unroll_info(JavaThread*);Deoptimization::fetch_unroll_info_helper(JavaThread*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Interpreter;Lavrora.sim.mcu.ADC$ControlRegister;::access$100;resolve_opt_virtual_call;SharedRuntime::resolve_opt_virtual_call_C(JavaThread*);SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*);SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*);Monitor::lock(Thread*);Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;resolve_opt_virtual_call;SharedRuntime::resolve_opt_virtual_call_C(JavaThread*);SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*);SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*);Monitor::lock(Thread*);Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ADC$ControlRegister;::write->Lavrora.sim.AtmelInterpreter;::setEnabled;Lavrora.sim.InterruptTable;::enable;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;Ljava.io.PrintStream;::write->Ljava.io.OutputStreamWriter;::flushBuffer;Lsun.nio.cs.StreamEncoder;::flushBuffer->Lsun.nio.cs.StreamEncoder;::implFlushBuffer;Lsun.nio.cs.StreamEncoder;::writeBytes;Ljava.io.PrintStream;::write;[unknown];counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);Deoptimization::deoptimize_frame(JavaThread*, long*);Deoptimization::deoptimize_frame_internal(JavaThread*, long*);Deoptimization::deoptimize(JavaThread*, frame, RegisterMap*);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::array_load(BasicType);GraphKit::null_check_common(Node*, BasicType, bool, Node**) [clone .part.293];GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool);GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*);GraphKit::set_predefined_output_for_runtime_call(Node*, Node*, TypePtr const*);GraphKit::set_all_memory(Node*);MergeMemNode::make(Compile*, Node*);MergeMemNode::MergeMemNode(Node*);MergeMemNode::set_base_memory(Node*);Node::out_grow(unsigned int);Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$ST;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$BRCC;::accept;resolve_virtual_call;SharedRuntime::resolve_virtual_call_C(JavaThread*);SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*);SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*);Monitor::lock(Thread*);Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();GraphKit::null_check_common(Node*, BasicType, bool, Node**) [clone .part.293];GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool);GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*);Node::Node(unsigned int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$BasicArbitrator;::mergeTransmissions;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::getBuffer->Lavrora.sim.util.SimUtil;::getIDTimeString;Lavrora.sim.util.SimUtil;::toIDTimeString->Lcck.text.StringUtil;::justify;Ljava.lang.Long;::toString;Ljava.lang.Long;::getChars;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_RuntimeCall(RuntimeCall*);LIRGenerator::call_runtime(BasicTypeArray*, LIR_OprList*, unsigned char*, ValueType*, CodeEmitInfo*);FrameMap::c_calling_convention(BasicTypeArray const*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();attach_listener_thread_entry(JavaThread*, Thread*);JvmtiExport::load_agent_library(AttachOperation*, outputStream*);Agent_OnAttach;jvmti_GenerateEvents;JvmtiCodeBlobEvents::generate_compiled_method_load_events(JvmtiEnv*);JvmtiExport::post_compiled_method_load(nmethod*);cbCompiledMethodLoad;generate_unfolded_entries;write_unfolded_entry;sig_string;jvmti_GetClassSignature;JvmtiEnv::GetClassSignature(oopDesc*, char**, char**);InstanceKlass::signature_name() const;Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ADC$ControlRegister;::write;Lavrora.sim.AtmelInterpreter;::setEnabled;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireBefore;Lavrora.sim.util.MulticastFSMProbe;::fireBeforeTransition;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::method_return(Instruction*);ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;Ljava.io.PrintStream;::write->Ljava.io.OutputStreamWriter;::flushBuffer;Lsun.nio.cs.StreamEncoder;::flushBuffer->Lsun.nio.cs.StreamEncoder;::implFlushBuffer;Lsun.nio.cs.StreamEncoder;::writeBytes;Ljava.io.PrintStream;::write;Ljava.io.FilterOutputStream;::write;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);Deoptimization::deoptimize_frame(JavaThread*, long*);Deoptimization::deoptimize_frame_internal(JavaThread*, long*);Deoptimization::deoptimize(JavaThread*, frame, RegisterMap*);Deoptimization::revoke_biases_of_monitors(JavaThread*, frame, RegisterMap*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::append_with_bci(Instruction*, int);ValueStack::copy(ValueStack::Kind, int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$DirectionRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::setOutputDir;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$LPM;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit->Lavrora.sim.AtmelInterpreter;::getFlashByte;Lavrora.sim.Segment;::read;wrong_method_stub;SharedRuntime::handle_wrong_method(JavaThread*);SharedRuntime::reresolve_call_site(JavaThread*, Thread*);Monitor::lock(Thread*);Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow->Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_ProfileInvoke(ProfileInvoke*);LIRGenerator::increment_event_counter_impl(CodeEmitInfo*, ciMethod*, int, int, bool, bool);LIR_List::metadata2reg(Metadata*, LIR_OprDesc*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;Lsun.nio.cs.StreamEncoder;::write;Lsun.nio.cs.StreamEncoder;::implWrite;Ljava.nio.charset.CharsetEncoder;::encode;Lsun.nio.cs.US_ASCII$Encoder;::encodeLoop;Lsun.nio.cs.US_ASCII$Encoder;::encodeArrayLoop;Ljava.nio.ByteBuffer;::arrayOffset;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;Ljava.util.AbstractSequentialList;::iterator;Ljava.util.AbstractList;::listIterator;Ljava.util.LinkedList;::listIterator;_new_instance_Java;OptoRuntime::new_instance_C(Klass*, JavaThread*);SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;SafepointBlob;ThreadSafepointState::handle_polling_page_exception();SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$ANDI;::accept;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::build_hir();IR::IR(Compilation*, ciMethod*, int);IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool);GraphBuilder::GraphBuilder(Compilation*, IRScope*);GraphBuilder::iterate_all_blocks(bool);GraphBuilder::iterate_bytecodes_for_block(int);GraphBuilder::invoke(Bytecodes::Code);GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*);GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*);Instruction::operator new(unsigned long) [clone .constprop.471];Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition;Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$ROR;::accept;resolve_virtual_call;SharedRuntime::resolve_virtual_call_C(JavaThread*);SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*);SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;Ljava.io.PrintStream;::write->Ljava.io.OutputStreamWriter;::flushBuffer;Lsun.nio.cs.StreamEncoder;::flushBuffer->Lsun.nio.cs.StreamEncoder;::implFlushBuffer;Lsun.nio.cs.StreamEncoder;::writeBytes;Ljava.io.PrintStream;::write;Ljava.io.FilterOutputStream;::write;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_back_branch_event(methodHandle, methodHandle, int, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.clock.MainClock;::insertEvent;Lavrora.sim.clock.DeltaQueue;::insertEvent;Lavrora.sim.clock.DeltaQueue$Link;::add;Lavrora.sim.clock.DeltaQueue;::access$000;Lavrora.sim.clock.DeltaQueue;::newEventList;Lavrora.sim.clock.DeltaQueue$EventList;::<init>;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CPC;::accept;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;Ljava.util.AbstractSequentialList;::iterator;Ljava.util.AbstractList;::listIterator;Ljava.util.LinkedList;::listIterator;_new_instance_Java;OptoRuntime::new_instance_C(Klass*, JavaThread*);SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Receiver;::access$200;Lavrora.sim.radio.Medium$Receiver;::getIntersection;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);SafepointSynchronize::block(JavaThread*) [clone .part.140];os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer;Ljava.lang.StringBuffer;::toString;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;_complete_monitor_locking_Java;SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ReenterI(Thread*, ObjectWaiter*);os::PlatformEvent::park() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;Ljava.io.PrintStream;::write->Ljava.io.OutputStreamWriter;::flushBuffer;Lsun.nio.cs.StreamEncoder;::flushBuffer->Lsun.nio.cs.StreamEncoder;::implFlushBuffer;Lsun.nio.cs.StreamEncoder;::writeBytes;Ljava.io.PrintStream;::write;Interpreter;DeoptimizationBlob;Deoptimization::unpack_frames(JavaThread*, int);Deoptimization::cleanup_deopt_info(JavaThread*, vframeArray*);Chunk::next_chop();ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;Lsun.nio.cs.StreamEncoder;::write;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;Ljava.io.PrintStream;::write;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;Lsun.nio.cs.StreamEncoder;::write;Lsun.nio.cs.StreamEncoder;::implWrite;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Interpreter;InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*);InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);Deoptimization::deoptimize_frame(JavaThread*, long*);Deoptimization::deoptimize_frame_internal(JavaThread*, long*);Deoptimization::deoptimize(JavaThread*, frame, RegisterMap*);Deoptimization::revoke_biases_of_monitors(JavaThread*, frame, RegisterMap*);vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println;Ljava.io.PrintStream;::newLine;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;Lsun.nio.cs.StreamEncoder;::write;Lsun.nio.cs.StreamEncoder;::implWrite;Ljava.nio.CharBuffer;::wrap;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::advance;Lavrora.sim.clock.RippleSynchronizer;::notifyLink;Ljava.lang.Object;::notifyAll;JVM_MonitorNotifyAll;ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.318];JavaThread::check_safepoint_and_suspend_for_native_trans(JavaThread*);SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow->Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);SafepointSynchronize::block(JavaThread*) [clone .part.140];Monitor::lock_without_safepoint_check();Monitor::ILock(Thread*);os::PlatformEvent::park() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$STD;::accept;resolve_virtual_call;SharedRuntime::resolve_virtual_call_C(JavaThread*);SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*);SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*);os::PlatformEvent::unpark() 1
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Interpreter;Interpreter;Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 2
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Interpreter;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 2
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow->Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition;Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ReenterI(Thread*, ObjectWaiter*);os::PlatformEvent::park() 2
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 2
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 2
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 2
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 2
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;Ljava.io.PrintStream;::write;Ljava.io.BufferedWriter;::flushBuffer;Ljava.io.OutputStreamWriter;::write;Lsun.nio.cs.StreamEncoder;::write;Lsun.nio.cs.StreamEncoder;::implWrite;Ljava.nio.Buffer;::hasRemaining;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 2
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ReenterI(Thread*, ObjectWaiter*);os::PlatformEvent::park() 2
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);Compile::Code_Gen();Compile::fill_buffer(CodeBuffer*, unsigned int*);Compile::Process_OopMap_Node(MachNode*, int);DebugInformationRecorder::create_scope_values(GrowableArray<ScopeValue*>*);ConstantOopWriteValue::write_on(DebugInfoWriteStream*);ValueRecorder<_jobject*>::maybe_find_index(_jobject*);ValueRecorder<_jobject*>::maybe_initialize();GenericGrowableArray::raw_allocate(int);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 2
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$100;Lavrora.sim.radio.Medium$Receiver;::earliestNewTransmission;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition;Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 3
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition;Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 3
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow->Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 4
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 4
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 4
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 5
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow->Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 5
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;resolve_virtual_call;SharedRuntime::resolve_virtual_call_C(JavaThread*);SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*);SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*);os::PlatformEvent::unpark() 5
node-5;start_thread;java_start(Thread*);VMThread::run();VMThread::loop();SafepointSynchronize::begin();Monitor::wait(bool, long, bool);Monitor::IWait(Thread*, long);os::PlatformEvent::unpark() 5
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 5
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow->Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 6
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);Compiler::compile_method(ciEnv*, ciMethod*, int);Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*);Compilation::compile_method();Compilation::compile_java_method();Compilation::emit_lir();BlockList::iterate_forward(BlockClosure*);LIRGenerator::block_do(BlockBegin*);LIRGenerator::do_Goto(Goto*);LIRGenerator::move_to_phi(ValueStack*);PhiResolverState::reset(int);ResourceArray::expand(unsigned long, int, int&);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 7
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 7
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 9
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 9
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 11
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Interpreter;Interpreter;Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 11
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 12
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 14
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.sim.AtmelInterpreter;::commit;Lavrora.sim.clock.MainClock;::advance;Lavrora.sim.clock.DeltaQueue;::advance;Lavrora.sim.clock.DeltaQueue;::advanceSlow;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 16
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 17
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool);ParseGenerator::generate(JVMState*);Parse::Parse(JVMState*, ciMethod*, float);Parse::do_all_blocks();Parse::do_one_block();Parse::do_one_bytecode();Parse::do_if(BoolTest::mask, Node*);Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum);ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum);ThreadCritical::ThreadCritical() 19
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 20
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 22
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$CBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 23
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::fastLoop;Lavrora.arch.legacy.LegacyInstr$SBI;::accept;Lavrora.arch.legacy.LegacyInterpreter;::visit;Lavrora.sim.AtmelInterpreter;::setIORegBit;Lavrora.sim.AtmelInterpreter;::writeSRAM;Lavrora.sim.AtmelInterpreter;::writeVolatile;Lavrora.sim.AtmelInterpreter$IORegBehavior;::write;Lavrora.sim.mcu.ATMegaFamily$PortRegister;::write;Lavrora.sim.mcu.DefaultMCU$Pin;::write;Lavrora.sim.platform.LED;::write;Lavrora.sim.FiniteStateMachine;::transition;Lavrora.sim.FiniteStateMachine;::fireAfter;Lavrora.sim.util.MulticastFSMProbe;::fireAfterTransition;Lavrora.monitors.LEDMonitor$Mon;::fireAfterTransition->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 25
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ReenterI(Thread*, ObjectWaiter*);os::PlatformEvent::park() 34
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 77
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 78
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Transmitter$Ticker;::fire;counter_overflow Runtime1 stub;Runtime1::counter_overflow(JavaThread*, int, Method*);SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*);AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*);SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149];AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*);CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*);CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*);os::PlatformEvent::unpark() 79
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 82
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park() 88
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 99
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer;monitorenter_nofpu Runtime1 stub;Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*);ObjectMonitor::enter(Thread*);ObjectMonitor::EnterI(Thread*);os::PlatformEvent::park(long) 110
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 175
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver$Ticker;::deliverByte;Lavrora.sim.radio.Medium$Probe$List;::fireAfterReceiveEnd;Lavrora.monitors.PacketMonitor$Mon;::fireAfterReceiveEnd->Lavrora.sim.output.SimPrinter;::printBuffer->Lcck.text.Terminal;::println->Ljava.io.PrintStream;::println->Ljava.io.PrintStream;::print;monitorexit_nofpu Runtime1 stub;Runtime1::monitorexit(JavaThread*, BasicObjectLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 220
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.clock.RippleSynchronizer$NotifyEvent;::fire;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 272
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 439
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 441
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 1329
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();CompileBroker::compiler_thread_loop();CompileBroker::invoke_compiler_on_method(CompileTask*);C2Compiler::compile_method(ciEnv*, ciMethod*, int);Arena::~Arena();Arena::destruct_contents();ThreadCritical::ThreadCritical() 2982
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop->Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop->Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 3137
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 5950
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireLocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 6102
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*);ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*);os::PlatformEvent::unpark() 40022
node-5;start_thread;java_start(Thread*);JavaThread::thread_main_inner();thread_entry(JavaThread*, Thread*);JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*);JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*);JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*);call_stub;Interpreter;Interpreter;Interpreter;Lavrora.arch.legacy.LegacyInterpreter;::runLoop;Lavrora.arch.legacy.LegacyInterpreter;::sleepLoop;Lavrora.sim.clock.MainClock;::skipAhead;Lavrora.sim.clock.DeltaQueue;::skipAhead;Lavrora.sim.clock.DeltaQueue$Link;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fire;Lavrora.sim.radio.Medium$Receiver$Ticker;::fireUnlocked;Lavrora.sim.radio.Medium$Receiver;::access$000;Lavrora.sim.radio.Medium$Receiver;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitForNeighbors;Lavrora.sim.clock.RippleSynchronizer;::waitFor;Lavrora.sim.clock.RippleSynchronizer;::waitForLink;Ljava.lang.Object;::wait;Ljava.lang.Object;::wait;JVM_MonitorWait;ObjectSynchronizer::wait(Handle, long, Thread*);ObjectMonitor::wait(long, bool, Thread*);os::PlatformEvent::park() 41710
