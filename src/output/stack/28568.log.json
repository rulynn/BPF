{"name":"root","value":34,"children":[{"name":"process reaper","value":32,"children":[{"name":"start_thread","value":32,"children":[{"name":"java_start(Thread*)","value":27,"children":[{"name":"JavaThread::thread_main_inner()","value":27,"children":[{"name":"CompileBroker::compiler_thread_loop()","value":24,"children":[{"name":"CompileBroker::invoke_compiler_on_method(CompileTask*)","value":24,"children":[{"name":"C2Compiler::compile_method(ciEnv*, ciMethod*, int)","value":19,"children":[{"name":"Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)","value":19,"children":[{"name":"Compile::Init(int)","value":1,"children":[{"name":"GenericGrowableArray::raw_allocate(int)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]},{"name":"Compile::Optimize()","value":5,"children":[{"name":"Compile::final_graph_reshaping()","value":1,"children":[{"name":"Compile::final_graph_reshaping_walk(Node_Stack\u0026, Node*, Final_Reshape_Counts\u0026)","value":1,"children":[{"name":"Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts\u0026)","value":1,"children":[{"name":"ConNode::make(Compile*, Type const*)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]},{"name":"PhaseCCP::analyze()","value":1,"children":[{"name":"TypeAryPtr::add_offset(long) const","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]},{"name":"PhaseIterGVN::optimize()","value":2,"children":[{"name":"PhaseIterGVN::transform_old(Node*)","value":2,"children":[{"name":"PhaseIterGVN::subsume_node(Node*, Node*)","value":1,"children":[{"name":"Node::out_grow(unsigned int)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]},{"name":"TypeLong::filter_helper(Type const*, bool) const","value":1,"children":[{"name":"TypeLong::make(long, long, int)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]},{"name":"PhaseIdealLoop::build_and_optimize(bool, bool)","value":1,"children":[{"name":"IdealLoopTree::loop_predication(PhaseIdealLoop*)","value":1,"children":[{"name":"PhaseIdealLoop::loop_predication_impl(IdealLoopTree*)","value":1,"children":[{"name":"PhaseIdealLoop::create_new_if_for_predicate(ProjNode*, Node*, Deoptimization::DeoptReason)","value":1,"children":[{"name":"PhaseIdealLoop::set_idom(Node*, Node*, unsigned int)","value":1,"children":[{"name":"Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]}]}]},{"name":"Compile::Code_Gen()","value":4,"children":[{"name":"PhaseChaitin::Register_Allocate()","value":2,"children":[{"name":"PhaseIFG::SquareUp()","value":1,"children":[{"name":"IndexSet::alloc_block_containing(unsigned int)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]},{"name":"PhaseLive::compute(unsigned int)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]},{"name":"Compile::Output()","value":2,"children":[{"name":"Compile::init_buffer(unsigned int*)","value":1,"children":[{"name":"Compile::shorten_branches(unsigned int*, int\u0026, int\u0026, int\u0026)","value":1,"children":[{"name":"jmpLoopEndNode::short_branch_version(Compile*)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]},{"name":"Compile::BuildOopMaps()","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]},{"name":"ParseGenerator::generate(JVMState*)","value":9,"children":[{"name":"Parse::Parse(JVMState*, ciMethod*, float)","value":9,"children":[{"name":"Parse::do_all_blocks()","value":9,"children":[{"name":"Parse::do_one_block()","value":9,"children":[{"name":"Parse::do_one_bytecode()","value":8,"children":[{"name":"Parse::do_if(BoolTest::mask, Node*)","value":2,"children":[{"name":"Node::out_grow(unsigned int)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]},{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]},{"name":"Parse::do_checkcast()","value":2,"children":[{"name":"GraphKit::gen_checkcast(Node*, Node*, Node**)","value":2,"children":[{"name":"GraphKit::maybe_cast_profiled_receiver(Node*, ciKlass*, ciKlass*, bool)","value":1,"children":[{"name":"GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool)","value":1,"children":[{"name":"GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*)","value":1,"children":[{"name":"GraphKit::set_predefined_output_for_runtime_call(Node*, Node*, TypePtr const*)","value":1,"children":[{"name":"GraphKit::set_all_memory(Node*)","value":1,"children":[{"name":"MergeMemNode::make(Compile*, Node*)","value":1,"children":[{"name":"MergeMemNode::MergeMemNode(Node*)","value":1,"children":[{"name":"MergeMemNode::set_memory_at(unsigned int, Node*)","value":1,"children":[{"name":"Node::out_grow(unsigned int)","value":1,"children":[{"name":"Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]},{"name":"GraphKit::null_check_oop(Node*, Node**, bool, bool)","value":1,"children":[{"name":"GraphKit::clone_map()","value":1,"children":[{"name":"MergeMemNode::make(Compile*, Node*)","value":1,"children":[{"name":"MergeMemNode::MergeMemNode(Node*)","value":1,"children":[{"name":"Node::Node(unsigned int)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]}]}]},{"name":"Parse::do_call()","value":3,"children":[{"name":"DirectCallGenerator::generate(JVMState*)","value":2,"children":[{"name":"GraphKit::null_check_common(Node*, BasicType, bool, Node**) [clone .part.293]","value":2,"children":[{"name":"Node::Node(Node*, Node*, Node*)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]},{"name":"GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool)","value":1,"children":[{"name":"GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*)","value":1,"children":[{"name":"GraphKit::add_safepoint_edges(SafePointNode*, bool)","value":1,"children":[{"name":"Node::add_req_batch(Node*, unsigned int)","value":1,"children":[{"name":"Node::grow(unsigned int)","value":1,"children":[{"name":"Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]}]}]}]},{"name":"VirtualCallGenerator::generate(JVMState*)","value":1,"children":[{"name":"GraphKit::set_edges_for_java_call(CallJavaNode*, bool, bool)","value":1,"children":[{"name":"PhaseGVN::transform_no_reclaim(Node*)","value":1,"children":[{"name":"Type_Array::grow(unsigned int)","value":1,"children":[{"name":"Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]}]},{"name":"Node::Node(Node*, Node*, Node*)","value":1,"children":[{"name":"Node::out_grow(unsigned int)","value":1,"children":[{"name":"Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]},{"name":"Parse::do_exceptions()","value":1,"children":[{"name":"Parse::catch_inline_exceptions(SafePointNode*)","value":1,"children":[{"name":"PhaseTransform::longcon(long)","value":1,"children":[{"name":"Type::hashcons()","value":1,"children":[{"name":"Dict::Insert(void*, void*, bool)","value":1,"children":[{"name":"Dict::doubhash()","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"name":"Compiler::compile_method(ciEnv*, ciMethod*, int)","value":5,"children":[{"name":"Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*)","value":5,"children":[{"name":"Compilation::compile_method()","value":5,"children":[{"name":"Compilation::compile_java_method()","value":5,"children":[{"name":"Compilation::build_hir()","value":4,"children":[{"name":"IR::IR(Compilation*, ciMethod*, int)","value":4,"children":[{"name":"IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool)","value":4,"children":[{"name":"GraphBuilder::GraphBuilder(Compilation*, IRScope*)","value":4,"children":[{"name":"GraphBuilder::state_at_entry()","value":1,"children":[{"name":"ValueStack::ValueStack(IRScope*, ValueStack*)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]},{"name":"GraphBuilder::iterate_all_blocks(bool)","value":3,"children":[{"name":"GraphBuilder::iterate_bytecodes_for_block(int)","value":3,"children":[{"name":"GraphBuilder::invoke(Bytecodes::Code)","value":3,"children":[{"name":"GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*)","value":1,"children":[{"name":"GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*)","value":1,"children":[{"name":"GraphBuilder::iterate_all_blocks(bool)","value":1,"children":[{"name":"GraphBuilder::iterate_bytecodes_for_block(int)","value":1,"children":[{"name":"GraphBuilder::invoke(Bytecodes::Code)","value":1,"children":[{"name":"GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*)","value":1,"children":[{"name":"GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*)","value":1,"children":[{"name":"GraphBuilder::iterate_all_blocks(bool)","value":1,"children":[{"name":"GraphBuilder::iterate_bytecodes_for_block(int)","value":1,"children":[{"name":"GraphBuilder::invoke(Bytecodes::Code)","value":1,"children":[{"name":"GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*)","value":1,"children":[{"name":"GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*)","value":1,"children":[{"name":"GraphBuilder::iterate_all_blocks(bool)","value":1,"children":[{"name":"GraphBuilder::iterate_bytecodes_for_block(int)","value":1,"children":[{"name":"GraphBuilder::invoke(Bytecodes::Code)","value":1,"children":[{"name":"GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*)","value":1,"children":[{"name":"GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*)","value":1,"children":[{"name":"GraphBuilder::profile_call(ciMethod*, Instruction*, ciKlass*, Values*, bool)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"name":"ciBytecodeStream::get_method(bool\u0026, ciSignature**)","value":2,"children":[{"name":"Chunk::next_chop()","value":2,"children":[{"name":"ThreadCritical::ThreadCritical()","value":2,"children":[]}]}]}]}]}]}]}]}]}]},{"name":"Compilation::emit_lir()","value":1,"children":[{"name":"BlockList::iterate_forward(BlockClosure*)","value":1,"children":[{"name":"LIRGenerator::block_do(BlockBegin*)","value":1,"children":[{"name":"LIRGenerator::do_Goto(Goto*)","value":1,"children":[{"name":"LIRGenerator::move_to_phi(ValueStack*)","value":1,"children":[{"name":"PhiResolverState::reset(int)","value":1,"children":[{"name":"ResourceArray::expand(unsigned long, int, int\u0026)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"name":"thread_entry(JavaThread*, Thread*)","value":3,"children":[{"name":"JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*)","value":3,"children":[{"name":"JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*)","value":3,"children":[{"name":"JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*)","value":3,"children":[{"name":"call_stub","value":3,"children":[{"name":"Interpreter","value":2,"children":[{"name":"Interpreter","value":2,"children":[{"name":"[unknown]","value":2,"children":[{"name":"[unknown]","value":2,"children":[{"name":"[unknown]","value":2,"children":[{"name":"[unknown]","value":2,"children":[{"name":"[unknown]","value":2,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*)","value":1,"children":[{"name":"InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*)","value":1,"children":[{"name":"SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*)","value":1,"children":[{"name":"AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*)","value":1,"children":[{"name":"SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149]","value":1,"children":[{"name":"AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*)","value":1,"children":[{"name":"CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*)","value":1,"children":[{"name":"CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*)","value":1,"children":[{"name":"os::PlatformEvent::unpark()","value":1,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"name":"Lorg.eclipse.jdt.internal.compiler.parser.Scanner","value":1,"children":[{"name":"::internalScanIdentifierOrKeyword","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"counter_overflow Runtime1 stub","value":1,"children":[{"name":"Runtime1::counter_overflow(JavaThread*, int, Method*)","value":1,"children":[{"name":"SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*)","value":1,"children":[{"name":"AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*)","value":1,"children":[{"name":"SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149]","value":1,"children":[{"name":"AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*)","value":1,"children":[{"name":"CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*)","value":1,"children":[{"name":"CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*)","value":1,"children":[{"name":"os::PlatformEvent::unpark()","value":1,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"name":"Ljava.lang.ref.Finalizer$FinalizerThread","value":1,"children":[{"name":"::run","value":1,"children":[{"name":"counter_overflow Runtime1 stub","value":1,"children":[{"name":"Runtime1::counter_overflow(JavaThread*, int, Method*)","value":1,"children":[{"name":"SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*)","value":1,"children":[{"name":"AdvancedThresholdPolicy::method_back_branch_event(methodHandle, methodHandle, int, CompLevel, nmethod*, JavaThread*)","value":1,"children":[{"name":"SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149]","value":1,"children":[{"name":"AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*)","value":1,"children":[{"name":"CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*)","value":1,"children":[{"name":"CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*)","value":1,"children":[{"name":"os::PlatformEvent::unpark()","value":1,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"name":"JavaMain","value":5,"children":[{"name":"jni_CallStaticVoidMethod","value":5,"children":[{"name":"jni_invoke_static(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .isra.197]","value":5,"children":[{"name":"JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*)","value":5,"children":[{"name":"call_stub","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"JVM_InvokeMethod","value":5,"children":[{"name":"Reflection::invoke_method(oopDesc*, Handle, objArrayHandle, Thread*)","value":5,"children":[{"name":"Reflection::invoke(instanceKlassHandle, methodHandle, Handle, bool, objArrayHandle, BasicType, objArrayHandle, bool, Thread*)","value":5,"children":[{"name":"JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*)","value":5,"children":[{"name":"call_stub","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"JVM_InvokeMethod","value":5,"children":[{"name":"Reflection::invoke_method(oopDesc*, Handle, objArrayHandle, Thread*)","value":5,"children":[{"name":"Reflection::invoke(instanceKlassHandle, methodHandle, Handle, bool, objArrayHandle, BasicType, objArrayHandle, bool, Thread*)","value":5,"children":[{"name":"JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*)","value":5,"children":[{"name":"call_stub","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Interpreter","value":5,"children":[{"name":"Lorg.eclipse.core.runtime.SafeRunner","value":1,"children":[{"name":"::run","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Lorg.eclipse.core.runtime.SafeRunner","value":1,"children":[{"name":"::run","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Lorg.eclipse.jdt.internal.compiler.parser.Scanner","value":1,"children":[{"name":"::unicodeStore","value":1,"children":[{"name":"UncommonTrapBlob","value":1,"children":[{"name":"Deoptimization::uncommon_trap(JavaThread*, int)","value":1,"children":[{"name":"Deoptimization::uncommon_trap_inner(JavaThread*, int)","value":1,"children":[{"name":"Deoptimization::revoke_biases_of_monitors(JavaThread*, frame, RegisterMap*)","value":1,"children":[{"name":"vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"name":"Interpreter","value":4,"children":[{"name":"Interpreter","value":4,"children":[{"name":"[unknown]","value":3,"children":[{"name":"[unknown]","value":3,"children":[{"name":"[unknown]","value":3,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"Ljava.util.AbstractCollection","value":1,"children":[{"name":"::toArray-\u003eLjava.lang.reflect.Array","value":1,"children":[{"name":"::newInstance","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"Lorg.eclipse.jdt.internal.compiler.parser.AbstractCommentParser","value":1,"children":[{"name":"::commentParse","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"Lsun.nio.cs.StreamDecoder","value":1,"children":[{"name":"::\u003cinit\u003e","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"Lorg.eclipse.jdt.internal.compiler.SourceElementParser","value":1,"children":[{"name":"::consumeExitVariableWithInitialization","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"UncommonTrapBlob","value":1,"children":[{"name":"Deoptimization::fetch_unroll_info_helper(JavaThread*)","value":1,"children":[{"name":"vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"name":"Lorg.eclipse.jdt.internal.compiler.parser.Parser","value":2,"children":[{"name":"::parse","value":2,"children":[{"name":"[unknown]","value":2,"children":[{"name":"Lorg.eclipse.jdt.internal.compiler.parser.Parser","value":2,"children":[{"name":"::consumeModifiers","value":2,"children":[{"name":"Interpreter","value":2,"children":[{"name":"InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*)","value":2,"children":[{"name":"InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*)","value":2,"children":[{"name":"SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*)","value":2,"children":[{"name":"AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*)","value":2,"children":[{"name":"SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149]","value":2,"children":[{"name":"AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*)","value":2,"children":[{"name":"CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*)","value":2,"children":[{"name":"CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*)","value":2,"children":[{"name":"os::PlatformEvent::unpark()","value":2,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"Lsun.nio.cs.StreamDecoder","value":1,"children":[{"name":"::read","value":1,"children":[{"name":"counter_overflow Runtime1 stub","value":1,"children":[{"name":"Runtime1::counter_overflow(JavaThread*, int, Method*)","value":1,"children":[{"name":"Deoptimization::deoptimize_frame(JavaThread*, long*)","value":1,"children":[{"name":"Deoptimization::deoptimize_frame_internal(JavaThread*, long*)","value":1,"children":[{"name":"Deoptimization::deoptimize(JavaThread*, frame, RegisterMap*)","value":1,"children":[{"name":"Deoptimization::revoke_biases_of_monitors(JavaThread*, frame, RegisterMap*)","value":1,"children":[{"name":"vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*)","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"name":"java","value":2,"children":[{"name":"start_thread","value":2,"children":[{"name":"java_start(Thread*)","value":1,"children":[{"name":"Monitor::wait(bool, long, bool)","value":1,"children":[{"name":"Monitor::IWait(Thread*, long)","value":1,"children":[{"name":"os::PlatformEvent::park()","value":1,"children":[]}]}]}]},{"name":"JavaMain","value":1,"children":[{"name":"jni_CallStaticVoidMethod","value":1,"children":[{"name":"jni_invoke_static(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .isra.197]","value":1,"children":[{"name":"JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*)","value":1,"children":[{"name":"call_stub","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"JVM_InvokeMethod","value":1,"children":[{"name":"Reflection::invoke_method(oopDesc*, Handle, objArrayHandle, Thread*)","value":1,"children":[{"name":"Reflection::invoke(instanceKlassHandle, methodHandle, Handle, bool, objArrayHandle, BasicType, objArrayHandle, bool, Thread*)","value":1,"children":[{"name":"JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*)","value":1,"children":[{"name":"call_stub","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"JVM_InvokeMethod","value":1,"children":[{"name":"Reflection::invoke_method(oopDesc*, Handle, objArrayHandle, Thread*)","value":1,"children":[{"name":"Reflection::invoke(instanceKlassHandle, methodHandle, Handle, bool, objArrayHandle, BasicType, objArrayHandle, bool, Thread*)","value":1,"children":[{"name":"JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*)","value":1,"children":[{"name":"call_stub","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Interpreter","value":1,"children":[{"name":"Lorg.eclipse.jdt.internal.compiler.parser.Scanner","value":1,"children":[{"name":"::resetTo","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"Ljava.net.URI","value":1,"children":[{"name":"::isAbsolute","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"[unknown]","value":1,"children":[{"name":"Ljava.io.BufferedReader","value":1,"children":[{"name":"::\u003cinit\u003e","value":1,"children":[{"name":"counter_overflow Runtime1 stub","value":1,"children":[{"name":"Runtime1::counter_overflow(JavaThread*, int, Method*)","value":1,"children":[{"name":"SimpleThresholdPolicy::event(methodHandle, methodHandle, int, int, CompLevel, nmethod*, JavaThread*)","value":1,"children":[{"name":"AdvancedThresholdPolicy::method_invocation_event(methodHandle, methodHandle, CompLevel, nmethod*, JavaThread*)","value":1,"children":[{"name":"SimpleThresholdPolicy::compile(methodHandle, int, CompLevel, JavaThread*) [clone .part.149]","value":1,"children":[{"name":"AdvancedThresholdPolicy::submit_compile(methodHandle, int, CompLevel, JavaThread*)","value":1,"children":[{"name":"CompileBroker::compile_method(methodHandle, int, int, methodHandle, int, char const*, Thread*)","value":1,"children":[{"name":"CompileBroker::compile_method_base(methodHandle, int, int, methodHandle, int, char const*, Thread*)","value":1,"children":[{"name":"os::PlatformEvent::unpark()","value":1,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}
