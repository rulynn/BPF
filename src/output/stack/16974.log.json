{"name":"root","value":76,"children":[{"name":"VM Thread","value":76,"children":[{"name":"start_thread","value":76,"children":[{"name":"java_start(Thread*)","value":76,"children":[{"name":"JavaThread::thread_main_inner()","value":1,"children":[{"name":"CompileBroker::compiler_thread_loop()","value":1,"children":[{"name":"CompileBroker::invoke_compiler_on_method(CompileTask*)","value":1,"children":[{"name":"C2Compiler::compile_method(ciEnv*, ciMethod*, int)","value":1,"children":[{"name":"Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)","value":1,"children":[{"name":"Compile::Optimize()","value":1,"children":[{"name":"PhaseCCP::analyze()","value":1,"children":[{"name":"PhiNode::Value(PhaseTransform*) const","value":1,"children":[{"name":"Type::hashcons()","value":1,"children":[{"name":"Dict::Insert(void*, void*, bool)","value":1,"children":[{"name":"Dict::doubhash()","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]},{"name":"VMThread::run()","value":75,"children":[{"name":"VMThread::loop()","value":75,"children":[{"name":"os::PlatformEvent::unpark()","value":6,"children":[]},{"name":"SafepointSynchronize::begin()","value":20,"children":[{"name":"Monitor::wait(bool, long, bool)","value":20,"children":[{"name":"Monitor::IWait(Thread*, long)","value":20,"children":[{"name":"os::PlatformEvent::unpark()","value":9,"children":[]},{"name":"os::PlatformEvent::park()","value":11,"children":[]}]}]}]},{"name":"SafepointSynchronize::end()","value":11,"children":[{"name":"os::PlatformEvent::unpark()","value":11,"children":[]}]},{"name":"Monitor::wait(bool, long, bool)","value":24,"children":[{"name":"Monitor::IWait(Thread*, long)","value":24,"children":[{"name":"os::PlatformEvent::park(long)","value":24,"children":[]}]}]},{"name":"VMThread::evaluate_operation(VM_Operation*)","value":14,"children":[{"name":"VM_Operation::evaluate()","value":14,"children":[{"name":"VM_GenCollectForAllocation::doit()","value":14,"children":[{"name":"GenCollectorPolicy::satisfy_failed_allocation(unsigned long, bool)","value":14,"children":[{"name":"GenCollectedHeap::do_collection(bool, bool, unsigned long, bool, int)","value":14,"children":[{"name":"DefNewGeneration::collect(bool, bool, unsigned long, bool)","value":14,"children":[{"name":"GenCollectedHeap::gen_process_roots(int, bool, bool, GenCollectedHeap::ScanningOption, bool, OopsInGenClosure*, OopsInGenClosure*, CLDClosure*)","value":14,"children":[{"name":"GenCollectedHeap::process_roots(bool, GenCollectedHeap::ScanningOption, OopClosure*, OopClosure*, CLDClosure*, CLDClosure*, CodeBlobToOopClosure*)","value":14,"children":[{"name":"Threads::possibly_parallel_oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*)","value":14,"children":[{"name":"JavaThread::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*)","value":14,"children":[{"name":"frame::oops_interpreted_do(OopClosure*, CLDClosure*, RegisterMap const*, bool)","value":14,"children":[{"name":"Method::mask_for(int, InterpreterOopMap*)","value":14,"children":[{"name":"InstanceKlass::mask_for(methodHandle, int, InterpreterOopMap*)","value":14,"children":[{"name":"OopMapCache::lookup(methodHandle, int, InterpreterOopMap*) const","value":14,"children":[{"name":"OopMapCacheEntry::fill(methodHandle, int)","value":14,"children":[{"name":"OopMapForCacheEntry::compute_map(Thread*)","value":14,"children":[{"name":"GenerateOopMap::compute_map(Thread*)","value":7,"children":[{"name":"GenerateOopMap::do_interpretation()","value":7,"children":[{"name":"GenerateOopMap::init_basic_blocks()","value":7,"children":[{"name":"GenerateOopMap::init_state()","value":1,"children":[{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":1,"children":[{"name":"ThreadCritical::ThreadCritical()","value":1,"children":[]}]}]}]},{"name":"Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum)","value":6,"children":[{"name":"ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum)","value":6,"children":[{"name":"ThreadCritical::ThreadCritical()","value":6,"children":[]}]}]}]}]}]},{"name":"Chunk::next_chop()","value":7,"children":[{"name":"ThreadCritical::ThreadCritical()","value":7,"children":[]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}
